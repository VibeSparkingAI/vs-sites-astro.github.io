<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Vibe Sparking AI | Blog</title><description/><link>https://www.vibesparking.com/</link><language>en</language><item><title>Build an Efficient, Lightweight, and Controlled Spec‑Driven Workflow with OpenSpec + Claude Code</title><link>https://www.vibesparking.com/en/blog/ai/openspec/2025-10-17-openspec-claude-code-dev-process/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/openspec/2025-10-17-openspec-claude-code-dev-process/</guid><pubDate>Fri, 17 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Build an Efficient, Lightweight, and Controlled Spec‑Driven Workflow with OpenSpec + Claude Code --&gt;
&lt;p&gt;When teams start collaborating with AI coding assistants, clearly answering “what to build, how to build it, and how we know it’s done” becomes crucial. This guide walks you through a practical, reviewable, and traceable development workflow using OpenSpec (documentation‑driven development) together with Claude Code (an intelligent coding assistant).&lt;/p&gt;
&lt;p&gt;Who this is for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Teams that want specs before changes in multi‑person collaboration&lt;/li&gt;
&lt;li&gt;People/teams that want AI assistants embedded into a standard workflow&lt;/li&gt;
&lt;li&gt;Projects that require approval, archiving, or compliance control&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;core-principles--specs-are-truth&quot;&gt;Core Principles — Specs Are Truth&lt;/h2&gt;&lt;a href=&quot;#core-principles--specs-are-truth&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Core Principles — Specs Are Truth”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Specs are truth: &lt;code dir=&quot;auto&quot;&gt;openspec/specs&lt;/code&gt; represents the currently delivered source of truth.&lt;/li&gt;
&lt;li&gt;Propose before changes: any change impacting behavior/architecture/security/performance starts in &lt;code dir=&quot;auto&quot;&gt;changes/[id]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Three‑phase loop: Create change → Implement tasks → Archive and codify.&lt;/li&gt;
&lt;li&gt;AI works to specs: Claude Code always uses OpenSpec as the authoritative context.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;install-and-initialize&quot;&gt;Install and Initialize&lt;/h2&gt;&lt;a href=&quot;#install-and-initialize&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Install and Initialize”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Install OpenSpec (global):&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;install&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-g&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;@fission-ai/openspec@latest&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--version&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Initialize at the project root:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;init&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Initialization will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write a cross‑assistant AGENTS guide at the repo root&lt;/li&gt;
&lt;li&gt;Generate the &lt;code dir=&quot;auto&quot;&gt;openspec/&lt;/code&gt; directory structure&lt;/li&gt;
&lt;li&gt;Establish unified collaboration instructions for Claude Code / Cursor / Codex, etc.&lt;/li&gt;
&lt;li&gt;Later you can run &lt;code dir=&quot;auto&quot;&gt;openspec update&lt;/code&gt; to refresh the guidelines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recommended directory structure (auto‑generated):&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;text&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;openspec/&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;├── project.md              # Project conventions, background, stack&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;├── specs/                  # Delivered capabilities (source of truth)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   └── [capability]/&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│       ├── spec.md         # Requirements + scenarios (canonical format)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│       └── design.md       # Technical approach (optional)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;├── changes/                # Proposals (pending changes)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   ├── [change-id]/&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   │   ├── proposal.md     # Why / What / Impact&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   │   ├── tasks.md        # Implementation checklist&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   │   ├── design.md       # For large changes&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   │   └── specs/          # Delta for affected capabilities&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   │       └── [capability]/spec.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;│   └── archive/            # Archived changes&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h2 id=&quot;collaborating-with-claude-code&quot;&gt;Collaborating with Claude Code&lt;/h2&gt;&lt;a href=&quot;#collaborating-with-claude-code&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Collaborating with Claude Code”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;OpenSpec provides project context and process standards; Claude Code executes the Read → Generate → Implement → Verify cycle. After initialization, start your Claude Code session with prompts like these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fill in project context:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please read &lt;code dir=&quot;auto&quot;&gt;openspec/project.md&lt;/code&gt;. Based on the repo’s current state, help me fully document project goals, tech stack, conventions, external dependencies, constraints, and naming standards.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create the first change proposal:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to add “[your feature]”. Please create an OpenSpec change proposal (&lt;code dir=&quot;auto&quot;&gt;changes/[id]/&lt;/code&gt;) including &lt;code dir=&quot;auto&quot;&gt;proposal.md&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;tasks.md&lt;/code&gt;, and the relevant specs delta under &lt;code dir=&quot;auto&quot;&gt;changes/[id]/specs/&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explain/enforce the workflow:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using &lt;code dir=&quot;auto&quot;&gt;openspec/AGENTS.md&lt;/code&gt;, explain the three‑phase workflow and strictly follow it in subsequent steps: propose and validate first, implement after approval, archive when complete.&lt;/p&gt;
&lt;p&gt;Tip: After installation, Codex/Windsurf/Cursor, etc. will also pick up the same guidelines so multiple assistants collaborate consistently.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;threephase-workflow-from-openspecagentsmd&quot;&gt;Three‑Phase Workflow (from &lt;code dir=&quot;auto&quot;&gt;openspec/AGENTS.md&lt;/code&gt;)&lt;/h2&gt;&lt;a href=&quot;#threephase-workflow-from-openspecagentsmd&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Three‑Phase Workflow (from openspec/AGENTS.md)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Create Change&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;When: new capability, breaking change, architecture/security/performance strategy changes&lt;/li&gt;
&lt;li&gt;Steps:
&lt;ul&gt;
&lt;li&gt;Pick a unique &lt;code dir=&quot;auto&quot;&gt;change-id&lt;/code&gt; (kebab‑case, verb‑prefixed: &lt;code dir=&quot;auto&quot;&gt;add-&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;update-&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;remove-&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;refactor-&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Generate &lt;code dir=&quot;auto&quot;&gt;proposal.md&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;tasks.md&lt;/code&gt;, and &lt;code dir=&quot;auto&quot;&gt;design.md&lt;/code&gt; if needed&lt;/li&gt;
&lt;li&gt;Write specs delta using operation headers: &lt;code dir=&quot;auto&quot;&gt;## ADDED|MODIFIED|REMOVED|RENAMED Requirements&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Validate: &lt;code dir=&quot;auto&quot;&gt;openspec validate &amp;#x3C;id&gt; --strict&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Only implement after approval&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Implement Change&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Steps:
&lt;ul&gt;
&lt;li&gt;Read in order: &lt;code dir=&quot;auto&quot;&gt;proposal.md&lt;/code&gt; → &lt;code dir=&quot;auto&quot;&gt;design.md&lt;/code&gt; (optional) → &lt;code dir=&quot;auto&quot;&gt;tasks.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Implement strictly in &lt;code dir=&quot;auto&quot;&gt;tasks.md&lt;/code&gt; order; check off each item when complete&lt;/li&gt;
&lt;li&gt;Update overall task status only when all are completed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Archive Change&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;After deployment:
&lt;ul&gt;
&lt;li&gt;Move &lt;code dir=&quot;auto&quot;&gt;changes/[id]&lt;/code&gt; to &lt;code dir=&quot;auto&quot;&gt;changes/archive/YYYY-MM-DD-[id]/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If capability behavior changed, update &lt;code dir=&quot;auto&quot;&gt;openspec/specs/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run strict validation: &lt;code dir=&quot;auto&quot;&gt;openspec validate --strict&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;code dir=&quot;auto&quot;&gt;openspec archive [change] [--yes|-y]&lt;/code&gt; to auto‑archive (tooling changes may use &lt;code dir=&quot;auto&quot;&gt;--skip-specs&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;key-spec-file-format-important&quot;&gt;Key Spec File Format (Important)&lt;/h2&gt;&lt;a href=&quot;#key-spec-file-format-important&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Key Spec File Format (Important)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Each requirement uses &lt;code dir=&quot;auto&quot;&gt;### Requirement: ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Each requirement must have at least one scenario using a level‑4 heading:&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;markdown&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82B1FF;--1:#3B61B0&quot;&gt;#### Scenario: Returns success&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--0fw:bold;--1:#3B61B0;--1fw:bold&quot;&gt;WHEN&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; input is valid&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--0fw:bold;--1:#3B61B0;--1fw:bold&quot;&gt;THEN&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; return 200 with data&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Do not use bullets or bold text instead of a scenario heading (the parser will fail).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Three types of delta changes:
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;## ADDED Requirements&lt;/code&gt; for new capabilities&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;## MODIFIED Requirements&lt;/code&gt; for behavior changes (paste the full updated requirement block, not a diff)&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;## REMOVED Requirements&lt;/code&gt; for removals (include rationale and migration)&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;## RENAMED Requirements&lt;/code&gt; for renames only&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;from-zero-to-one-a-happy-path&quot;&gt;From Zero to One: A Happy Path&lt;/h2&gt;&lt;a href=&quot;#from-zero-to-one-a-happy-path&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “From Zero to One: A Happy Path”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Explore current state&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;spec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--long&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;list&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Full‑text search via ripgrep is also recommended:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;rg&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-n&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;Requirement:|Scenario:&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;openspec/specs&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Choose a change ID and scaffold&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;markdown&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82B1FF;--1:#3B61B0&quot;&gt;# Example: add-direct-youtube-subtitle-download&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82B1FF;--1:#3B61B0&quot;&gt;# You can also ask Claude Code to create the directory and file skeletons for you&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Write the delta (example)&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;markdown&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82B1FF;--1:#3B61B0&quot;&gt;## ADDED Requirements&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82B1FF;--1:#3B61B0&quot;&gt;### Requirement: Direct subtitle download&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;The system SHALL request subtitle files directly from YouTube without relying on M3U8.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82B1FF;--1:#3B61B0&quot;&gt;#### Scenario: Download succeeds&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--0fw:bold;--1:#3B61B0;--1fw:bold&quot;&gt;WHEN&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; a valid video and subtitle language are provided&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--0fw:bold;--1:#3B61B0;--1fw:bold&quot;&gt;THEN&lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;**&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; download the corresponding subtitles and save to the target directory&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Strict validation&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;validate&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;add-direct-youtube-subtitle-download&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--strict&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Approval → Implementation&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;apply&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;add-direct-youtube-subtitle-download&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;After approval, have Claude Code implement items in &lt;code dir=&quot;auto&quot;&gt;tasks.md&lt;/code&gt; step by step&lt;/li&gt;
&lt;li&gt;Check off one item when it’s done; proceed until all are &lt;code dir=&quot;auto&quot;&gt;- [x]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;Archive and codify&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;archive&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;add-direct-youtube-subtitle-download&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--yes&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;validate&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--strict&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h2 id=&quot;best-practices-with-claude-code&quot;&gt;Best Practices with Claude Code&lt;/h2&gt;&lt;a href=&quot;#best-practices-with-claude-code&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Best Practices with Claude Code”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Always let Claude Code “read” first: &lt;code dir=&quot;auto&quot;&gt;openspec/project.md&lt;/code&gt;, relevant &lt;code dir=&quot;auto&quot;&gt;specs/[capability]/spec.md&lt;/code&gt;, and &lt;code dir=&quot;auto&quot;&gt;changes/[id]/proposal.md|tasks.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Execute strictly against &lt;code dir=&quot;auto&quot;&gt;tasks.md&lt;/code&gt; as the single source of truth; check off as you go&lt;/li&gt;
&lt;li&gt;Prioritize edits directly related to the proposed change; avoid unrelated refactors&lt;/li&gt;
&lt;li&gt;When ambiguous, ask 1–2 clarifying questions before scaffolding&lt;/li&gt;
&lt;li&gt;When referencing code locations, use &lt;code dir=&quot;auto&quot;&gt;src/module.ts:42&lt;/code&gt; single‑line pointers&lt;/li&gt;
&lt;li&gt;Built‑in validation: &lt;code dir=&quot;auto&quot;&gt;openspec validate [change] --strict&lt;/code&gt;; if issues occur, use &lt;code dir=&quot;auto&quot;&gt;--json&lt;/code&gt; to diagnose&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;cli-cheat-sheet&quot;&gt;CLI Cheat Sheet&lt;/h2&gt;&lt;a href=&quot;#cli-cheat-sheet&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “CLI Cheat Sheet”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h1 id=&quot;list--show--diff--validate&quot;&gt;List / show / diff / validate&lt;/h1&gt;&lt;a href=&quot;#list--show--diff--validate&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “List / show / diff / validate”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;list&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--specs&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;show&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; [item]              &lt;/span&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# change or spec&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;diff&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; [change]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;validate&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; [item] --strict&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Init / update&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;init&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; [path]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;update&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; [path]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Archive (post‑deploy)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;openspec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;archive&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; [change] [--yes&lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;-y]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Common flags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;--json&lt;/code&gt; machine‑readable output&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;--type change|spec&lt;/code&gt; to specify the object type&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;--strict&lt;/code&gt; strict validation&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;--skip-specs&lt;/code&gt; archive only (skip specs update)&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;--yes|-y&lt;/code&gt; skip confirmation (good for CI)&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;proposal-vs-direct-fix--when-to-use-which&quot;&gt;Proposal vs. Direct Fix — When to Use Which?&lt;/h2&gt;&lt;a href=&quot;#proposal-vs-direct-fix--when-to-use-which&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Proposal vs. Direct Fix — When to Use Which?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Propose (recommended) when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New features/capabilities&lt;/li&gt;
&lt;li&gt;Breaking changes (API/Schema)&lt;/li&gt;
&lt;li&gt;Architecture/pattern shifts&lt;/li&gt;
&lt;li&gt;Performance/security strategy changes that affect behavior&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Direct edits are fine when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bug fixes (restoring intended behavior)&lt;/li&gt;
&lt;li&gt;Copy/format/comments&lt;/li&gt;
&lt;li&gt;Non‑breaking dependency upgrades&lt;/li&gt;
&lt;li&gt;Minor configuration tweaks&lt;/li&gt;
&lt;li&gt;Tests that cover existing behavior&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;common-pitfalls-and-troubleshooting&quot;&gt;Common Pitfalls and Troubleshooting&lt;/h2&gt;&lt;a href=&quot;#common-pitfalls-and-troubleshooting&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Common Pitfalls and Troubleshooting”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;“Change must have at least one delta”
&lt;ul&gt;
&lt;li&gt;Check that &lt;code dir=&quot;auto&quot;&gt;changes/[id]/specs/&lt;/code&gt; contains &lt;code dir=&quot;auto&quot;&gt;.md&lt;/code&gt; files&lt;/li&gt;
&lt;li&gt;Ensure files include &lt;code dir=&quot;auto&quot;&gt;## ADDED|MODIFIED|REMOVED&lt;/code&gt; operation headers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;“Requirement must have at least one scenario”
&lt;ul&gt;
&lt;li&gt;Scenario headings must be &lt;code dir=&quot;auto&quot;&gt;#### Scenario: ...&lt;/code&gt; (level‑4 heading)&lt;/li&gt;
&lt;li&gt;Do not use bullets or bold text&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delta parsing failures
&lt;ul&gt;
&lt;li&gt;Use &lt;code dir=&quot;auto&quot;&gt;openspec show [change] --json --deltas-only&lt;/code&gt; to debug&lt;/li&gt;
&lt;li&gt;Compare with originals under &lt;code dir=&quot;auto&quot;&gt;openspec/specs/&lt;/code&gt; and ensure &lt;code dir=&quot;auto&quot;&gt;MODIFIED&lt;/code&gt; is a full replacement block&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Use OpenSpec to make Requirements → Design → Tasks → Changes explicit from day one and treat them as the project’s source of truth. Then leverage Claude Code for efficient execution and collaboration so AI delivers within clear boundaries. The benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Specs first to reduce rework; approvals up front to lower risk&lt;/li&gt;
&lt;li&gt;Task closure with traceable outputs; archivable changes for reusable knowledge&lt;/li&gt;
&lt;/ul&gt;</content:encoded><category>Claude Code</category><category>OpenSpec</category></item><item><title>Q3 2025 AI Chip Supply Chain Earnings Start Strong: ASML and TSMC Beat — Where Does NVIDIA Go from Here?</title><link>https://www.vibesparking.com/en/blog/finance/us-market/2025-10-16-2025-q3-ai-chip-supply-chain-earnings-outlook/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/finance/us-market/2025-10-16-2025-q3-ai-chip-supply-chain-earnings-outlook/</guid><pubDate>Thu, 16 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # 2025年Q3 AI芯片产业链财报开门红：阿斯麦、台积电业绩超预期，英伟达将何去何从？ --&gt;
&lt;div&gt;&lt;h2 id=&quot;opening-tech-earnings-season-kicks-off-supplychain-confidence-surges&quot;&gt;Opening: Tech Earnings Season Kicks Off, Supply‑Chain Confidence Surges&lt;/h2&gt;&lt;a href=&quot;#opening-tech-earnings-season-kicks-off-supplychain-confidence-surges&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Opening: Tech Earnings Season Kicks Off, Supply‑Chain Confidence Surges”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;As this earnings season shows, the AI chip supply chain is firing on all cylinders. ASML and TSMC both delivered upside surprises in their Q3 2025 results. More importantly, both turned distinctly more optimistic in their outlooks — a sharp contrast with their cautious tone three months ago.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;asml-q3-highlights&quot;&gt;ASML Q3 Highlights&lt;/h3&gt;&lt;a href=&quot;#asml-q3-highlights&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “ASML Q3 Highlights”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Revenue €7.5B (≈$8.2B), gross margin 51.6%&lt;/li&gt;
&lt;li&gt;Net income €2.125B, above market expectations&lt;/li&gt;
&lt;li&gt;Q4 guidance raised sharply to €9.2–9.8B; gross margin 51%–53%&lt;/li&gt;
&lt;li&gt;The key shift: management explicitly said 2026 revenue will not be below 2025, reversing prior uncertainty&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;tsmcs-record-q3&quot;&gt;TSMC’s Record Q3&lt;/h3&gt;&lt;a href=&quot;#tsmcs-record-q3&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “TSMC’s Record Q3”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Revenue NT$989.92B (≈$32.2B), up 39% y/y&lt;/li&gt;
&lt;li&gt;Net income NT$452.3B (≈$14.8B), a record high&lt;/li&gt;
&lt;li&gt;ADR EPS up 39% y/y; dynamic P/E only 33x, PEG &amp;#x3C; 1&lt;/li&gt;
&lt;li&gt;Full‑year revenue growth target raised from 30% to 35%&lt;/li&gt;
&lt;li&gt;Gross margin at a strong 59.5%, underscoring pricing power&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The core message from both prints: AI acceleration is itself being accelerated.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;supplychain-triangle-asml--tsmc--nvidia&quot;&gt;Supply‑Chain Triangle: ASML → TSMC → NVIDIA&lt;/h2&gt;&lt;a href=&quot;#supplychain-triangle-asml--tsmc--nvidia&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Supply‑Chain Triangle: ASML → TSMC → NVIDIA”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;To understand how these three companies interrelate, start with the key nodes in the AI chip value chain:&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;asml--the-photolithography-monopolist&quot;&gt;ASML — The Photolithography Monopolist&lt;/h3&gt;&lt;a href=&quot;#asml--the-photolithography-monopolist&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “ASML — The Photolithography Monopolist”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;World’s only supplier of EUV lithography equipment&lt;/li&gt;
&lt;li&gt;Each EUV system sells for &gt;$200M; the latest High‑NA EUV is ~$380M per unit&lt;/li&gt;
&lt;li&gt;All advanced‑node manufacturers (TSMC, Samsung, Intel) depend heavily on ASML&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;tsmc--the-king-of-advanced-foundry&quot;&gt;TSMC — The King of Advanced Foundry&lt;/h3&gt;&lt;a href=&quot;#tsmc--the-king-of-advanced-foundry&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “TSMC — The King of Advanced Foundry”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;61% global foundry share; 67% share in advanced nodes (&amp;#x3C;7nm)&lt;/li&gt;
&lt;li&gt;Chips from all top AI designers (NVIDIA, Apple, AMD, etc.) are manufactured by TSMC&lt;/li&gt;
&lt;li&gt;Mass‑production at 3nm; 2nm in progress&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;nvidia--the-ai-chip-design-leader&quot;&gt;NVIDIA — The AI Chip Design Leader&lt;/h3&gt;&lt;a href=&quot;#nvidia--the-ai-chip-design-leader&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “NVIDIA — The AI Chip Design Leader”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;~$4.38T market cap; data‑center business is ~88% of revenue&lt;/li&gt;
&lt;li&gt;Relies entirely on TSMC’s advanced nodes to produce H100, H200, and the new Blackwell series&lt;/li&gt;
&lt;li&gt;Blackwell generated ~$11B in FY25 Q4 revenue alone — the “fastest product ramp” in company history&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The transmission goes: ASML’s EUV tools → TSMC’s advanced‑node capacity → NVIDIA’s AI chip supply. A bottleneck at any node constrains the entire chain.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;data-stockperformance-and-results-correlations&quot;&gt;Data: Stock‑Performance and Results Correlations&lt;/h2&gt;&lt;a href=&quot;#data-stockperformance-and-results-correlations&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Data: Stock‑Performance and Results Correlations”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Analyzing post‑earnings stock moves for these three from 2022–2025 reveals important patterns:&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;finding-1-tsmcs-link-to-nvidia-is-tighter&quot;&gt;Finding 1: TSMC’s Link to NVIDIA Is Tighter&lt;/h3&gt;&lt;a href=&quot;#finding-1-tsmcs-link-to-nvidia-is-tighter&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Finding 1: TSMC’s Link to NVIDIA Is Tighter”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Our statistics show:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the 10 trading days after TSMC earnings, NVIDIA’s return correlation is 0.70 (p=0.004) — statistically significant&lt;/li&gt;
&lt;li&gt;After ASML earnings, NVIDIA’s 10‑day correlation is 0.49 (p=0.065) — weaker&lt;/li&gt;
&lt;li&gt;Over 30‑day windows, TSMC↔NVIDIA correlation stays ~0.48; ASML drops to ~0.13&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This supports the intuition that the nearer the link in the chain, the stronger the co‑movement. As NVIDIA’s direct supplier, TSMC’s capacity and process progress directly shape how many chips NVIDIA can ship.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;finding-2-supplier-earnings-tend-to-lift-nvidia&quot;&gt;Finding 2: Supplier Earnings Tend to Lift NVIDIA&lt;/h3&gt;&lt;a href=&quot;#finding-2-supplier-earnings-tend-to-lift-nvidia&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Finding 2: Supplier Earnings Tend to Lift NVIDIA”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;On average:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the 10 days after ASML reports, NVIDIA rose 3.8%; over 30 days, +14.2%&lt;/li&gt;
&lt;li&gt;In the 10 days after TSMC reports, NVIDIA rose 2.1%; over 30 days, +15.8%&lt;/li&gt;
&lt;li&gt;The effect was most pronounced in 2023 (the breakout year for AI): post‑ASML 30‑day average +19.8%; post‑TSMC +26.7%&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;finding-3-correlations-weakened-in-20242025-but-remain-meaningful&quot;&gt;Finding 3: Correlations Weakened in 2024–2025 but Remain Meaningful&lt;/h3&gt;&lt;a href=&quot;#finding-3-correlations-weakened-in-20242025-but-remain-meaningful&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Finding 3: Correlations Weakened in 2024–2025 but Remain Meaningful”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;As NVIDIA’s market cap surpassed $3T, its stock began to reflect more macro factors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fed policy expectations&lt;/li&gt;
&lt;li&gt;U.S. export‑control policy toward China&lt;/li&gt;
&lt;li&gt;Competition (AMD; hyperscaler in‑house chips)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even so, supplier earnings remain pivotal indicators for NVIDIA — especially TSMC’s expansion plans and ASML’s EUV shipment cadence, which map to NVIDIA’s potential shipments over the next 12–18 months.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;shareprice-performance-comparison&quot;&gt;Share‑Price Performance Comparison&lt;/h3&gt;&lt;a href=&quot;#shareprice-performance-comparison&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Share‑Price Performance Comparison”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NVIDIA vs. ASML vs. TSMC since early 2022 (indexed to 100 at Jan 2022)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The chart shows NVIDIA up 497%, TSMC up 137%, and ASML up 27% over the period. The gap reflects differences in value capture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NVIDIA&lt;/strong&gt;: commands the highest value‑added layer via CUDA software ecosystem and leading chip design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TSMC&lt;/strong&gt;: manufacturing profits are high (≈60% gross margin) but massive capex tempers stock elasticity&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ASML&lt;/strong&gt;: EUV monopoly, but the customer base is limited (principally TSMC, Samsung, Intel) and deliveries are long‑cycle, making growth steadier&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;earningsseason-by-year-who-leads&quot;&gt;Earnings‑Season by Year: Who Leads?&lt;/h3&gt;&lt;a href=&quot;#earningsseason-by-year-who-leads&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Earnings‑Season by Year: Who Leads?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;



































&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Year&lt;/th&gt;&lt;th&gt;NVIDIA Return&lt;/th&gt;&lt;th&gt;ASML Return&lt;/th&gt;&lt;th&gt;TSMC Return&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;2022&lt;/td&gt;&lt;td&gt;-51.5%&lt;/td&gt;&lt;td&gt;-31.5%&lt;/td&gt;&lt;td&gt;-42.2%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2023&lt;/td&gt;&lt;td&gt;+245.8%&lt;/td&gt;&lt;td&gt;+37.7%&lt;/td&gt;&lt;td&gt;+40.5%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2024&lt;/td&gt;&lt;td&gt;+178.8%&lt;/td&gt;&lt;td&gt;-3.3%&lt;/td&gt;&lt;td&gt;+94.5%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2025 (YTD)&lt;/td&gt;&lt;td&gt;+33.9%&lt;/td&gt;&lt;td&gt;+45.7%&lt;/td&gt;&lt;td&gt;+54.3%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Key observations:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2022 bear market&lt;/strong&gt;: all three fell sharply; ASML fell least, showing defensiveness&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2023 “AI year one”&lt;/strong&gt;: NVIDIA +246%; TSMC and ASML more moderate (+38–41%)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2024 divergence&lt;/strong&gt;: NVIDIA +179%; TSMC +95%; ASML −3% — reflecting China‑related limits and macro concerns&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2025 YTD&lt;/strong&gt;: first time all three are rising together; TSMC/ASML outpacing NVIDIA as markets re‑rate upstream value&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;three-key-signals-from-this-earnings-season&quot;&gt;Three Key Signals from This Earnings Season&lt;/h2&gt;&lt;a href=&quot;#three-key-signals-from-this-earnings-season&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Three Key Signals from This Earnings Season”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;signal-1-asmls-2026-stance-flips-180-degrees&quot;&gt;Signal 1: ASML’s 2026 Stance Flips 180 Degrees&lt;/h3&gt;&lt;a href=&quot;#signal-1-asmls-2026-stance-flips-180-degrees&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Signal 1: ASML’s 2026 Stance Flips 180 Degrees”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;In July 2024 (Q2), ASML cautioned that “given rising macro and geopolitical uncertainty, we cannot confirm growth in 2026,” triggering a ~16% single‑day drop.&lt;/p&gt;
&lt;p&gt;In Q3, management stated clearly that &lt;strong&gt;“2026 total revenue will not be below 2025,”&lt;/strong&gt; stressing enduring AI‑driven demand. Drivers include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Strong EUV orders: €5.4B net bookings in Q3, with €3.6B from EUV&lt;/li&gt;
&lt;li&gt;High‑NA EUV shipments have begun, at higher price points (~$380M/unit)&lt;/li&gt;
&lt;li&gt;TSMC, Samsung, Intel are all expanding; photolithography demand remains robust&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;signal-2-tsmc-lifts-2025-fullyear-growth-from-30-to-35&quot;&gt;Signal 2: TSMC Lifts 2025 Full‑Year Growth from 30% to 35%&lt;/h3&gt;&lt;a href=&quot;#signal-2-tsmc-lifts-2025-fullyear-growth-from-30-to-35&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Signal 2: TSMC Lifts 2025 Full‑Year Growth from 30% to 35%”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;In Q3, TSMC raised its 2025 USD revenue‑growth outlook from 30% to 35% — the second raise this year. CFO Wendell Huang noted: “We saw strong demand for advanced technologies in Q3, and as we enter Q4, we expect the strength to continue.”&lt;/p&gt;
&lt;p&gt;More importantly, TSMC said 3nm and more advanced nodes are fully booked, with customers “competing for capacity,” indicating strong demand from NVIDIA, Apple, and others.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;signal-3-nvidia-blackwell-is-supplyconstrained-q4-guide-above-street&quot;&gt;Signal 3: NVIDIA Blackwell Is Supply‑Constrained; Q4 Guide Above Street&lt;/h3&gt;&lt;a href=&quot;#signal-3-nvidia-blackwell-is-supplyconstrained-q4-guide-above-street&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Signal 3: NVIDIA Blackwell Is Supply‑Constrained; Q4 Guide Above Street”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;While NVIDIA has not yet reported Q3 (due Nov 19), Q2 already showed a rapid Blackwell ramp:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q2 Blackwell revenue +17% q/q&lt;/li&gt;
&lt;li&gt;Q3 guide $54.0B (±2%), above the Street’s $52.7B&lt;/li&gt;
&lt;li&gt;CEO Jensen Huang: “Blackwell demand is surprising… we have achieved large‑scale mass production of Blackwell AI supercomputers.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UBS lifted its Blackwell Q4 revenue estimate from $5B to $9B, signaling demand far above prior expectations.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;forecast-nvidias-q3-and-the-road-ahead&quot;&gt;Forecast: NVIDIA’s Q3 and the Road Ahead&lt;/h2&gt;&lt;a href=&quot;#forecast-nvidias-q3-and-the-road-ahead&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Forecast: NVIDIA’s Q3 and the Road Ahead”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Based on supplier prints and historical correlations, we estimate:&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;q3-reports-nov-19&quot;&gt;Q3 (reports Nov 19)&lt;/h3&gt;&lt;a href=&quot;#q3-reports-nov-19&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Q3 (reports Nov 19)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Revenue&lt;/strong&gt;: consensus $54.0B; we see a modest beat to $54.5–55.0B&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data‑center revenue&lt;/strong&gt;: $47–48B (≈88–89% mix)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gross margin&lt;/strong&gt;: 73–74%, a touch above Q2’s 72.7%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Q4 guide&lt;/strong&gt;: $60–65B as Blackwell continues to ramp&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;stock-outlook&quot;&gt;Stock outlook&lt;/h3&gt;&lt;a href=&quot;#stock-outlook&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Stock outlook”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Near term (1 month post‑print)&lt;/strong&gt;: if results land near expectations, shares could test the $200–210 range (≈11–17% above the current ~$180).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Through 2025 year‑end&lt;/strong&gt;: Street average target ~$222 (+23%).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Upside case&lt;/strong&gt;: if Blackwell capacity and demand both exceed expectations, HSBC’s $320 target is conceivable (+78%).&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;key-risks&quot;&gt;Key risks&lt;/h3&gt;&lt;a href=&quot;#key-risks&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Key risks”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Macro slowdown&lt;/strong&gt;: weaker global growth could curb enterprise IT spending&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rising competition&lt;/strong&gt;: AMD’s MI300 and hyperscaler in‑house silicon (Google TPU, Amazon Trainium) chip away at share&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geopolitics&lt;/strong&gt;: tighter U.S. export controls on China&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Valuation pressure&lt;/strong&gt;: current ~51x P/E sits well above the market average&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;investment-takeaways-positioning-for-the-ai-chip-chain&quot;&gt;Investment Takeaways: Positioning for the AI Chip Chain&lt;/h2&gt;&lt;a href=&quot;#investment-takeaways-positioning-for-the-ai-chip-chain&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Investment Takeaways: Positioning for the AI Chip Chain”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;core-holding-nvidia&quot;&gt;Core holding: NVIDIA&lt;/h3&gt;&lt;a href=&quot;#core-holding-nvidia&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Core holding: NVIDIA”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strengths&lt;/strong&gt;: clear technology lead and a moat built on CUDA’s software ecosystem&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Valuation&lt;/strong&gt;: ~51x P/E not trivial, but ~1.3 PEG (on 35–40% growth) remains reasonable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Allocation&lt;/strong&gt;: core position, ~50–60% of an AI‑theme sleeve&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;quality-anchor-tsmc&quot;&gt;Quality anchor: TSMC&lt;/h3&gt;&lt;a href=&quot;#quality-anchor-tsmc&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Quality anchor: TSMC”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strengths&lt;/strong&gt;: leading advanced‑node manufacturing; diversified blue‑chip customers (Apple, NVIDIA, AMD, etc.); hard to replace&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Valuation&lt;/strong&gt;: ~33.6x P/E, below NVIDIA; PEG &amp;#x3C; 1 — attractive&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Allocation&lt;/strong&gt;: primary holding for balanced profiles, ~30–40%&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;defensive-ballast-asml&quot;&gt;Defensive ballast: ASML&lt;/h3&gt;&lt;a href=&quot;#defensive-ballast-asml&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Defensive ballast: ASML”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strengths&lt;/strong&gt;: absolute EUV monopoly; high long‑term visibility&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Weaknesses&lt;/strong&gt;: slower growth; more sensitive to macro cycles; sold off in 2024 on China concerns&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Allocation&lt;/strong&gt;: defensive weight, ~10–20%&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;note-mind-the-transmission-lags-along-the-chain&quot;&gt;Note: Mind the transmission lags along the chain&lt;/h3&gt;&lt;a href=&quot;#note-mind-the-transmission-lags-along-the-chain&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Note: Mind the transmission lags along the chain”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Our work suggests ASML/TSMC earnings impact NVIDIA with lag:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Short term (≤10 days)&lt;/strong&gt;: higher correlations, smaller absolute moves&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Medium term (~30 days)&lt;/strong&gt;: weaker correlation, larger cumulative moves&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Longer term (quarterly)&lt;/strong&gt;: all three converge toward fundamentals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence we do not recommend short‑term trading purely on supplier reports; focus on multi‑quarter trends.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion-the-acceleration-of-ai-acceleration-is-just-beginning&quot;&gt;Conclusion: The Acceleration of AI Acceleration Is Just Beginning&lt;/h2&gt;&lt;a href=&quot;#conclusion-the-acceleration-of-ai-acceleration-is-just-beginning&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion: The Acceleration of AI Acceleration Is Just Beginning”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;ASML and TSMC’s Q3 beats are not only their own victories; they’re also barometers of supply‑chain health. As TSMC’s CFO put it, “We continue to see strong AI‑related demand, and we expect the trend to extend into 2026.”&lt;/p&gt;
&lt;p&gt;Historically, NVIDIA has risen an average 15.8% in the 30 days post‑TSMC earnings, and 14.2% after ASML. With both suppliers beating this season, NVIDIA enters its Q3 report with a constructive setup.&lt;/p&gt;
&lt;p&gt;For investors, the AI chip chain presents a rare case of full‑chain resonance: upstream ASML orderbooks are full; midstream TSMC is running flat out; downstream NVIDIA demand remains robust. In this backdrop, the acceleration of AI acceleration may be only getting started.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Risk Disclaimer&lt;/strong&gt;: Investing involves risk. This article is for reference only and does not constitute investment advice.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded><category>Finance</category><category>US Market</category><category>Investment</category><category>AI</category><category>NVIDIA</category><category>TSMC</category><category>ASML</category><category>Semiconductor</category><category>GPU</category></item><item><title>How ChatGPT Helps Fix Bluetooth Device UI Chaos</title><link>https://www.vibesparking.com/en/blog/ai/chatgpt/2025-10-16-chatgpt-fix-bluetooth-device-ui-chaos/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/chatgpt/2025-10-16-chatgpt-fix-bluetooth-device-ui-chaos/</guid><pubDate>Thu, 16 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Scenario recap: You built a mobile app that scans nearby BLE devices. Your office/ward/desk is full of the same model, all with the same name. The scan results keep “jumping” as new devices arrive; just as users tap one, it gets pushed away — pure frustration for a PM.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This article doesn’t go into protocol internals. Instead, it shows how to use ChatGPT as your AI interaction partner: turn complex technical constraints into a UI your team can build, users can understand, and QA can validate.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;1-align-on-technical-boundaries-first-then-pick-the-ui&quot;&gt;1) Align on technical boundaries first, then pick the UI&lt;/h2&gt;&lt;a href=&quot;#1-align-on-technical-boundaries-first-then-pick-the-ui&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Align on technical boundaries first, then pick the UI”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;For BLE scanning, a few facts directly shape your design:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Advertising payload: Useful info includes local name, service UUIDs, manufacturer data, Tx Power, etc. These can help you distinguish devices and filter. They’re read from the advertisement data structures.&lt;/li&gt;
&lt;li&gt;iOS does not expose MAC addresses (privacy). Apps receive a &lt;code dir=&quot;auto&quot;&gt;CBPeripheral.identifier&lt;/code&gt;-style UUID, and it is not guaranteed to be permanently stable. Do not bake “display/remember MAC address” into any cross‑platform plan. Prefer short codes/manufacturer data from the advertisement as the differentiator.&lt;/li&gt;
&lt;li&gt;Android can pre-filter and batch callbacks via &lt;code dir=&quot;auto&quot;&gt;ScanFilter&lt;/code&gt; and &lt;code dir=&quot;auto&quot;&gt;ScanSettings&lt;/code&gt; (e.g., filter by service UUID/manufacturer data and use &lt;code dir=&quot;auto&quot;&gt;setReportDelay&lt;/code&gt; for batched dispatch). This dramatically reduces UI jitter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these boundaries clear, ChatGPT can propose cross‑platform interaction patterns that are actionable, not just theory.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;2-break-i-cant-tap-the-right-one-into-three-solvable-ux-problems&quot;&gt;2) Break “I can’t tap the right one” into three solvable UX problems&lt;/h2&gt;&lt;a href=&quot;#2-break-i-cant-tap-the-right-one-into-three-solvable-ux-problems&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) Break “I can’t tap the right one” into three solvable UX problems”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;a-recognition-too-many-identical-names--which-one-do-i-pick&quot;&gt;A. Recognition: Too many identical names — which one do I pick?&lt;/h3&gt;&lt;a href=&quot;#a-recognition-too-many-identical-names--which-one-do-i-pick&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “A. Recognition: Too many identical names — which one do I pick?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Solution: Generate a human‑recognizable short label per device.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ask hardware to add a short code in the advertised name or Manufacturer Data (e.g., last 4 digits of S/N or batch + checksum). Surface it as a subtitle: &lt;code dir=&quot;auto&quot;&gt;Device Name · Short Code 3K7F&lt;/code&gt;. This is a common use of BLE advertisement.&lt;/li&gt;
&lt;li&gt;iOS cannot show MAC: use the short code and/or service signature from the advertisement as the distinguishing factor. Don’t promise MAC in product specs.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;b-jitter-list-jumps-as-it-refreshes-finger-misses-the-target&quot;&gt;B. Jitter: List jumps as it refreshes; finger misses the target&lt;/h3&gt;&lt;a href=&quot;#b-jitter-list-jumps-as-it-refreshes-finger-misses-the-target&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “B. Jitter: List jumps as it refreshes; finger misses the target”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Solution: Decouple “data changes” from “interface changes”.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Batched callbacks: On Android, enable &lt;code dir=&quot;auto&quot;&gt;ScanSettings.Builder#setReportDelay(xxx)&lt;/code&gt; so N updates arrive as a batch. Diff‑update the list once to reduce item shifts.&lt;/li&gt;
&lt;li&gt;Freeze interactive zones: When the user long‑presses or enters multi‑select, freeze sorting and positions. Only update light fields inside items (e.g., RSSI value). Merge the full refresh after the action. This follows the principle “don’t let refreshes interrupt the user’s task”.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;c-decision-load-too-noisy--help-me-narrow-scope-first&quot;&gt;C. Decision load: Too noisy — help me narrow scope first&lt;/h3&gt;&lt;a href=&quot;#c-decision-load-too-noisy--help-me-narrow-scope-first&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “C. Decision load: Too noisy — help me narrow scope first”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Solution: Put filter controls where the hand is.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Filter/Assist Chips above the list for one‑tap toggles like “Recently used only”, “Strong signal only”, “Connectable only”, “Target service only”. Chips are made for quick filtering.&lt;/li&gt;
&lt;li&gt;Make filtering/sorting intent‑aligned — avoid large jumps that break focus. NN/g specifically recommends minimizing “view jumping” when applying filters.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;3-a-readytoship-ui-package-for-pms-via-chatgpt&quot;&gt;3) A ready‑to‑ship UI package for PMs (via ChatGPT)&lt;/h2&gt;&lt;a href=&quot;#3-a-readytoship-ui-package-for-pms-via-chatgpt&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3) A ready‑to‑ship UI package for PMs (via ChatGPT)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;You can paste the following to ChatGPT to polish copy, generate a prototype (describe it), or output component and acceptance lists.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;1-list-item-anatomy&quot;&gt;(1) List item anatomy&lt;/h3&gt;&lt;a href=&quot;#1-list-item-anatomy&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “(1) List item anatomy”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Title: &lt;code dir=&quot;auto&quot;&gt;Device name&lt;/code&gt; (append batch/model if names collide)&lt;/li&gt;
&lt;li&gt;Subtitle: &lt;code dir=&quot;auto&quot;&gt;Short code · Service overview&lt;/code&gt; (e.g., &lt;code dir=&quot;auto&quot;&gt;3K7F · Battery, UpdateSvc&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Right‑side info: &lt;code dir=&quot;auto&quot;&gt;RSSI&lt;/code&gt; (supports the “tap the one you’re close to” mental model; if showing distance, prefer coarse buckets strong/medium/weak to avoid misleading precision)&lt;/li&gt;
&lt;li&gt;Status badges: &lt;code dir=&quot;auto&quot;&gt;Recently used&lt;/code&gt; / &lt;code dir=&quot;auto&quot;&gt;New device&lt;/code&gt; (reduces decision cost). Use small badges or Chips (MD3).&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;2-toplevel-quick-filters-chips&quot;&gt;(2) Top‑level quick filters (Chips)&lt;/h3&gt;&lt;a href=&quot;#2-toplevel-quick-filters-chips&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “(2) Top‑level quick filters (Chips)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;Recently used only&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;Strong signal only&lt;/code&gt; (&gt; −70 dBm), &lt;code dir=&quot;auto&quot;&gt;Connectable only&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;Target service only&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Interaction policy: Keep the viewport stable on toggle. Try not to move the currently focused item.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;3-sorting-and-grouping-avoid-the-alphabetical-trap&quot;&gt;(3) Sorting and grouping (avoid the alphabetical trap)&lt;/h3&gt;&lt;a href=&quot;#3-sorting-and-grouping-avoid-the-alphabetical-trap&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “(3) Sorting and grouping (avoid the alphabetical trap)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Default: Sort by &lt;code dir=&quot;auto&quot;&gt;last interaction time&lt;/code&gt; descending (user mental model: the thing I just used should be first).&lt;/li&gt;
&lt;li&gt;Alternative: Group into &lt;code dir=&quot;auto&quot;&gt;Recently used&lt;/code&gt; / &lt;code dir=&quot;auto&quot;&gt;New devices&lt;/code&gt;, then sort within groups by RSSI or last seen time. As NN/g notes, alphabetical sorting is rarely the best choice for decision tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;4-refresh-and-selection-stability&quot;&gt;(4) Refresh and selection stability&lt;/h3&gt;&lt;a href=&quot;#4-refresh-and-selection-stability&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “(4) Refresh and selection stability”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Combine Android batched callbacks with list diffing. When entering multi‑select/long‑press, freeze ordering; only “light‑update” fields inside items (e.g., RSSI).&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;5-crossplatform-identifier-strategy&quot;&gt;(5) Cross‑platform identifier strategy&lt;/h3&gt;&lt;a href=&quot;#5-crossplatform-identifier-strategy&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “(5) Cross‑platform identifier strategy”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Android: Use MAC (when available) or the advertised short code.&lt;/li&gt;
&lt;li&gt;iOS: Use &lt;code dir=&quot;auto&quot;&gt;CBPeripheral.identifier&lt;/code&gt; plus advertised short code/service signature. Do not commit to displaying/remembering MAC.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;4-copy-and-naming-you-can-drop-in-encn-hints--field-names&quot;&gt;4) Copy and naming you can drop in (EN/CN hints + field names)&lt;/h2&gt;&lt;a href=&quot;#4-copy-and-naming-you-can-drop-in-encn-hints--field-names&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4) Copy and naming you can drop in (EN/CN hints + field names)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Group headers (UI copy)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recently Used Devices / 最近使用过的设备&lt;/li&gt;
&lt;li&gt;New Devices / 新设备&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Filter chips (UI copy)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recently used / 只看最近使用&lt;/li&gt;
&lt;li&gt;Strong signal only (&gt; −70 dBm) / 只看强信号（&gt; −70 dBm）&lt;/li&gt;
&lt;li&gt;Connectable only / 只看可连接&lt;/li&gt;
&lt;li&gt;Target service only / 只看目标服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interfaces/fields (snake_case)&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;json&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;recently_used_devices&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: [&lt;/span&gt;&lt;span style=&quot;--0:#FFFFFF;--1:#984E4D&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;],&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;new_devices&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: [&lt;/span&gt;&lt;span style=&quot;--0:#FFFFFF;--1:#984E4D&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;],&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;filters&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;recently_used&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#FF6A83;--1:#A24848&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;rssi_threshold_dbm&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;-70&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;connectable_only&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#FF6A83;--1:#A24848&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&quot;service_uuid_includes&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: [&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#C789D6;--1:#7C5686&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;5-turn-plan--artifacts-with-chatgpt&quot;&gt;5) Turn “plan → artifacts” with ChatGPT&lt;/h2&gt;&lt;a href=&quot;#5-turn-plan--artifacts-with-chatgpt&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5) Turn “plan → artifacts” with ChatGPT”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Feed the “requirements + components” above to ChatGPT and ask for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prototype description for design: item hierarchy, chip interactions, empty‑state copy.&lt;/li&gt;
&lt;li&gt;Engineering checklist: Android &lt;code dir=&quot;auto&quot;&gt;ScanFilter&lt;/code&gt;/&lt;code dir=&quot;auto&quot;&gt;ScanSettings&lt;/code&gt; config (with &lt;code dir=&quot;auto&quot;&gt;setReportDelay&lt;/code&gt; examples), iOS CoreBluetooth scanning and &lt;code dir=&quot;auto&quot;&gt;identifier&lt;/code&gt; usage cautions.&lt;/li&gt;
&lt;li&gt;Acceptance cases: With 30+ devices, fluctuating RSSI, and stacked filters, can users still reliably select the intended device?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;6-takeaways-know-the-boundaries-design-the-right-interactions&quot;&gt;6) Takeaways: Know the boundaries, design the right interactions&lt;/h2&gt;&lt;a href=&quot;#6-takeaways-know-the-boundaries-design-the-right-interactions&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6) Takeaways: Know the boundaries, design the right interactions”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Lean on advertisement data to distinguish devices; don’t insist on MAC on iOS.&lt;/li&gt;
&lt;li&gt;Use batched dispatch + frozen ordering to tame list jitter.&lt;/li&gt;
&lt;li&gt;Make filtering/sorting intent‑centric with lightweight Chips; surface “Recently used/New” to lower selection cost.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these constraints and patterns in hand, ChatGPT becomes your on‑call interaction consultant — bridging what’s buildable with what users grasp — turning the tiny pain of “I can’t tap it” into a chance for a big UX upgrade.&lt;/p&gt;&lt;!-- 
References:
[1]: https://novelbits.io/bluetooth-low-energy-advertisements-part-1/?utm_source=chatgpt.com &quot;How Bluetooth Low Energy Works: Advertisements (Part 1)&quot;
[2]: https://punchthrough.com/core-bluetooth-guide/?utm_source=chatgpt.com &quot;Apple&apos;s IOS Core Bluetooth: The Ultimate Guide&quot;
[3]: https://punchthrough.com/android-ble-guide/?utm_source=chatgpt.com &quot;Android BLE: The Ultimate Guide To Bluetooth Low Energy&quot;
[4]: https://developer.android.com/reference/android/bluetooth/le/ScanSettings.Builder?utm_source=chatgpt.com &quot;ScanSettings.Builder | API reference&quot;
[5]: https://www.nngroup.com/articles/applying-filters/?utm_source=chatgpt.com &quot;User Intent Affects Filter Design&quot;
[6]: https://m3.material.io/components/chips?utm_source=chatgpt.com &quot;Chips – Material Design 3&quot;
[7]: https://www.nngroup.com/articles/filter-categories-values/?utm_source=chatgpt.com &quot;Defining Helpful Filter Categories and Values for Better UX&quot;
[8]: https://learn.microsoft.com/en-us/dotnet/api/android.bluetooth.le.scanresult.rssi?view=net-android-35.0&amp;utm_source=chatgpt.com &quot;ScanResult.Rssi Property (Android.Bluetooth.LE)&quot;
[9]: https://m3.material.io/components?utm_source=chatgpt.com &quot;Components — Material Design 3&quot;
[10]: https://www.nngroup.com/articles/alphabetical-sorting-must-mostly-die/?utm_source=chatgpt.com &quot;Alphabetical Sorting Must (Mostly) Die&quot; 
--&gt;</content:encoded><category>AI</category><category>ChatGPT</category><category>OpenAI</category><category>Product Manager</category><category>UX</category><category>Bluetooth</category><category>BLE</category></item><item><title>Claude Code 2.0.17 Update: Haiku 4.5 Takes Execution, Plan with Sonnet — Faster and Cheaper</title><link>https://www.vibesparking.com/en/blog/ai/claude-code/changelog/2025-10-16-claude-code-217-haiku-45-sonnet-45/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/claude-code/changelog/2025-10-16-claude-code-217-haiku-45-sonnet-45/</guid><pubDate>Thu, 16 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Claude Code 2.0.17 Update: Haiku 4.5 Takes Execution, Plan with Sonnet — Faster and Cheaper --&gt;&lt;!-- (In the spirit of Vibe Sparking AI — this gives you a one‑sitting read on the two key changes in the new Claude Code.) --&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;&lt;a href=&quot;#introduction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Today’s update is very kind to developers who code with Claude Code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Claude Haiku 4.5 launches — cheaper and faster; Plan mode defaults to Sonnet for planning and switches to Haiku for execution.&lt;/strong&gt;
In practice, projects run smoother and your wallet hurts less. Official pricing/positioning and how this release hooks into Claude Code both support that conclusion.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;highlight-1-lower-cost-faster-speed&quot;&gt;Highlight 1: Lower cost, faster speed&lt;/h2&gt;&lt;a href=&quot;#highlight-1-lower-cost-faster-speed&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Highlight 1: Lower cost, faster speed”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Haiku 4.5: $1 / $5 (input/output per million tokens)&lt;/strong&gt; — aimed at real‑time, low‑latency work, with optimizations for coding, sub‑agent collaboration, and computer‑use scenarios. Compared with Sonnet 4 from May, it’s &lt;strong&gt;well over 2× faster at about one‑third the cost&lt;/strong&gt;, while delivering “near‑frontier” performance on many coding tasks.&lt;/p&gt;
&lt;p&gt;Why “more economical”? Compare peers on pricing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sonnet 4.5: $3 / $15&lt;/strong&gt; (input/output).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opus 4.1: $15 / $75&lt;/strong&gt; (input/output).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means you can &lt;strong&gt;hand off execution steps that don’t need the “strongest brainpower” to Haiku 4.5&lt;/strong&gt;. Bills slim down immediately and responses feel snappier. If you run many agents, hit backend services, or trigger calls frequently from your IDE, the value is obvious.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary: &lt;strong&gt;Haiku 4.5 = coding ability close to Sonnet 4 + faster speed + one‑third the price&lt;/strong&gt;. It’s not a “make‑do small model”, it’s a “deployment‑grade workhorse”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h2 id=&quot;highlight-2-plan-with-sonnet-execute-with-haiku-the-2017-default-pairing&quot;&gt;Highlight 2: Plan with Sonnet, execute with Haiku (the 2.0.17 default pairing)&lt;/h2&gt;&lt;a href=&quot;#highlight-2-plan-with-sonnet-execute-with-haiku-the-2017-default-pairing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Highlight 2: Plan with Sonnet, execute with Haiku (the 2.0.17 default pairing)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;In &lt;strong&gt;Claude Code 2.0.17&lt;/strong&gt;, a crucial detail: &lt;strong&gt;Plan mode uses Sonnet by default for planning, then automatically switches to Haiku for execution.&lt;/strong&gt; That mirrors real workflows in the terminal/VS Code: &lt;strong&gt;deep reasoning with Sonnet, batch implementation with Haiku.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version signal: the VS Code extension is now &lt;strong&gt;2.0.17&lt;/strong&gt;, released with the October update.&lt;/li&gt;
&lt;li&gt;Official framing: &lt;strong&gt;Sonnet 4.5 remains the primary engine behind Claude Code&lt;/strong&gt;, handling long tasks and complex planning; Haiku 4.5 fills the execution seat with &lt;strong&gt;more speed and lower cost&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This &lt;strong&gt;plan/execute layering&lt;/strong&gt; follows the familiar pattern of “frontline model for Plan, next‑tier model for implementation” — except now &lt;strong&gt;Haiku 4.5&lt;/strong&gt; takes the more capable spot on the execution side.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;realworld-take-opus-is-phenomenal-and-pricey-sonnet-is-steady-haiku-now-carries&quot;&gt;Real‑world take: Opus is phenomenal (and pricey); Sonnet is steady; Haiku now carries&lt;/h2&gt;&lt;a href=&quot;#realworld-take-opus-is-phenomenal-and-pricey-sonnet-is-steady-haiku-now-carries&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Real‑world take: Opus is phenomenal (and pricey); Sonnet is steady; Haiku now carries”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;After several large runs, here’s the blunt take:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Opus&lt;/strong&gt;: expansive ideation, cross‑stack architecture, deep retrieval — rock‑solid. &lt;strong&gt;But the bill is hard to stomach.&lt;/strong&gt; If you also hand it execution, you get great results and a racing heartbeat.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sonnet 4.5&lt;/strong&gt;: currently the &lt;strong&gt;most usable “coding brain”&lt;/strong&gt; in the Claude family. In Plan mode it thinks clearly: strategy, steps, and risk flags are all there.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Haiku 4.5&lt;/strong&gt;: the &lt;strong&gt;MVP for execution&lt;/strong&gt;. Running agent subtasks, fanning out in parallel, scaffolding, moving files, getting tests green — it’s fast and frugal. For &lt;strong&gt;front‑end scaffolds, mass renames, fixture generation&lt;/strong&gt;, it barely “breaks a sweat”.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short: &lt;strong&gt;Use Sonnet for expensive “thinking”; give Haiku the bulk “hands‑on”.&lt;/strong&gt; Your speed goes up, costs come down, and stability is easier to control.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;getting-started-for-busy-engineering-teams&quot;&gt;Getting started (for busy engineering teams)&lt;/h2&gt;&lt;a href=&quot;#getting-started-for-busy-engineering-teams&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Getting started (for busy engineering teams)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keep the Plan→Exec split&lt;/strong&gt;: clarify the hard parts, then dispatch subtasks in parallel; let Haiku 4.5 handle execution.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lean on parallelism and sub‑agents&lt;/strong&gt;: spin up multiple Haiku 4.5 workers; coordinate with a Sonnet 4.5 orchestrator.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make costs visible&lt;/strong&gt;: track API usage, measure call shares across Haiku/Sonnet/Opus, and review a sprint‑length invoice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Match model to scenario&lt;/strong&gt;: real‑time assistants, support tickets, low‑latency orchestration → favor Haiku 4.5; complex refactors and multi‑repo surgery → Plan with Sonnet 4.5.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;No flashy tricks here — &lt;strong&gt;this update makes “useful + economical” a daily development default.&lt;/strong&gt;
Plan with Sonnet, execute with Haiku. &lt;strong&gt;Code moves fast and spending is transparent.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What’s your take? Which tasks see immediate gains with Haiku 4.5? Share real‑world results in the comments.&lt;/p&gt;&lt;!--

## References and further reading

* Anthropic “Introducing Claude Haiku 4.5”: performance and pricing, emphasizes “faster and cheaper”.
* Haiku 4.5 developer pricing: **$1 / $5 (input/output)**.
* Sonnet 4.5 release and pricing: **$3 / $15**.
* Opus 4.1 overview and pricing: **$15 / $75**.
* Claude Developer Platform: API release notes and model usage guidance.
* Claude Code for VS Code: extension page (2.0.17).
* Enabling Claude Code to work more autonomously: official blog post.
* Ars Technica: coverage on Haiku 4.5 matching May’s frontier model at a fraction of the cost.

## Title suggestions (multi‑language + slug)

1. Chinese: Haiku 4.5 接管执行位：Claude Code 2.0.17 省钱又提速
   English: Haiku 4.5 Takes Over Execution: Faster, Cheaper Claude Code 2.0.17
   Traditional Chinese: Haiku 4.5 接手執行位：Claude Code 2.0.17 省錢又加速
   Japanese: Haiku 4.5 が実行を担当：Claude Code 2.0.17 は高速・低コスト
   Français : Haiku 4.5 prend l’exécution : Claude Code 2.0.17 plus rapide et moins cher
   Español: Haiku 4.5 toma la ejecución: Claude Code 2.0.17 más rápido y barato
   Português: Haiku 4.5 assume a execução: Claude Code 2.0.17 mais rápido e barato
   slug: haiku45-exec-claude-code-2017

2. Chinese: Plan 用 Sonnet，干活交 Haiku：新一代 Claude Code 流程范式
   English: Plan with Sonnet, Ship with Haiku: The New Claude Code Workflow
   Traditional Chinese: Plan 用 Sonnet，執行交 Haiku：Claude Code 新工作流
   Japanese: 計画は Sonnet、実装は Haiku：新しい Claude Code ワークフロー
   Français : Planifier avec Sonnet, livrer avec Haiku : le nouveau flux Claude Code
   Español: Planear con Sonnet, ejecutar con Haiku: el nuevo flujo de Claude Code
   Português: Planeje com Sonnet, entregue com Haiku: o novo fluxo do Claude Code
   slug: plan-sonnet-ship-haiku

3. Chinese: 告别“贵上天”的 Opus？Haiku 4.5 给了更现实的答案
   English: Tired of Opus Prices? Haiku 4.5 Is the Practical Answer
   Traditional Chinese: Opus 太貴？Haiku 4.5 給出務實解
   Japanese: Opus は高すぎ？Haiku 4.5 が現実解
   Français : Marre du prix d’Opus ? Haiku 4.5 est la réponse pragmatique
   Español: ¿Opus demasiado caro? Haiku 4.5 es la respuesta práctica
   Português: Opus caro demais? Haiku 4.5 é a resposta prática
   slug: bye-opus-hello-haiku45

---

# Image prompts (illustration style | 2:1 | no Chinese text)

Cover prompt (EN):
“An illustration of a dual‑engine coding workflow: a thoughtful planner brain on the left labeled ‘Plan (Sonnet)’ and a lightning‑fast robotic arm on the right labeled ‘Execute (Haiku)’, connected by a flow of code snippets and checkmarks. Clean, modern, vibrant gradients, developer terminal elements, 2:1 aspect ratio, no text in Chinese.”

Key visual #1 (pricing &amp; speed):
“Infographic‑style illustration showing three model tiers as rockets: Opus (largest, expensive), Sonnet (balanced), Haiku 4.5 (small, very fast) racing on a track with price tags and speed lines. Minimalistic, tech aesthetic, 2:1, no Chinese text.”

Key visual #2 (Plan→Exec pipeline):
“Pipeline diagram illustration: ‘Plan’ node with a strategic blueprint, arrow to ‘Execute’ node with multiple small bots working in parallel, representing sub‑agents. Subtle icons for IDE and terminal. Clean, pastel gradients, 2:1.”

Key visual #3 (real‑world contrast):
“Side‑by‑side illustration: a heavy golden crown labeled ‘Opus’ on a scale vs. a feather‑fast conveyor belt of code blocks labeled ‘Haiku 4.5’. Emphasize cost vs. speed trade‑off. 2:1, editorial, no Chinese text.”

&gt; Note: These are ready‑to‑use English prompts — feed them to your usual image tool.

---

# Social one‑liners (for posts/comments)

1) “Plan with Sonnet, throw the grunt work to Haiku — the project moves faster than I can reply. 😂”
2) “Opus: you deserve better. Wallet: I need cheaper. Haiku 4.5: deal!”
3) “From today, coding feels like takeout: Sonnet places the order, Haiku delivers in 5 minutes. 🍕”

Need a “team playbook” version (with model‑switch scripts, cost dashboards, and parallel sub‑agent templates)? I can add it.

[1]: https://www.anthropic.com/news/claude-haiku-4-5 &quot;Introducing Claude Haiku 4.5&quot;
[2]: https://www.anthropic.com/news/claude-sonnet-4-5 &quot;Introducing Claude Sonnet 4.5&quot;
[3]: https://www.anthropic.com/claude/opus &quot;Claude Opus 4.1&quot;
[4]: https://docs.claude.com/en/release-notes/api &quot;Claude Developer Platform&quot;
[5]: https://x.com/oikon48/status/1978509015328964846 &quot;Claude Code 2.0.17: ・Haiku 4.5 ...&quot;
[6]: https://marketplace.visualstudio.com/items?itemName=anthropic.claude-code &quot;Claude Code for VS Code&quot;
[7]: https://anthropic.com/news/enabling-claude-code-to-work-more-autonomously &quot;Enabling Claude Code to work more autonomously&quot;
[8]: https://arstechnica.com/ai/2025/10/anthropics-claude-haiku-4-5-matches-mays-frontier-model-at-fraction-of-cost/ &quot;Ars Technica on Haiku 4.5&quot;
--&gt;</content:encoded><category>Claude Code</category></item><item><title>Break the “etc.”: Clarity for Claude Code</title><link>https://www.vibesparking.com/en/blog/ai/claude-code/practices/2025-10-16-break-the-etc-clarity-for-claude-code/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/claude-code/practices/2025-10-16-break-the-etc-clarity-for-claude-code/</guid><pubDate>Thu, 16 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;One‑line takeaway:&lt;/strong&gt; AI coding speed can’t fix fuzzy specs. &lt;strong&gt;To make Claude Code truly low‑friction, break every “etc.” into a checklist, turn acceptance into an executable script, and let automation run the tests.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;&lt;a href=&quot;#introduction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Have you ever written a requirement like:
“Show key device info on the home page (power, volume, etc.).”&lt;/p&gt;
&lt;p&gt;Then at QA time, the AI only implements the first three. &lt;strong&gt;The “etc.” simply disappears.&lt;/strong&gt;
It’s not that the AI isn’t smart; the signal you gave wasn’t precise. &lt;strong&gt;Claude Code “does less” when your instructions are vague&lt;/strong&gt;—it will reasonably but incompletely narrow the scope. That’s not a bug; &lt;strong&gt;it’s a boundary reminder for human‑AI collaboration.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By the way, Anthropic just bumped Haiku to 4.5: &lt;strong&gt;cheaper, faster, and coding performance close to Sonnet&lt;/strong&gt; (now available in Copilot too). It’s faster, yes—but &lt;strong&gt;it still won’t auto‑complete your “etc.”&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;what-you-see-the-less-you-write-before--the-less-you-get-after-it&quot;&gt;What you see: the less you write before “=”, the less you get after it&lt;/h2&gt;&lt;a href=&quot;#what-you-see-the-less-you-write-before--the-less-you-get-after-it&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “What you see: the less you write before “=”, the less you get after it”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;You wrote “power, volume, brightness, etc.”&lt;/li&gt;
&lt;li&gt;Claude Code reads this as &lt;strong&gt;three explicit items + one implicit “etc.”&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Result: code, automated tests, and docs &lt;strong&gt;all cover only the first three&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s not AI “cutting corners.” &lt;strong&gt;It’s AI prioritizing what’s verifiable.&lt;/strong&gt; Explicit items can produce code and tests; ambiguous ones get skipped. &lt;strong&gt;This shows up repeatedly in research and industry reports&lt;/strong&gt;—with incomplete or vague specs, AI helpers &lt;strong&gt;are more likely to miss features&lt;/strong&gt;, even when they produce code faster.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;a-copyanduse-solution-dont-let-etc-ship-to-production&quot;&gt;A copy‑and‑use solution: don’t let “etc.” ship to production&lt;/h2&gt;&lt;a href=&quot;#a-copyanduse-solution-dont-let-etc-ship-to-production&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “A copy‑and‑use solution: don’t let “etc.” ship to production”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;This workflow &lt;strong&gt;works for any app, admin, or web project.&lt;/strong&gt; Steal it.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;1-turn-every-etc-into-a-datadriven-checklist&quot;&gt;1) Turn every “etc.” into a data‑driven checklist&lt;/h3&gt;&lt;a href=&quot;#1-turn-every-etc-into-a-datadriven-checklist&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Turn every “etc.” into a data‑driven checklist”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Write the nouns as a table&lt;/strong&gt; and add “status, source, display rules, empty‑state policy, error policy” for each item. Example fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: Power / Volume / Brightness …&lt;/li&gt;
&lt;li&gt;Domain: On/Off; 0–100 …&lt;/li&gt;
&lt;li&gt;Source: local cache / backend API / Bluetooth …&lt;/li&gt;
&lt;li&gt;Display: icon, label, unit&lt;/li&gt;
&lt;li&gt;Empty: show “—” or greyed out&lt;/li&gt;
&lt;li&gt;Error: timeout, disconnect, permission‑denied placeholders&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The payoff: &lt;strong&gt;AI can generate complete UI + validation + empty states + error handling&lt;/strong&gt;, not just “three components that look right.”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: &lt;strong&gt;Use Gherkin/BDD for acceptance&lt;/strong&gt;, and write behavior as a &lt;strong&gt;Given‑When‑Then script&lt;/strong&gt;. Human‑readable, machine‑testable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;2-upgrade-acceptance-from-verbal-agreement-to-executable&quot;&gt;2) Upgrade acceptance from “verbal agreement” to “executable”&lt;/h3&gt;&lt;a href=&quot;#2-upgrade-acceptance-from-verbal-agreement-to-executable&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) Upgrade acceptance from “verbal agreement” to “executable””&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Convert the checklist into Gherkin scenarios&lt;/strong&gt;, then have AI generate the automation (e.g., Cypress/Playwright):&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Feature: Device key info panel&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Scenario Outline: Render each key info item&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Given the device exposes &quot;&amp;#x3C;name&gt;&quot; with value &quot;&amp;#x3C;value&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;When I open the home page&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Then I should see &quot;&amp;#x3C;label&gt;&quot; and formatted &quot;&amp;#x3C;value&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Examples:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;| name       | value | label       |&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;| Power      | On    | Power       |&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;| Volume     | 70    | Volume      |&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;| Brightness | 40    | Brightness  |&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;| …          | …     | …           |&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;button title=&quot;Copy to clipboard&quot; data-copied=&quot;Copied!&quot; data-code=&quot;&quot;&gt;&amp;#x22; with value &amp;#x22;&lt;value&gt;&amp;#x22;    When I open the home page    Then I should see &amp;#x22;&lt;label&gt;&amp;#x22; and formatted &amp;#x22;&lt;value&gt;&amp;#x22;    Examples:      | name       | value | label       |      | Power      | On    | Power       |      | Volume     | 70    | Volume      |      | Brightness | 40    | Brightness  |      | …          | …     | …           |&quot;&gt;&lt;div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Research shows&lt;/strong&gt;: generating Gherkin from user stories first, then &lt;strong&gt;turning it into executable tests&lt;/strong&gt; (Cypress, etc.) significantly improves coverage and control.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;3-put-reuse-in-the-data-layer-to-avoid-reimplementing-the-same-thing&quot;&gt;3) Put reuse in the data layer to avoid re‑implementing the same thing&lt;/h3&gt;&lt;a href=&quot;#3-put-reuse-in-the-data-layer-to-avoid-reimplementing-the-same-thing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3) Put reuse in the data layer to avoid re‑implementing the same thing”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Don’t write &lt;strong&gt;multiple near‑duplicate infos()&lt;/strong&gt; scattered across modules.
&lt;strong&gt;Extract a reusable data mapping and renderer&lt;/strong&gt;: one schema, &lt;strong&gt;consumed everywhere&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;keyInfo.schema.ts&lt;/code&gt;: fields, domain, formatters, empty‑state policy&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;keyInfo.adapter.ts&lt;/code&gt;: &lt;strong&gt;unify&lt;/strong&gt; sources (API, Bluetooth, cache)&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;KeyInfoPanel.tsx&lt;/code&gt;: &lt;strong&gt;pure presentation&lt;/strong&gt;, no business logic&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;keyInfo.spec.ts&lt;/code&gt;: &lt;strong&gt;table‑driven tests&lt;/strong&gt;; add one schema item = get more tests for free&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: when you later add “battery temperature,” you just &lt;strong&gt;update the schema&lt;/strong&gt; and everything else follows. That’s &lt;strong&gt;engineering the “etc.”&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;4-put-aigenerated-into-ci&quot;&gt;4) Put “AI‑generated” into CI&lt;/h3&gt;&lt;a href=&quot;#4-put-aigenerated-into-ci&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4) Put “AI‑generated” into CI”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;On PRs, automatically run: &lt;strong&gt;type checks, static rules, unit + acceptance tests&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gate&lt;/strong&gt;: if checklist count ≠ test‑covered count, reject the merge.&lt;/li&gt;
&lt;li&gt;Add security and compliance scans to prevent &lt;strong&gt;AI‑introduced latent risks&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Unit tests tell you “what broke.” Acceptance tests tell you “is it actually complete.” &lt;strong&gt;You need both.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;5-use-claude-codes-latest-featuresjust-dont-expect-mindreading&quot;&gt;5) Use Claude Code’s latest features—just don’t expect mind‑reading&lt;/h3&gt;&lt;a href=&quot;#5-use-claude-codes-latest-featuresjust-dont-expect-mindreading&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5) Use Claude Code’s latest features—just don’t expect mind‑reading”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Claude Code Plugins&lt;/strong&gt;: bundle “checklist generation → Gherkin → test coverage checks” into an &lt;strong&gt;installable workflow&lt;/strong&gt; your team can share.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Haiku 4.5&lt;/strong&gt;: &lt;strong&gt;cheap and fast&lt;/strong&gt;, perfect for mass‑producing the “checklist → scenarios → tests” grunt work. Rolling out in Copilot too.&lt;/li&gt;
&lt;li&gt;Remember: &lt;strong&gt;faster ≠ understands you better&lt;/strong&gt;. &lt;strong&gt;Clarity&lt;/strong&gt; is the true force multiplier.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;quick-checklist-paste-into-your-team-wiki&quot;&gt;Quick checklist (paste into your team wiki)&lt;/h2&gt;&lt;a href=&quot;#quick-checklist-paste-into-your-team-wiki&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Quick checklist (paste into your team wiki)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Shared definitions&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Break every “etc.” into a &lt;strong&gt;tabular checklist&lt;/strong&gt; with domain, source, display, empty, and error policies.&lt;/li&gt;
&lt;li&gt;Write one &lt;strong&gt;Gherkin scenario per item&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Automation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Claude to generate &lt;strong&gt;Cypress/Playwright&lt;/strong&gt; scripts.&lt;/li&gt;
&lt;li&gt;CI rule: &lt;strong&gt;checklist count = passed scenario count&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Engineering reuse&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;schema + adapter + pure UI component.&lt;/li&gt;
&lt;li&gt;New item = update schema; tests and UI &lt;strong&gt;follow automatically&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Security &amp;#x26; quality&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Static analysis + dependency/secret checks.&lt;/li&gt;
&lt;li&gt;No merge if gates fail.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Claude Code isn’t slacking. It follows the boundaries you set.&lt;/strong&gt;
When you turn &lt;strong&gt;ambiguity&lt;/strong&gt; into &lt;strong&gt;structure&lt;/strong&gt; and &lt;strong&gt;acceptance&lt;/strong&gt; into &lt;strong&gt;execution&lt;/strong&gt;, AI becomes a &lt;strong&gt;reliable teammate&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Where does your team most often write “etc.”? How are you addressing it?&lt;/strong&gt; Share in the comments.&lt;/p&gt;&lt;/value&gt;&lt;/label&gt;&lt;/value&gt;&lt;/button&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;</content:encoded><category>Claude Code</category><category>TypeScript</category></item><item><title>Ship a Rails feature in minutes with Claude Code: Document‑Driven dev + RSpec BDD</title><link>https://www.vibesparking.com/en/blog/ai/claude-code/practices/2025-10-16-rails-feature-from-one-doc-claude-code-rspec-bdd/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/claude-code/practices/2025-10-16-rails-feature-from-one-doc-claude-code-rspec-bdd/</guid><pubDate>Thu, 16 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;&lt;a href=&quot;#introduction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Ever felt this pain? A device reports multiple states within a minute and your database turns into a wall of “noise”.&lt;/p&gt;
&lt;p&gt;Here’s a general, reusable practice: in Rails, merge repeated reports that arrive within a short, configurable time window into a single “golden record”.&lt;/p&gt;
&lt;p&gt;I’ll use Claude Code with a document‑driven approach: start from a single page of specs → generate BDD scenarios → validate with RSpec → minimal implementation → write findings back to the doc. The loop is fast, stable, and traceable. If you’re new to Claude Code, the official docs outline a clear playbook and best practices.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;our-public-version-requirement-desensitized&quot;&gt;Our “public version” requirement (desensitized)&lt;/h2&gt;&lt;a href=&quot;#our-public-version-requirement-desensitized&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Our “public version” requirement (desensitized)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Business context (generic)&lt;/p&gt;
&lt;p&gt;An “intelligent fitness band” may report multiple heart‑rate/status events within one minute. To avoid redundancy, we want to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Within a configurable time window (default 1 minute), grouped by device and type, merge multiple events into one;&lt;/li&gt;
&lt;li&gt;Keep the latest record within the window (i.e., the last one wins);&lt;/li&gt;
&lt;li&gt;Write to a unified work record table, ensure idempotency, and keep merge provenance for audit and traceability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Document‑Driven&lt;/p&gt;
&lt;p&gt;Put the above into a single “feature spec” document. That document doubles as the product contract and acceptance criteria. From it, we derive BDD scenarios and tests. This follows the same spirit as “Specification by Example/ATDD/BDD”: examples are the single source of truth.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;claude-code--bdd-from-doc-to-executable-acceptance&quot;&gt;Claude Code + BDD: from doc to executable acceptance&lt;/h2&gt;&lt;a href=&quot;#claude-code--bdd-from-doc-to-executable-acceptance&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Claude Code + BDD: from doc to executable acceptance”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Why Claude Code&lt;/p&gt;
&lt;p&gt;It’s a terminal‑native coding copilot that actively pulls context. It connects code, docs, dependencies, and scaffolding, turning ideas into runnable structure quickly. The docs include hands‑on tips such as how to organize repositories so the agent “understands” your intent.&lt;/p&gt;
&lt;p&gt;Prompt template (paste into Claude Code)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Role: Senior Rails engineer + test coach
Goal: Implement “device report merge” as a reusable capability
Deliverables:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Based on the spec below, generate RSpec BDD scenarios and edge cases (Rails + Capybara/request/service layer);&lt;/li&gt;
&lt;li&gt;Provide a minimal implementation skeleton (service object, queries, transaction, idempotency strategy);&lt;/li&gt;
&lt;li&gt;Propose rollback and audit logging;&lt;/li&gt;
&lt;li&gt;Write all assumptions back to the doc under “Open Questions”.
Attachment: the feature spec (paste the “public version” requirement above)&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Why RSpec + BDD&lt;/p&gt;
&lt;p&gt;RSpec reads like behavior. Tests are documentation. Rails’ official guide also clarifies test layers. With Capybara/request specs you can do API acceptance and system flows.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;acceptance-examples-trimmed-bdd-thinking&quot;&gt;Acceptance examples (trimmed BDD thinking)&lt;/h2&gt;&lt;a href=&quot;#acceptance-examples-trimmed-bdd-thinking&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Acceptance examples (trimmed BDD thinking)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;User story&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As a data platform, within one minute, multiple reports of the same device and record type should be merged into one, taking the last record as the truth. This keeps queries clean and metrics correct.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Key scenarios&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In‑window merge: t=00:10 and 00:40 → save 1 row, payload from 00:40.&lt;/li&gt;
&lt;li&gt;Cross‑window no‑merge: t=00:10 and 01:15 → save 2 rows.&lt;/li&gt;
&lt;li&gt;Idempotent writes: repeated requests do not produce duplicate merge results.&lt;/li&gt;
&lt;li&gt;Auditable: keep source IDs and window parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tip: Put these examples in the doc/feature file so they serve both discussion and automated tests.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;rspec-skeleton-snippet&quot;&gt;RSpec skeleton (snippet)&lt;/h2&gt;&lt;a href=&quot;#rspec-skeleton-snippet&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “RSpec skeleton (snippet)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;spec/services/record_merger_spec.rb&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;ruby&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;RSpec&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;describe&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;RecordMerger&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;let(:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;device-123&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;let(:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;window&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;    { &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;minute&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;it &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;merges multiple records within window, keeps the latest&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;create(:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;work_status&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;recorded_at&lt;/span&gt;&lt;span style=&quot;--1:#3B61B0&quot;&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#C5E478&quot;&gt;Time&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;.current &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;40&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;.seconds, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;payload&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;: { &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;hr&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;85&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt; })&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;create(:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;work_status&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;recorded_at&lt;/span&gt;&lt;span style=&quot;--1:#3B61B0&quot;&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#C5E478&quot;&gt;Time&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;.current &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;.seconds, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;payload&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;: { &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;hr&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;92&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt; })&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;result&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; described_class.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;call&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;record_type&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;work_status&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;window&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;expect(result.payload&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;hr&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;eq(&lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;92&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--1:#3B61B0&quot;&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;expect(&lt;/span&gt;&lt;span style=&quot;--0:#C5E478&quot;&gt;WorkStatus&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;.where(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:)&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;count&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;eq(&lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;it &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;does not merge across windows&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;create(:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;work_status&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;recorded_at&lt;/span&gt;&lt;span style=&quot;--1:#3B61B0&quot;&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#C5E478&quot;&gt;Time&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;.current &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;75&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;.seconds)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;create(:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;work_status&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;recorded_at&lt;/span&gt;&lt;span style=&quot;--1:#3B61B0&quot;&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#C5E478&quot;&gt;Time&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;.current &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;.seconds)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;described_class.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;call&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;record_type&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#096E72&quot;&gt;work_status&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;window&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--1:#3B61B0&quot;&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;expect(&lt;/span&gt;&lt;span style=&quot;--0:#C5E478&quot;&gt;WorkStatus&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF&quot;&gt;.where(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;device_id&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;:)&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;count&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;eq(&lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Reference: See RSpec/Capybara conventions for feature tests and dependency constraints.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;rails-minimal-implementation-map&quot;&gt;Rails minimal implementation (map)&lt;/h2&gt;&lt;a href=&quot;#rails-minimal-implementation-map&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Rails minimal implementation (map)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Entry point: service object &lt;code dir=&quot;auto&quot;&gt;RecordMerger.call(device_id:, record_type:, window:)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Query: same device + same type + &lt;code dir=&quot;auto&quot;&gt;recorded_at&lt;/code&gt; within the “natural time window”&lt;/li&gt;
&lt;li&gt;Merge strategy:
&lt;ul&gt;
&lt;li&gt;Use the record with the max &lt;code dir=&quot;auto&quot;&gt;recorded_at&lt;/code&gt; as the base data&lt;/li&gt;
&lt;li&gt;Persist the rest as the provenance set, e.g., &lt;code dir=&quot;auto&quot;&gt;merged_from: [ids...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Idempotency &amp;#x26; concurrency:
&lt;ul&gt;
&lt;li&gt;App‑level mutual exclusion by device + window (e.g., &lt;code dir=&quot;auto&quot;&gt;with_advisory_lock&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Unique index on the critical key (device + window start, or a computed idempotency key)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Audit:
&lt;ul&gt;
&lt;li&gt;Record &lt;code dir=&quot;auto&quot;&gt;merge_window_sec&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;merged_count&lt;/code&gt;, &lt;code dir=&quot;auto&quot;&gt;merged_from&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Emit event logs for tracing and replay&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For broader coverage, add request/system tests to verify API I/O. Rails’ testing guide explains test responsibilities across layers.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;make-ai-truly-accelerate-engineering-checklist&quot;&gt;Make AI truly accelerate: engineering checklist&lt;/h2&gt;&lt;a href=&quot;#make-ai-truly-accelerate-engineering-checklist&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Make AI truly accelerate: engineering checklist”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Keep the spec in the repo root with a consistent name so Claude Code can auto‑pull context.&lt;/li&gt;
&lt;li&gt;Advance one micro‑goal at a time: get “in‑window merge” green first, then expand to idempotency and audit.&lt;/li&gt;
&lt;li&gt;Write back to the doc frequently: new edge cases, pitfalls, and decisions go to “Open Questions/Decision Log”.&lt;/li&gt;
&lt;li&gt;Backups and milestones: long sessions may compress context—split sessions at milestones, tag them, and keep local snapshots. AI is a power tool; you are still the craftsperson.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Industry feedback echoes this: Claude Code is rolling out across teams, long‑context models keep improving, and large‑repo analysis is getting steadier.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;what-the-deliverables-look-like-team-template&quot;&gt;What the deliverables look like (team template)&lt;/h2&gt;&lt;a href=&quot;#what-the-deliverables-look-like-team-template&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “What the deliverables look like (team template)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;One‑page feature spec (background, goal, scope, glossary, examples, open questions)&lt;/li&gt;
&lt;li&gt;RSpec suite (service + request/system tests, with edges and regression)&lt;/li&gt;
&lt;li&gt;Service object + indexes/locks (minimal viable)&lt;/li&gt;
&lt;li&gt;Event log + dashboards (merge hit rate, storage saved, query latency deltas)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Value is measurable: docs are the contract; tests are the acceptance; logs are the operational review.&lt;/p&gt;
&lt;p&gt;Iteration stays smooth: adding a “2‑minute window” or “window per type” is just add examples → run tests → small tweaks.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Document‑Driven + BDD does not mean “write more docs”; it means making the doc an executable product contract. With Claude Code, you compress the chain from idea → tests → implementation → review to hours. Collaboration gets smoother, delivery more stable, and reading the code feels like reading a story.&lt;/p&gt;
&lt;p&gt;How would you land this merge capability in your team? Any stronger idempotency key designs? Share in the comments.&lt;/p&gt;</content:encoded><category>Claude Code</category><category>Rails</category><category>RSpec</category><category>BDD</category></item><item><title>Decoding JPMorgan’s ‘U.S. Security Index’: Outlook, Opportunities, and Risks Across 39 Companies</title><link>https://www.vibesparking.com/en/blog/finance/us-market/2025-10-15-jpmorgan-us-security-index-analysis/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/finance/us-market/2025-10-15-jpmorgan-us-security-index-analysis/</guid><pubDate>Wed, 15 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # 解密&quot;大摩美国安全指数&quot;：39家公司板块前景、机会与风险 --&gt;
&lt;p&gt;Growing U.S.–China strategic rivalry, the global energy transition, and supply‑chain reconfiguration have pushed several national‑security‑critical industries into the spotlight. A recently floated “U.S. Security Index” — attributed in Chinese coverage to Morgan Stanley (“Da‑Mo”) — curates 39 listed companies across four segments: nuclear power and uranium, batteries and energy storage, rare earths and strategic metals, and lithium. These companies span energy security, critical‑mineral supply chains, and defense technology, and are seen as a microcosm of efforts to strengthen U.S. resource and technology self‑reliance. This report systematically analyzes the four segments in terms of industry context, national‑strategy role, supply–demand dynamics, and outlook, and — against the macro and policy backdrop — discusses opportunities and risks from an investment perspective.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;nuclear--uranium-the-foundation-of-energy-security&quot;&gt;Nuclear &amp;#x26; Uranium: The Foundation of Energy Security&lt;/h2&gt;&lt;a href=&quot;#nuclear--uranium-the-foundation-of-energy-security&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Nuclear &amp;#x26; Uranium: The Foundation of Energy Security”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Industry context and strategic role.&lt;/strong&gt; Nuclear power, a clean baseload source, accounts for roughly 20% of U.S. electricity. Uranium — fuel for nuclear reactors and nuclear weapons — is strategically vital for both energy and defense. Yet U.S. uranium supply has long relied on imports: in 2023, 99% of enriched uranium used by U.S. reactors was imported, with only 0.05 million pounds produced domestically. A decade of low prices left U.S. uranium mining nearly dormant, creating heavy dependence on overseas supply (notably Russia and Kazakhstan). In a geopolitical crunch, that is a strategic vulnerability. In 2024, the U.S. legislated a ban on imports of Russian enriched uranium (effective August 2024, with limited waivers through 2028) to reduce reliance on “unreliable suppliers.” As the Senate Energy Committee noted, the U.S. currently lacks a complete nuclear‑fuel production capability, and over‑reliance on Russian supply threatens energy security.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supply–demand and outlook.&lt;/strong&gt; Nuclear is seeing a global revival, with new‑build commitments lifting uranium demand. After years of surplus, supply–demand has tightened and prices have rebounded. Washington has moved to rebuild the fuel cycle: the Department of Energy (DOE) received $2.7B to restart domestic conversion and enrichment; a strategic uranium reserve was formed to purchase from U.S. miners. Beyond conventional PWR fleets, advanced designs such as small modular reactors (SMRs) are rising and could further expand uranium needs. DOE has contracted for high‑assay low‑enriched uranium (HALEU) and is backing centrifuge capacity at firms like Centrus Energy (LEU). Domestic output is recovering: U.S. Q3‑2024 uranium production reached 120,000 lbs, up 24% q/q. Over time, mine restarts and new projects should reduce import dependence. Near term, however, the U.S. still consumes ~32M lbs per year; backfilling Russian supply amid bans and geopolitical risk is a challenge (increased imports from allies such as Canada/Australia plus faster domestic ramp should help).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Representative companies &amp;#x26; investment take.&lt;/strong&gt; Constituents reportedly include Energy Fuels (UUUU), Cameco (CCJ), and NexGen Energy (NXE). They benefit from higher uranium prices and U.S. policy tailwinds. Cameco — a global leader with allied‑market access — is a relatively defensive core holding. U.S. miners such as Energy Fuels are restarting capacity and branching into rare‑earth processing, offering higher growth optionality. Key risks: uranium’s cyclicality and policy sensitivity. The structural push for fuel‑cycle autonomy supports the medium‑to‑long‑term case, but short‑term setbacks (nuclear build pace, macro slowdowns) can hit prices; many junior miners are pre‑profit with fragile cash flow, magnifying volatility. Consider focusing on producers with contracts/backlog (e.g., Cameco) and treating exploration‑heavy names with caution and tight sizing.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;batteries--energy-storage-the-engine-of-the-transition&quot;&gt;Batteries &amp;#x26; Energy Storage: The Engine of the Transition&lt;/h2&gt;&lt;a href=&quot;#batteries--energy-storage-the-engine-of-the-transition&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Batteries &amp;#x26; Energy Storage: The Engine of the Transition”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Industry context and strategic role.&lt;/strong&gt; Batteries sit at the core of EVs and renewables. Global EV sales keep setting records — &gt;20M expected in 2025, roughly a quarter of auto sales — driving exponential battery demand. Grid‑scale storage is surging to firm intermittent wind and solar. Today’s industry is led by China, Korea, and Japan, with China dominant in capacity and key processes. The U.S., recognizing vulnerability in this supply chain, elevated batteries to a strategic priority: the 2022 Inflation Reduction Act (IRA) offers rich tax credits, catalyzing U.S. manufacturing across cells and materials. As a result, announced U.S. capacity could reach ~1.2 TWh by 2030, up ~70% versus pre‑IRA plans.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supply–demand and outlook.&lt;/strong&gt; Bain estimates global battery demand will climb from ~1,000 GWh in 2023 to ~4,100 GWh by 2030 (4× growth). Beyond passenger EVs, commercial vehicles, tools, and grid storage add to demand. IEA pegs current EV+storage battery market value at ~$120B, potentially near $500B by 2030. U.S. demand is also accelerating: EV leaders (e.g., Tesla) lift shipments while data centers emerge as a new storage buyer. Nearly 95% of incremental power demand growth is expected to be met by PV and wind, which in turn relies on large‑scale storage. Fastmarkets notes data‑center power usage has grown ~12% annually since 2017; data centers are installing substantial battery backup and could account for roughly one‑third of storage demand by 2030. On the supply side, IRA’s $35/kWh production credit draws foreign JV investment and domestic scale‑ups. Short‑term challenges persist: rapid tech iteration, heavy capex, and 2023’s higher rates/policy uncertainty led to delays or cancellations for some plants. Medium term, demand growth looks robust, but localized gluts and uneven utilization could occur — watch for over‑build and intensifying competition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Representative companies &amp;#x26; investment take.&lt;/strong&gt; The segment spans vehicles, cells, systems, and materials: Tesla (TSLA), Eos Energy (EOSE), Microvast (MVST), American Battery Technology (ABAT), among others. Tesla, an industry bellwether, builds 4680 cells in U.S. gigafactories and sells both residential and grid storage — a central node in America’s battery map. Valuation, however, already embeds high growth. Eos targets zinc‑based storage for grid‑scale safety/longevity, has DOE loan support, and offers high upside with high execution risk. Microvast has straddled U.S./China, a reminder of geopolitics’ impact on funding and operations. Broadly, policy tailwinds are clear: IRA credits can cut manufacturing cost by &gt;30%; content rules in purchase incentives steer localized supply. Longer term, scale leaders and firms with secured orders should compound best. Beware hype cycles: some storage names rallied on narrative ahead of commercialization — differentiate mature, profitable materials leaders from early‑stage stories; balance “core” stable names with a small “satellite” allocation to higher‑beta growth, per risk tolerance.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;rare-earths--strategic-metals-industry-vitamins-and-defense-arteries&quot;&gt;Rare Earths &amp;#x26; Strategic Metals: Industry Vitamins and Defense Arteries&lt;/h2&gt;&lt;a href=&quot;#rare-earths--strategic-metals-industry-vitamins-and-defense-arteries&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Rare Earths &amp;#x26; Strategic Metals: Industry Vitamins and Defense Arteries”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Industry context and strategic role.&lt;/strong&gt; “Rare earths” (17 elements) are often called the vitamins of modern industry — essential for high‑performance permanent magnets (EV motors, wind turbines), avionics, guidance systems, and semiconductors. Strategic metals (e.g., antimony, cobalt, titanium, tungsten) are key to defense/high‑tech. The U.S. Department of Defense (DoD) has repeatedly warned that rare earths are indispensable to advanced weapon systems (F‑35s, submarines, missiles, UAVs). In practice, the U.S. relies heavily on China: China mines ≥60% and processes ~90% of rare‑earth products; 70% of U.S. rare‑earth compounds/metals imports (2020–2023) came from China. China is also a major supplier of antimony (armor alloys, fuzes), graphite (battery anodes), and tungsten (AP rounds, tooling). This dependency is viewed as a national‑security weak point. In 2025, China tightened controls further on rare earths and magnet exports (declaring uses for products containing heavy RE), heightening global concern. Analysts see it as signaling that Beijing may wield rare‑earth supply as leverage. The U.S. response includes reducing reliance, tariff tools, and larger resource investment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supply–demand and outlook.&lt;/strong&gt; Rare‑earth demand has surged with EVs and clean energy, while supply growth remains concentrated. Export curbs by key suppliers could cause shortages and price swings. The U.S. is acting on multiple fronts: DoD funding to MP Materials for separation, and to Lynas for heavy‑RE processing in Texas; Defense Production Act (DPA) support for lithium, graphite, nickel, antimony, etc. After China restricted antimony exports in Aug‑2024, the Defense Logistics Agency (DLA) expanded procurement plans, reportedly earmarking ~$245M with U.S. Antimony (UAMY) — roughly three‑quarters of annual U.S. imports. Strategic stockpiles are set to expand: reports in Oct‑2025 suggested a ~$10B critical‑minerals reserve to reduce China reliance. Over 2025–2030, new projects in Australia/Canada could diversify supply; deep‑sea mining (e.g., The Metals Company targeting nickel/cobalt nodules) may contribute. But permitting, costs, and price cycles complicate investment — China’s position remains strong in the near term, with allied cooperation and state support needed to bridge gaps. Geopolitical risk will be persistent; decoupling is partial at best, implying a protracted, uneven supply‑chain re‑wiring.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Representative companies &amp;#x26; investment take.&lt;/strong&gt; The cohort includes MP Materials (MP), USA Rare Earth (USAR), U.S. Antimony (UAMY), and Ivanhoe Electric (IE). MP — owner of Mountain Pass, the only producing U.S. RE mine — is core to U.S. revival efforts, building separation and magnet capacity with government backing, and is among the more mature, revenue‑generating names. USA Rare Earth controls Texas’ Round Top deposit (heavy RE + lithium, etc.) and has been bid up post‑listing on strategic value; it remains pre‑revenue and high beta. UAMY is one of few North American antimony producers, small in scale but strategically notable given DLA contracts; fundamentals hinge more on policy than on structural growth. Overall, many names are early stage with elevated hype risk. Focus on who can deliver capacity and long‑term offtakes. Policy can whipsaw prices (bans, tariffs, contracts). Resource equities are also rate/commodity‑cycle sensitive; small caps are often first to sell off when the dollar strengthens or commodities fall.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;lithium-the-white-oil-of-the-ev-era&quot;&gt;Lithium: The “White Oil” of the EV Era&lt;/h2&gt;&lt;a href=&quot;#lithium-the-white-oil-of-the-ev-era&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Lithium: The “White Oil” of the EV Era”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Industry context and strategic role.&lt;/strong&gt; Lithium — the “white oil” of the energy‑transition era — is indispensable to Li‑ion batteries. With EVs and storage booming, it has become a strategic resource. The U.S. classifies lithium as critical and sees it as central to EV‑supply‑chain autonomy. Domestic resource endowment is modest: only one producing site today (Silver Peak brine, NV), far short of needs. Much of U.S. lithium arrives via imports from South America/Australia and is then refined in China. USGS estimates U.S. dependence on lithium compounds exceeded 50% in 2022. Any geopolitical disruption or export control poses EV supply risks. Washington is backing U.S. projects (e.g., DOE loans/guarantees to Lithium Americas’ Thacker Pass; R&amp;#x26;D into clay/geothermal‑brine extraction) and tying IRA consumer incentives to sourcing from the U.S. or FTA partners — elevating lithium’s strategic importance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supply–demand and outlook.&lt;/strong&gt; Lithium saw a roller‑coaster: a 2021–2022 price spike on EV demand, followed by a 2023 correction as supply growth outpaced demand. Fastmarkets estimates 2024 lithium supply up ~22% (China, Australia, South America, Africa), while demand remained strong but temporarily lagged, creating a near‑term surplus. Medium to long term, the outlook remains positive: global lithium consumption in 2024 is ~220kt LCE (+29% y/y), with EV demand projected to grow &lt;del&gt;12% annually through 2030. At that pace, 2030 demand could be &gt;3× today. New supply is coming: faster expansions in Australia/South America; Africa could contribute &lt;del&gt;18% of hard‑rock supply by 2030; U.S. projects (Thacker Pass; Arkansas geothermal brines) may come online 2026–2030. Risks: mining projects are multi‑year with tough permitting; U.S. timelines have slipped (e.g., Thacker Pass litigation). Refining is concentrated in China, where cash costs (&lt;/del&gt;$8k/t) are well below North America (&gt;&lt;/del&gt;$20k/t), meaning ore may still need overseas processing. Closing the midstream gap requires heavy investment in U.S. chemical refining and community/ESG solutions. Tech shifts (solid‑state, sodium‑ion) could alter mix, but most forecasts still see Li‑ion dominance through 2030 — lithium’s centrality likely persists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Representative companies &amp;#x26; investment take.&lt;/strong&gt; Upstream and midstream leaders include Albemarle (ALB), Lithium Americas (LAC), and Sigma Lithium (SGML). Albemarle, a top global producer with Chilean brines and Australian rock, is mature and cash‑generative, and plans U.S. refining capacity — a core, more defensive exposure, albeit earnings remain price‑sensitive. Lithium Americas is developing Thacker Pass, the largest U.S. clay resource, with GM investment and government support; 2026 start‑up is targeted, leaving the company in investment mode with valuation reflecting resource optionality — monitor progress and capex closely. Sigma operates high‑grade Brazilian assets and has begun trial output; an emerging cash‑flow name but subject to rumor‑driven swings. After prior exuberance, valuations have reset, offering long‑term entry points — but differentiate by stage: producers are more resilient; developers offer higher upside with higher risk. A prudent approach is a “core + satellite” mix: core allocation to leaders for baseline returns, plus smaller satellite bets on high‑beta names for potential alpha. Mind the price cycle — build on weakness and avoid chasing peaks.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;macro-backdrop--strategy-investing-amid-supplychain-rewiring&quot;&gt;Macro Backdrop &amp;#x26; Strategy: Investing Amid Supply‑Chain Rewiring&lt;/h2&gt;&lt;a href=&quot;#macro-backdrop--strategy-investing-amid-supplychain-rewiring&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Macro Backdrop &amp;#x26; Strategy: Investing Amid Supply‑Chain Rewiring”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;These segments are shaped by macro forces. First, intensifying U.S.–China rivalry puts “de‑risking” and on‑shore manufacturing at the center of security policy, not just economics. JPMorgan CEO Jamie Dimon has said the U.S. has relied too much on unreliable supply chains for security‑critical minerals and products — a vulnerability now laid bare. Hence the government’s industrial‑policy toolkit — subsidies, tariffs, CFIUS‑style reviews, and export controls — is being deployed to reshape key sectors. Carbon‑neutral commitments also require massive clean‑energy infrastructure, turbo‑charging demand for lithium, cobalt, nickel, rare earths, etc. Meanwhile, geopolitical shocks (trade tensions, conflicts) amplify supply uncertainty; countries increasingly securitize resources (e.g., China’s repeated curbs on critical‑mineral exports; the U.S. using the NDAA and related measures to prioritize domestic supply). Second, “friend‑shoring” is real: U.S. alliances with resource‑rich partners (Australia, Canada, parts of Africa) aim to build diversified, lower‑risk networks (e.g., the Minerals Security Partnership). Expect a more distributed raw‑materials map and more cross‑border opportunities — but also local instability and competition with Chinese capital. Third, macro cycles matter: inflation can lift commodity prices and resource cash flows, but higher rates raise project financing costs and compress multiples for growth names. The recent hiking cycle pressured renewables/storage equities; over the long run, however, real‑asset scarcity can trump monetary headwinds if structural shortages emerge. Investors should weigh macro and industry cycles and time entries — adding on weakness to policy‑supported quality names can be effective.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;investor-playbook-balancing-growth-and-risk&quot;&gt;Investor Playbook: Balancing Growth and Risk&lt;/h2&gt;&lt;a href=&quot;#investor-playbook-balancing-growth-and-risk&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Investor Playbook: Balancing Growth and Risk”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Policy‑beneficiary names.&lt;/strong&gt; Companies with subsidies, orders, or strategic backing (DoD/DOE) enjoy higher earnings visibility: examples include U.S. Antimony with defense contracts, Eos with a DOE loan, and IRA‑benefit U.S. battery manufacturers. Track policy flows and position accordingly — but assess whether support is already priced in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Medium‑to‑long‑term compounders.&lt;/strong&gt; Firms with core resources/technology and large addressable markets — e.g., Albemarle, MP Materials, Tesla — have solid fundamentals and can scale with their sectors. Consider buying on weakness and holding through cycles.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;High‑volatility concepts.&lt;/strong&gt; Pre‑revenue miners and early‑tech storage names can be explosive — but akin to venture exposure, with binary risks. If participating, keep position sizes modest and use clear risk controls.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Valuation discipline.&lt;/strong&gt; Hot themes attract capital; some names embed overly optimistic scenarios. Watch P/B, P/S versus peers, and the realism of forward estimates. If fundamentals lag price, consider trimming.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Portfolio mix and diversification.&lt;/strong&gt; A “core–satellite” structure can balance upside and volatility: core in stable leaders, small satellites in higher‑growth, higher‑risk names for potential excess returns.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learn the basics.&lt;/strong&gt; Understanding terms like rare earths, spodumene, and storage tech helps judge headline impact. Research and filings remain essential before allocating capital.&lt;/p&gt;
&lt;p&gt;In sum, the “U.S. Security Index” mirrors the investment through‑line of great‑power competition and energy transition: from resource independence to frontier‑tech self‑reliance. The theme has strategic tailwinds but also speculative noise. For individual investors, opportunity and risk are two sides of the same coin. Ground decisions in fundamentals, follow policy signals, diversify, and keep a long‑term lens to balance national‑security themes with sustainable wealth creation.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;representative-companies-and-key-takeaways-summary&quot;&gt;Representative Companies and Key Takeaways (Summary)&lt;/h2&gt;&lt;a href=&quot;#representative-companies-and-key-takeaways-summary&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Representative Companies and Key Takeaways (Summary)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;




































































&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Company&lt;/th&gt;&lt;th&gt;Segment&lt;/th&gt;&lt;th&gt;Strategic Role &amp;#x26; Focus&lt;/th&gt;&lt;th&gt;Key Risks&lt;/th&gt;&lt;th&gt;Investment View (Medium/Long Term)&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Cameco (CCJ)&lt;/td&gt;&lt;td&gt;Nuclear/Uranium&lt;/td&gt;&lt;td&gt;One of the world’s largest uranium suppliers; key allied source for U.S./UK utilities; long‑term contracts&lt;/td&gt;&lt;td&gt;Uranium price volatility; resource concentration and geopolitical risks&lt;/td&gt;&lt;td&gt;Core sector leader with relative defensiveness; suitable as a nuclear “core” holding&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Energy Fuels (UUUU)&lt;/td&gt;&lt;td&gt;Nuclear/Uranium&lt;/td&gt;&lt;td&gt;Leading U.S. uranium miner with WY/TX assets; benefits from U.S. strategic uranium purchases; expanding into rare‑earth processing&lt;/td&gt;&lt;td&gt;Small scale and earnings volatility; commodity downturns hit cash flow&lt;/td&gt;&lt;td&gt;Clear policy tailwinds and growth optionality; higher volatility — size positions modestly&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Tesla (TSLA)&lt;/td&gt;&lt;td&gt;Batteries/Storage&lt;/td&gt;&lt;td&gt;EV leader; U.S. cell production (4680) and grid/home storage; strong tech and brand&lt;/td&gt;&lt;td&gt;Valuation embeds high growth; auto competition may compress margins&lt;/td&gt;&lt;td&gt;Long‑term outlook positive; hold through volatility, add on pullbacks&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Eos Energy (EOSE)&lt;/td&gt;&lt;td&gt;Batteries/Storage&lt;/td&gt;&lt;td&gt;U.S. zinc‑based grid storage; aligned with safety/longevity needs; DOE loan support&lt;/td&gt;&lt;td&gt;Pre‑profit; ramp‑up and customer adoption risks&lt;/td&gt;&lt;td&gt;High‑beta front‑edge storage exposure; small, speculative allocation&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MP Materials (MP)&lt;/td&gt;&lt;td&gt;Rare Earths/Strategic Metals&lt;/td&gt;&lt;td&gt;Only producing U.S. RE mine (Mountain Pass); building separation/magnet capacity with U.S. support; defense/EV demand pull&lt;/td&gt;&lt;td&gt;Midstream still partly China‑reliant; price/policy shocks&lt;/td&gt;&lt;td&gt;Foundational to U.S. RE revival; attractive long‑term holding as domestic chain matures&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;USA Rare Earth (USAR)&lt;/td&gt;&lt;td&gt;Rare Earths/Strategic Metals&lt;/td&gt;&lt;td&gt;Round Top (TX) deposit with heavy RE and other criticals; strategic value post‑listing&lt;/td&gt;&lt;td&gt;Pre‑revenue; financing and permitting challenges&lt;/td&gt;&lt;td&gt;High strategic optionality with hype risk; suitable only for small, risk‑tolerant allocations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Albemarle (ALB)&lt;/td&gt;&lt;td&gt;Lithium&lt;/td&gt;&lt;td&gt;Top‑tier global producer with brine/rock assets; expanding U.S. refining to secure supply&lt;/td&gt;&lt;td&gt;High earnings sensitivity to lithium prices; policy/country risks&lt;/td&gt;&lt;td&gt;Strong fundamentals and leverage to long‑term demand; accumulate on reasonable valuation&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Lithium Americas (LAC)&lt;/td&gt;&lt;td&gt;Lithium&lt;/td&gt;&lt;td&gt;Thacker Pass (NV) — largest U.S. clay resource; GM invested; government support; Argentina exposure&lt;/td&gt;&lt;td&gt;Long build cycles and high capex; clay extraction commercialization risk&lt;/td&gt;&lt;td&gt;U.S. lithium new‑entrant with strong growth potential; small allocation with patience&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: This content is for information only and not investment advice. Markets involve risk; conduct your own research and make independent decisions.&lt;/em&gt;&lt;/p&gt;</content:encoded><category>Finance</category><category>US Market</category><category>Investment</category><category>JPMorgan</category><category>Energy</category><category>Minerals</category></item><item><title>Oracle Teams Up with AMD: Outlook and Risks for AI‑Era Stock Performance</title><link>https://www.vibesparking.com/en/blog/finance/us-market/2025-10-15-oracle-amd-ai-collaboration-stock-outlook/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/finance/us-market/2025-10-15-oracle-amd-ai-collaboration-stock-outlook/</guid><pubDate>Wed, 15 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Oracle携手AMD：AI时代股价走势的展望与风险 --&gt;
&lt;div&gt;&lt;h2 id=&quot;background-exploding-ai-compute-demand-drives-bigtech-collaboration&quot;&gt;Background: Exploding AI Compute Demand Drives Big‑Tech Collaboration&lt;/h2&gt;&lt;a href=&quot;#background-exploding-ai-compute-demand-drives-bigtech-collaboration&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Background: Exploding AI Compute Demand Drives Big‑Tech Collaboration”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;On October 14, Oracle and AMD announced a plan to build an ultra‑scale AI super‑cluster. Oracle Cloud Infrastructure (OCI) will begin deploying 50,000 AMD Instinct MI450 GPUs in Q3 2026, with further expansion expected through 2027 and beyond. This would make Oracle the first hyperscaler to adopt AMD’s newest GPUs at scale for external AI compute services. According to launch details, each MI450 provides up to 432 GB of HBM4 and 20 TB/s memory bandwidth, enabling models roughly 50% larger than the prior generation to fit fully in memory.&lt;/p&gt;
&lt;p&gt;Oracle’s move targets the explosive growth in compute needs for next‑generation AI models. Building on years of collaboration with AMD (OCI has offered MI300X services since 2024), Oracle aims to provide enterprise customers with a high‑performance, scalable platform for AI training and inference using an open architecture and the latest hardware.&lt;/p&gt;
&lt;p&gt;Beyond technology, markets view this as a strategic play to seize share in the AI wave. Oracle increasingly positions AI as its cloud growth engine. CEO Safra Catz expects OCI revenue to surge 77% YoY to $18B this fiscal year and sees potential to reach $144B over the next four years. Against this backdrop, Oracle is tightening its partnership with AMD to pre‑build next‑gen AI infrastructure — a move with major upside but meaningful execution and market risks.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;gpu-market-landscape-nvidia-dominates-amd-is-catching-up&quot;&gt;GPU Market Landscape: Nvidia Dominates, AMD Is Catching Up&lt;/h2&gt;&lt;a href=&quot;#gpu-market-landscape-nvidia-dominates-amd-is-catching-up&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “GPU Market Landscape: Nvidia Dominates, AMD Is Catching Up”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Today, Nvidia supplies over 90% of high‑performance AI GPUs used globally. Most hyperscalers — Google, Amazon, Microsoft — train AI primarily on Nvidia GPUs and the CUDA software stack. However, rising demand for a second source and more open alternatives is creating opportunity for challengers like AMD.&lt;/p&gt;
&lt;p&gt;AMD has invested heavily in data‑center GPUs. Its Instinct line (e.g., MI250, MI300X) has been trialed in supercomputers and cloud, though historically lagging Nvidia on ecosystem depth and some performance metrics. The new MI450 is a step‑change in memory capacity and bandwidth, paired with the open ROCm stack, aiming to offer a competitive, more open alternative to Nvidia’s H100/H200.&lt;/p&gt;
&lt;p&gt;Other chipmakers are also pursuing AI acceleration. Broadcom reportedly partnered with OpenAI on custom accelerators, sending Broadcom’s stock up ~10% on the news. Intel’s Gaudi series (via Habana) targets value with competitive price‑performance. The hardware landscape is diversifying as leading AI firms sign multi‑vendor deals.&lt;/p&gt;
&lt;p&gt;Price and supply are critical. Nvidia’s flagship H100 has traded at $30,000–$40,000 per unit (peaking higher during shortages). Reports suggest AMD has priced MI300 series more aggressively (around ~$10,000 for large customers). Intel markets Gaudi at roughly half the cost of Nvidia alternatives. Hyperscalers are incentivized to diversify for cost control, creating an opening for AMD — though potentially at lower margins.&lt;/p&gt;
&lt;p&gt;Bottom line: Nvidia remains dominant near term, but AMD’s technical progress and alliances should lift its share over the next few years.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;cloud-competition-oracles-opportunities-and-challenges&quot;&gt;Cloud Competition: Oracle’s Opportunities and Challenges&lt;/h2&gt;&lt;a href=&quot;#cloud-competition-oracles-opportunities-and-challenges&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Cloud Competition: Oracle’s Opportunities and Challenges”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Oracle is a relative latecomer to cloud vs. AWS, Azure, and GCP. The AI surge, however, is a chance to move faster: many enterprises want to train large models and deploy generative AI but face tight GPU supply, high costs, and single‑vendor risk on mainstream clouds. Oracle’s bet on massive AMD GPU clusters aims to differentiate with open standards and better price‑performance, while attracting multi‑cloud customers who don’t want to rely on a single provider.&lt;/p&gt;
&lt;p&gt;Oracle’s “All‑in on AI” strategy is already yielding big wins. Since 2023, Oracle has secured multiple multi‑billion‑dollar AI cloud contracts. Market chatter has also suggested a five‑year, up‑to‑$300B agreement with OpenAI to co‑build 4.5 GW of data‑center capacity — reportedly the largest cloud contract ever. While not officially disclosed, these reports spurred investor optimism; when the rumor emerged in September, Oracle’s stock jumped ~25% after hours.&lt;/p&gt;
&lt;p&gt;Even setting giant deals aside, AI demand is driving OCI’s guidance higher: this year, Oracle raised its OCI growth outlook from 70% to 77%. Founder Larry Ellison said “AI changes everything,” and expects AI to materially expand cloud demand in coming years. On the application layer, Oracle plans “AI Database” offerings that integrate models like ChatGPT, Claude, and Gemini directly into Oracle Database to simplify enterprise access — a classic Oracle strength that could complement its underlying compute build‑out.&lt;/p&gt;
&lt;p&gt;Challenges remain. The Big Three clouds are not standing still: AWS continues to procure Nvidia GPUs and expand Trainium/Inferentia; Azure is tied closely with OpenAI and works with multiple silicon partners; Google has TPUs plus Nvidia options. Competing with established ecosystems and deep capital pools is hard. Meanwhile, buying 50,000 GPUs entails massive capex and technical risk; if AI demand slows or customers underutilize capacity, Oracle could be left with excess.&lt;/p&gt;
&lt;p&gt;Net: Oracle’s AI‑cloud push is a high‑risk, high‑reward wager — one that could materially expand its cloud footprint and share price if executed well.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;near-term-6-months-elevated-sentiment-likely-consolidation&quot;&gt;Near Term (6 Months): Elevated Sentiment, Likely Consolidation&lt;/h2&gt;&lt;a href=&quot;#near-term-6-months-elevated-sentiment-likely-consolidation&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Near Term (6 Months): Elevated Sentiment, Likely Consolidation”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Into the next six months (through 1H 2026), Oracle and AMD shares should track sentiment and quarterly prints. Both have rallied strongly on AI narratives: by mid‑October, AMD shares were up ~85% YTD, near all‑time highs; Oracle was up ~80% YTD. AMD popped 24% in a day after announcing an OpenAI partnership, adding ~$63B in market cap — a sign of heightened expectations around AMD’s AI trajectory.&lt;/p&gt;
&lt;p&gt;Short term, that enthusiasm likely needs digestion. Some positives (e.g., Oracle–AMD collaboration) are already priced in, and investors may wait for tangible results. Macro variables (rates, growth data) can also add volatility.&lt;/p&gt;
&lt;p&gt;If AMD’s next couple of quarters show data‑center momentum (e.g., MI300X traction), the AI story strengthens. But before MI450 volume ramps, revenue impact may remain limited and expectations‑driven, implying higher share‑price beta.&lt;/p&gt;
&lt;p&gt;Net: expect range‑bound trading at elevated levels, with newsflow (partnerships, product launches, conference commentary) driving swings until fundamentals catch up.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;midterm-1-year-turning-partnerships-into-revenue&quot;&gt;Midterm (1 Year): Turning Partnerships into Revenue&lt;/h2&gt;&lt;a href=&quot;#midterm-1-year-turning-partnerships-into-revenue&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Midterm (1 Year): Turning Partnerships into Revenue”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Looking 12 months out (into 2H 2026), Oracle–AMD cooperation should start bearing fruit. Q3 2026 is the target window for Oracle’s MI450‑based super‑cluster to come online and begin serving customers. That’s when early investment can begin converting to revenue:&lt;/p&gt;
&lt;p&gt;• For AMD: Deliveries of 50,000 MI450s would contribute significant sales. Its OpenAI partnership is slated to begin deployments (reportedly ~1 GW in late 2026, growing to ~6 GW over several years). Management and sell‑side views suggest these mega‑orders could add “tens of billions” in new revenue over time and boost EPS materially — assuming successful production ramp and on‑spec performance.&lt;/p&gt;
&lt;p&gt;• For Oracle: AI compute capacity will step up materially with MI450 clusters in production, complementing earlier MI300X/MI355X services. Key AI customer wins should begin to contribute. If rumored mega‑deals prove out, fiscal 2027 could see step‑function growth, with the market likely to pre‑price part of that in 2026.&lt;/p&gt;
&lt;p&gt;Execution and competition are the key risks: AMD must hit schedules and targets; Oracle must convert capacity into sticky workloads amidst aggressive rivals.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;long-term-3-years-industry-reshaping-with-high-uncertainty&quot;&gt;Long Term (3 Years): Industry Reshaping with High Uncertainty&lt;/h2&gt;&lt;a href=&quot;#long-term-3-years-industry-reshaping-with-high-uncertainty&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Long Term (3 Years): Industry Reshaping with High Uncertainty”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;By ~2028, AI/GPU/cloud dynamics could look very different. The opportunity set is large, but so are the uncertainties:&lt;/p&gt;
&lt;p&gt;• AMD Upside: If partnerships execute, AMD could emerge as a major AI‑accelerator supplier by 2027–2028, with data‑center GPUs becoming a multi‑billion‑dollar pillar. In a bullish case, AMD could reach 20%–30% share in AI accelerators.&lt;/p&gt;
&lt;p&gt;• AMD Risks: Technology cycles are fast. Nvidia’s Blackwell (2025–2026) and potential advances (e.g., GPU+CPU+optical interconnects) may extend its lead. AMD must sustain heavy R&amp;#x26;D to keep pace in architecture and software ecosystems.&lt;/p&gt;
&lt;p&gt;• Oracle Upside: If Oracle becomes a top‑tier AI compute provider through deep wins with customers like OpenAI, its cloud scale and reputation could rise significantly by 2028.&lt;/p&gt;
&lt;p&gt;• Oracle Risks: The AI cloud could bifurcate into a few giants or devolve into price wars. If AWS/Azure extend leads, Oracle’s share gains could remain limited.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;opportunities-and-risks-summary&quot;&gt;Opportunities and Risks: Summary&lt;/h2&gt;&lt;a href=&quot;#opportunities-and-risks-summary&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Opportunities and Risks: Summary”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Key Opportunities&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Explosive AI demand expands the total addressable market.&lt;/li&gt;
&lt;li&gt;Flagship collaborations can lift market share and revenue visibility.&lt;/li&gt;
&lt;li&gt;A more diversified silicon ecosystem (beyond Nvidia) reduces single‑vendor risk.&lt;/li&gt;
&lt;li&gt;Underlying business trends for both Oracle and AMD are favorable.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Key Risks&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Intense competition and fast product cycles.&lt;/li&gt;
&lt;li&gt;Execution risk (R&amp;#x26;D, yield, delivery, software ecosystem).&lt;/li&gt;
&lt;li&gt;Macro and regulatory headwinds.&lt;/li&gt;
&lt;li&gt;Valuation and bubble risk after sharp rallies.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion-stockprice-outlook&quot;&gt;Conclusion: Stock‑Price Outlook&lt;/h2&gt;&lt;a href=&quot;#conclusion-stockprice-outlook&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion: Stock‑Price Outlook”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Oracle and AMD are leaning into the AI infrastructure super‑cycle. If they execute, both could convert surging compute demand and a more open, multi‑vendor landscape into durable growth and shareholder returns. Over six months, sentiment and newsflow likely dominate. Over a year, delivery milestones and contract conversions become the key drivers. Over three years, the winners will be those who ship reliably at scale while maintaining strong ecosystems and cost profiles.&lt;/p&gt;
&lt;p&gt;This report is based on publicly available information and does not constitute investment advice. Markets are risky; please invest prudently.&lt;/p&gt;</content:encoded><category>Finance</category><category>US Market</category><category>Investment</category><category>Oracle</category><category>AMD</category><category>AI</category><category>GPU</category><category>Cloud Computing</category></item><item><title>Q3 2025 U.S. Bank Earnings: Market Correlations and AI Outlook</title><link>https://www.vibesparking.com/en/blog/finance/us-market/2025-10-16-2025-q3-bank-earnings-market-correlation-ai-outlook/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/finance/us-market/2025-10-16-2025-q3-bank-earnings-market-correlation-ai-outlook/</guid><pubDate>Wed, 15 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # 银行股财报季与美股市场相关性分析及AI板块展望 --&gt;
&lt;div&gt;&lt;h2 id=&quot;key-findings-banks-closely-track-the-broad-market&quot;&gt;Key Findings: Banks Closely Track the Broad Market&lt;/h2&gt;&lt;a href=&quot;#key-findings-banks-closely-track-the-broad-market&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Key Findings: Banks Closely Track the Broad Market”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Based on historical data from Oct 2020 through Oct 2025, U.S. bank stocks exhibit a pronounced positive correlation with the major indices. The daily‑return correlation between the Financials ETF (XLF) and the S&amp;#x26;P 500 is 0.789 — a strong positive relationship. Practically, bank shares tend to move in tandem with the broader market, though the link is not perfect and retains some independence.&lt;/p&gt;
&lt;p&gt;By comparison, the correlation between bank stocks and the Nasdaq is lower at 0.626, reflecting structural differences between Financials and the tech‑heavy Nasdaq. Notably, the correlation between the S&amp;#x26;P 500 and the Nasdaq is as high as 0.951, indicating very tight co‑movement between the two benchmarks.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;earningsseason-impact-pattern&quot;&gt;Earnings‑Season Impact Pattern&lt;/h2&gt;&lt;a href=&quot;#earningsseason-impact-pattern&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Earnings‑Season Impact Pattern”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Analyzing the bank‑earnings windows across 21 quarters over the past five years (the 5 trading days before and after each earnings release) reveals a few consistent patterns:&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;directional-synchronicity&quot;&gt;Directional synchronicity&lt;/h3&gt;&lt;a href=&quot;#directional-synchronicity&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Directional synchronicity”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Following bank earnings, Financials and the S&amp;#x26;P 500 moved in the same direction 71.4% of the time; the synchronicity rate with the Nasdaq was 66.7%. Bank earnings thus tend to exert a notable directional influence on the overall market.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;return-characteristics&quot;&gt;Return characteristics&lt;/h3&gt;&lt;a href=&quot;#return-characteristics&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Return characteristics”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;In the five trading days after earnings, Financials rose an average of 0.49%, slightly ahead of the S&amp;#x26;P 500’s 0.09% and the Nasdaq’s −0.19%. Strong bank results typically provide the most direct uplift to the Financials sector, with a comparatively smaller spillover to tech.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;yeartoyear-differences&quot;&gt;Year‑to‑year differences&lt;/h3&gt;&lt;a href=&quot;#yeartoyear-differences&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Year‑to‑year differences”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The pattern varies by year. In 2022, post‑earnings performance was the strongest (Financials gained an average of 2.47% over the 5 days following reports), while 2020–2021 and 2025 saw negative returns — a reflection of shifting macro backdrops and sentiment.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;recent-q3-2025-bank-results-and-market-reaction&quot;&gt;Recent Q3 2025 Bank Results and Market Reaction&lt;/h2&gt;&lt;a href=&quot;#recent-q3-2025-bank-results-and-market-reaction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Recent Q3 2025 Bank Results and Market Reaction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;From Oct 14–15, 2025, large banks including JPMorgan, Goldman Sachs, Citigroup, Wells Fargo, and BlackRock reported Q3 results, broadly beating expectations. Highlights include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JPMorgan: revenue +9% to $47.1B; net income +12% to $14.4B; investment‑banking revenue +17%&lt;/li&gt;
&lt;li&gt;Goldman Sachs: net income +37% to $4.1B; investment‑banking revenue +42%; M&amp;#x26;A advisory +60%&lt;/li&gt;
&lt;li&gt;Citigroup: revenue +9% to $22.1B; investment‑banking revenue +34%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Strength was driven primarily by resurgent investment‑banking activity and elevated trading. A record‑setting quarter for equities and warming M&amp;#x26;A supported the backdrop. Still, despite impressive prints, JPMorgan and Goldman shares fell 3.8% and 5.0% on the day, respectively — a reminder that elevated expectations and valuation can cap near‑term reactions.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;fiveyear-context&quot;&gt;Five‑Year Context&lt;/h2&gt;&lt;a href=&quot;#fiveyear-context&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Five‑Year Context”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;From Oct 2020 to Oct 2025, Financials (XLF) posted cumulative gains of 119.09%, outpacing the S&amp;#x26;P 500’s 99.23% and the Nasdaq’s 104.70%. By year:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2021: Financials led with +34.28%, aided by recovery momentum and rising‑rate expectations&lt;/li&gt;
&lt;li&gt;2022: broad declines; Financials −13.48%, still better than the Nasdaq’s −33.89%&lt;/li&gt;
&lt;li&gt;2023: tech rebound; the Nasdaq surged +44.52%, while Financials rose +9.56%&lt;/li&gt;
&lt;li&gt;2024–2025: Financials continued to outperform amid evolving rate dynamics&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;outlook-q4-2025-into-2026&quot;&gt;Outlook: Q4 2025 Into 2026&lt;/h2&gt;&lt;a href=&quot;#outlook-q4-2025-into-2026&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Outlook: Q4 2025 Into 2026”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;sp-500-and-nasdaq-targets&quot;&gt;S&amp;#x26;P 500 and Nasdaq targets&lt;/h3&gt;&lt;a href=&quot;#sp-500-and-nasdaq-targets&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “S&amp;#x26;P 500 and Nasdaq targets”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Street targets skew cautiously optimistic into year‑end:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Goldman Sachs: S&amp;#x26;P 500 YE target 6,800 (~2% upside vs. current), and 6,900 for 2026&lt;/li&gt;
&lt;li&gt;JPMorgan: YE range 6,000–6,500, cautious stance&lt;/li&gt;
&lt;li&gt;BMO Capital: 7,000 — among the most bullish&lt;/li&gt;
&lt;li&gt;Morgan Stanley: YE 6,500; warns U.S.–China trade escalation could drive an ~11% pullback&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Analysts broadly see an expected ~8% Q3 earnings growth (which would mark a ninth consecutive quarter if achieved) as a core support. Fed easing expectations, AI‑driven tech growth, and corporate profit resilience sit behind the constructive bias.&lt;/p&gt;
&lt;p&gt;Risks remain: the S&amp;#x26;P 500 trades at 22.8x earnings — above the 5‑yr average (19.9x) and 10‑yr average (18.6x). Market cap concentration is elevated: roughly 40% sits in 10 “super‑stocks,” leaving less margin for error if leaders stumble.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;ai-sector-deep-dive&quot;&gt;AI Sector Deep Dive&lt;/h2&gt;&lt;a href=&quot;#ai-sector-deep-dive&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “AI Sector Deep Dive”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;AI leaders should continue to drive index performance, though growth rates likely moderate from prior peaks:&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;nvidia&quot;&gt;NVIDIA&lt;/h3&gt;&lt;a href=&quot;#nvidia&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “NVIDIA”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;FY2025 revenue reached $130.5B, up 114% y/y, with Q4 revenue at $39.3B. FY2026 Q1 revenue was $44.1B (+69% y/y, decelerating). The Blackwell architecture contributed ~$11B in Q4 revenue — dubbed the “fastest product ramp” in NVIDIA’s history. Consensus points to FY2026 revenue around $198.8B and EPS of $4.32. Despite slower growth, NVIDIA retains ~80% share in AI accelerators.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;microsoft&quot;&gt;Microsoft&lt;/h3&gt;&lt;a href=&quot;#microsoft&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Microsoft”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;In FY2025 Q4, Azure’s annualized revenue run‑rate topped $75B (+39% y/y). The company guides record ~$30B capex in FY2026 Q1 for AI infrastructure. Intelligent Cloud is expected to grow 25–26%, with Azure (ex‑some items) at ~37%. Microsoft Copilot MAUs surpassed 100M. Some analysts expect Microsoft could become the first $5T company.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;google-and-amazon&quot;&gt;Google and Amazon&lt;/h3&gt;&lt;a href=&quot;#google-and-amazon&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Google and Amazon”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Google Cloud Q2 revenue was $13.6B (+32% y/y), with a 20.7% operating margin; GCP (infrastructure) is estimated growing near 40%. AWS Q2 revenue was $30.9B (+17.5% y/y) but supply‑constrained. Anthropic is a flagship customer, and AWS is building &gt;1 GW of data‑center capacity to support AI demand.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;capex-trends&quot;&gt;Capex trends&lt;/h3&gt;&lt;a href=&quot;#capex-trends&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Capex trends”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The turning point: analysts expect cloud capex growth to slow meaningfully in 2026. Goldman sees growth stepping down from 54% (2025) to 26%; Morgan Stanley to 16%; Evercore to 18%. The deceleration reflects rising depreciation and return‑pressure. Amazon and Google are expected to decelerate the most (~11% slower), while Meta may sustain ~42% growth.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;ai-market-size&quot;&gt;AI market size&lt;/h3&gt;&lt;a href=&quot;#ai-market-size&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “AI market size”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The global AI market is projected to grow from $294.2B in 2025 to $1.77T by 2032 (29.2% CAGR). That underpins a durable multi‑year theme, but in the near term investors should watch how capex deceleration affects AI‑infrastructure valuations.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;investment-implications-and-risks&quot;&gt;Investment Implications and Risks&lt;/h2&gt;&lt;a href=&quot;#investment-implications-and-risks&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Investment Implications and Risks”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;banks&quot;&gt;Banks&lt;/h3&gt;&lt;a href=&quot;#banks&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Banks”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Large banks delivered strong Q3 2025 prints, with trading and investment‑banking as key drivers. However, ongoing Fed cuts could compress net interest margins, weighing on traditional lending profitability. Bank CEOs remain cautious, flagging tariff uncertainty, geopolitics, and consumer credit quality.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;ai-equities&quot;&gt;AI equities&lt;/h3&gt;&lt;a href=&quot;#ai-equities&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “AI equities”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;While AI remains the long‑term growth engine, consider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;stretched valuations leave limited error tolerance;&lt;/li&gt;
&lt;li&gt;slower capex growth could prompt multiple compression in AI infrastructure;&lt;/li&gt;
&lt;li&gt;concentration risk around a handful of mega caps.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Diversification into non‑mega‑cap beneficiaries (e.g., AMD, Palantir, select cloud providers) may be a more balanced approach.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;macro-risks&quot;&gt;Macro risks&lt;/h3&gt;&lt;a href=&quot;#macro-risks&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Macro risks”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;U.S.–China tensions, U.S. government shutdown risk, sticky inflation, and slowing growth could raise volatility. Seasonally, Q4 often brings choppier tape — stay alert.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;History suggests bank‑earnings seasons align positively with the broader U.S. market; strong bank prints often support risk appetite. The latest October reports again broadly beat, underscoring sector resilience in today’s macro mix.&lt;/p&gt;
&lt;p&gt;Into the next quarter, we expect modest gains for the S&amp;#x26;P 500 and Nasdaq, constrained by elevated valuations and macro uncertainty. AI should continue to lead, but with slower growth and capex normalization — making selectivity more important and blind chasing of richly valued mega caps less prudent.&lt;/p&gt;
&lt;p&gt;Financials have outperformed over the past five years, but 2026 could test durability amid a rate‑cut cycle. Balanced portfolios — blending cyclical Financials and secular AI winners while monitoring earnings quality and valuation — look prudent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: This report is based on public information and is not investment advice. Markets involve risk; proceed with caution.&lt;/strong&gt;&lt;/p&gt;</content:encoded><category>Finance</category><category>US Market</category><category>Investment</category><category>JPMorgan</category><category>Goldman Sachs</category><category>Citi</category><category>Wells Fargo</category><category>BlackRock</category><category>S&amp;P 500</category><category>Nasdaq</category><category>AI</category></item><item><title>One Prompt, Three Stacks: Shipping Session Auto‑Lock with Claude Code</title><link>https://www.vibesparking.com/en/blog/ai/claude-code/practices/2025-10-15-one-prompt-session-auto-lock/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/claude-code/practices/2025-10-15-one-prompt-session-auto-lock/</guid><pubDate>Wed, 15 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Write an absurdly short prompt and the agent patches Web (TypeScript), App (Flutter), and API (Rails) in one go: adds the feature, wires permissions, localizes strings, and even creates migrations and runs checks. The best part: easy to write, easy to reuse.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sounds unbelievable? Read on.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;why-this-approach-works-now&quot;&gt;Why this approach works now&lt;/h2&gt;&lt;a href=&quot;#why-this-approach-works-now&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Why this approach works now”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Claude Code has plugins: slash commands, sub‑agents, MCP servers, and lifecycle hooks bundled into installable units. Teams can turn cross‑stack edits into a standard pipeline.&lt;/li&gt;
&lt;li&gt;MCP (Model Context Protocol) is like giving AI a USB‑C port: plug IDEs/agents into your repos, databases, and tools with structured read/write and execution.&lt;/li&gt;
&lt;li&gt;Remote MCP is supported: connect to cloud services with auth; in enterprise multi‑repo/multi‑environment setups it’s much simpler.&lt;/li&gt;
&lt;li&gt;Official best practices for agentic coding emphasize structured goals and checklist‑style requirements, making outcomes more reliable.&lt;/li&gt;
&lt;li&gt;New models and ecosystem momentum help. Sonnet 4.5 is stronger for complex agents and “computer use” scenarios; paired with plugins/MCP it makes the path from prompt to patch much smoother.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;a-standin-scenario-session-autolock-duration&quot;&gt;A stand‑in scenario: Session Auto‑Lock Duration&lt;/h2&gt;&lt;a href=&quot;#a-standin-scenario-session-autolock-duration&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “A stand‑in scenario: Session Auto‑Lock Duration”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;We’re adding a new item under Security Settings: Session Auto‑Lock (Duration).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two options: Standard (2 minutes) and Strict (30 seconds)&lt;/li&gt;
&lt;li&gt;Only authorized users can view/modify&lt;/li&gt;
&lt;li&gt;Web Admin, App Settings, and API change together&lt;/li&gt;
&lt;li&gt;i18n in English and Chinese&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This feature is generic enough and avoids any sensitive business logic.&lt;/p&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;a-structured-prompt-for-claude-code-dropin&quot;&gt;A structured prompt for Claude Code (drop‑in)&lt;/h2&gt;&lt;a href=&quot;#a-structured-prompt-for-claude-code-dropin&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “A structured prompt for Claude Code (drop‑in)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Treat the following as a “work order”: short sentences, imperative verbs, 2–4 lines per block. Fewer back‑and‑forth questions, more results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Task: Add &quot;Session Auto-Lock Duration&quot; to Security Settings across Web (TypeScript), App (Flutter), and API (Rails).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Context:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Two options: standard=2 minutes, strict=30 seconds. Default=standard.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Only authorized users can view/modify this setting.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Requirements:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;1) Web Admin:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Add a dropdown field under Security Settings.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Options: Standard / Strict. Bind permission key: session_auto_lock.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Localize: en_US, zh_CN.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;2) Mobile App:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Add the same dropdown in Security Settings screen.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Read/write to user/device security config. Hide/disable if unauthorized.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Localize: en_US, zh_CN.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;3) API:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- DB migration: add string column &quot;session_auto_lock_duration&quot; with default &quot;standard&quot;.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Model enum: STANDARD/STRICT/ALL_OPTIONS.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Permission registration for &quot;session_auto_lock&quot;.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Validation: only allow ALL_OPTIONS; return 403 if unauthorized.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;4) Copy:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- en_US: &quot;Standard: 2 minutes&quot;, &quot;Strict: 30 seconds&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- zh_CN: &quot;标准（2分钟）&quot;, &quot;严格（30秒）&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;5) Review checklist:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Permission gating works in Web/App/API.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Default renders as &quot;standard&quot;.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- i18n strings appear correctly.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Ship diffs per repo with tests passing.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This “clear landing points + checklisted requirements” style works best for agentic coding. Claude Code also recommends structured instructions to reduce iteration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;what-changes-look-like-across-the-three-stacks&quot;&gt;What changes look like across the three stacks&lt;/h2&gt;&lt;a href=&quot;#what-changes-look-like-across-the-three-stacks&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “What changes look like across the three stacks”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;web-typescript&quot;&gt;Web (TypeScript)&lt;/h3&gt;&lt;a href=&quot;#web-typescript&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Web (TypeScript)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add a Session Auto‑Lock dropdown under Security Settings.&lt;/li&gt;
&lt;li&gt;Bind permission key &lt;code dir=&quot;auto&quot;&gt;session_auto_lock&lt;/code&gt;; hide or disable if unauthorized.&lt;/li&gt;
&lt;li&gt;i18n:
&lt;ul&gt;
&lt;li&gt;en_US: Standard / Strict&lt;/li&gt;
&lt;li&gt;zh_CN: 标准（2分钟）/ 严格（30秒）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;app-flutter&quot;&gt;App (Flutter)&lt;/h3&gt;&lt;a href=&quot;#app-flutter&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “App (Flutter)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add the same dropdown on the Security page.&lt;/li&gt;
&lt;li&gt;Read/write to the security configuration; disable or hide if unauthorized.&lt;/li&gt;
&lt;li&gt;Copy matches Web for consistency.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;api-rails&quot;&gt;API (Rails)&lt;/h3&gt;&lt;a href=&quot;#api-rails&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “API (Rails)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Migration: &lt;code dir=&quot;auto&quot;&gt;session_auto_lock_duration&lt;/code&gt;, default &lt;code dir=&quot;auto&quot;&gt;standard&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Model constants: &lt;code dir=&quot;auto&quot;&gt;STANDARD&lt;/code&gt; / &lt;code dir=&quot;auto&quot;&gt;STRICT&lt;/code&gt; / &lt;code dir=&quot;auto&quot;&gt;ALL_OPTIONS&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Permission registration: &lt;code dir=&quot;auto&quot;&gt;session_auto_lock&lt;/code&gt;; whitelist validation on write; 403 if unauthorized.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;These steps can be chained via plugins + MCP: the agent reads/writes across repos, generates migrations, runs tests, and opens PRs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;how-teams-operationalize-it&quot;&gt;How teams operationalize it&lt;/h2&gt;&lt;a href=&quot;#how-teams-operationalize-it&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “How teams operationalize it”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Preparation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Web/App/API, wire up a lightweight agent or expose the sequence as a plugin command.&lt;/li&gt;
&lt;li&gt;Connect local/remote MCP; bind repos and CI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Execution&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trigger with the “work‑order‑style” prompt above.&lt;/li&gt;
&lt;li&gt;The agent produces patches, migrations, i18n, and permission registration; then opens MR/PR.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CI runs Lint/Tests; failures go back to the agent for fixes.&lt;/li&gt;
&lt;li&gt;Humans review only key diffs and acceptance criteria.&lt;/li&gt;
&lt;li&gt;Need compliance/auditing? Add operation logging and rollback scripts to the plugin.
&lt;ul&gt;
&lt;li&gt;Note: tooling is increasingly focused on governance and safety; agent platforms are improving policy and usage controls.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;pitfalls-and-tips&quot;&gt;Pitfalls and tips&lt;/h2&gt;&lt;a href=&quot;#pitfalls-and-tips&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Pitfalls and tips”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Don’t write scattered instructions. Short imperative sentences with concrete targets work best.&lt;/li&gt;
&lt;li&gt;Hard‑code the permission keys, defaults, and whitelist options; don’t leave them to model “creativity”.&lt;/li&gt;
&lt;li&gt;Provide the final copy strings up front to avoid another round trip.&lt;/li&gt;
&lt;li&gt;Remote MCP is great, but enforce authentication and least privilege; separate environments and roles.&lt;/li&gt;
&lt;li&gt;Save this prompt in the team’s instruction library/plugin. Next time you only swap the “feature name + enum options”.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;closing&quot;&gt;Closing&lt;/h2&gt;&lt;a href=&quot;#closing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Closing”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Let standards handle the complex parts, and humans keep the simple parts.
With one structured prompt + pluginized agent + MCP,
you can flatten the “cross‑stack, cross‑repo, cross‑language” busywork.
You focus on defining the requirement and making the final call; let the machine run the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you think? Would this Session Auto‑Lock approach fit your project?&lt;/strong&gt;&lt;/p&gt;&lt;!-- 
---

# Title suggestions (multi‑language + slug)

1. One Prompt, Three Stacks: Shipping Session Auto-Lock with Claude Code
   繁體: 一句提示，三端齊更：用 Claude Code 上線「自動鎖屏時長」
   日本語: 一文プロンプトで三層同時更新：Session Auto-Lock を実装
   Français : Un prompt, trois piles : déployer l’auto-verrouillage de session
   Español: Un prompt, tres stacks: publicar Auto-Lock de sesión
   Português: Um prompt, três stacks: lançar Auto-Lock de sessão
   slug: one-prompt-session-auto-lock

2. Spec as Switches, Agents Do the Rest
   繁體: 把需求寫成開關，代理接力落地
   日本語: 仕様をスイッチ化して、実装はエージェント任せ
   Français : Spécifiez en interrupteurs, laissez agir les agents
   Español: Especifica como interruptores, que los agentes hagan el resto
   Português: Especifique como chaves, deixe os agentes fazerem o resto
   slug: mcp-agentic-cross-platform

3. From Prompt to Prod: A Plugin‑Powered One‑Run Refactor
   繁體: 從提示到上線：外掛化 Claude Code 的一口氣聯改
   日本語: プロンプトから本番へ：プラグイン化 Claude Code の一括改修
   Français : Du prompt à la prod : refactorisation « one-run »
   Español: Del prompt a producción: refactor “one-run”
   Português: Do prompt à produção: refactor “one-run”
   slug: prompt-to-prod-one-run

---

# Image ideas (illustration, 2:1, no Chinese text)

Cover prompt:
“Wide 2:1 illustration of an AI agent launching three parallel assembly lines labeled Web, App, API. Robotic arms apply a ‘Lock’ timer toggle to a browser, a phone, and a server rack. Clean tech style, soft gradients, crisp edges.”

Key visual #1 (structured prompt):
“A tidy checklist card with five short bullets sliding into an AI agent’s toolbox. The road forks to TypeScript, Flutter, Rails. Minimal blueprint vibe, 2:1.”

Key visual #2 (MCP connections):
“A USB-C hub metaphor linking repo, database, CI, and permissions service. Centered security shield icon. Flat vector, 2:1.”

Key visual #3 (audit and rollback):
“Commit timeline with diffs under a magnifier and a big undo arrow. Calm enterprise palette, 2:1.”
--&gt;</content:encoded><category>Claude Code</category><category>Flutter</category><category>Android</category><category>APK</category></item><item><title>GitHub Copilot CLI Goes Public: Bringing AI Agents to Your Terminal</title><link>https://www.vibesparking.com/en/blog/ai/github-copilot/2025-09-26-github-copilot-cli-public-preview-terminal-workflows/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/github-copilot/2025-09-26-github-copilot-cli-public-preview-terminal-workflows/</guid><pubDate>Fri, 26 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # GitHub Copilot CLI Goes Public: Bringing AI Agents to Your Terminal --&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub has brought their “hands-on” Copilot coding agent into the command line, capable of reading your repository, understanding issues/PRs, and executing step-by-step with your confirmation. Install via npm package for local development workflows including &lt;strong&gt;building/refactoring/debugging/creating PRs&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction-why-cli&quot;&gt;Introduction: Why CLI?&lt;/h2&gt;&lt;a href=&quot;#introduction-why-cli&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction: Why CLI?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;We spend 80% of our coding time in the terminal. Can we &lt;strong&gt;bring “planning and executing” AI into the command line&lt;/strong&gt; to reduce context switching?
GitHub’s answer: &lt;strong&gt;Copilot CLI&lt;/strong&gt;. It integrates Copilot coding agents into your local environment with &lt;strong&gt;preview-then-execute&lt;/strong&gt; workflow - both efficient and controllable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This approach benefits both “local efficiency enthusiasts” and “security-conscious teams.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;1-whats-actually-new&quot;&gt;1. What’s Actually New?&lt;/h2&gt;&lt;a href=&quot;#1-whats-actually-new&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. What’s Actually New?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;1-terminal-native-one-command-to-start&quot;&gt;1) Terminal Native, One Command to Start&lt;/h3&gt;&lt;a href=&quot;#1-terminal-native-one-command-to-start&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Terminal Native, One Command to Start”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Chat with Copilot directly in the command line to review code, run commands, and get explanations. &lt;strong&gt;No more switching contexts&lt;/strong&gt;, maximum efficiency boost.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;2-github-ecosystem-integration&quot;&gt;2) GitHub Ecosystem Integration&lt;/h3&gt;&lt;a href=&quot;#2-github-ecosystem-integration&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) GitHub Ecosystem Integration”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Use natural language to &lt;strong&gt;browse repositories, search issues, check PRs&lt;/strong&gt;, inheriting your existing GitHub account and plan (Pro/Pro+/Business/Enterprise).&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;3-true-agent-capabilities&quot;&gt;3) True Agent Capabilities&lt;/h3&gt;&lt;a href=&quot;#3-true-agent-capabilities&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3) True Agent Capabilities”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Beyond completion. It can &lt;strong&gt;plan multi-step tasks, edit files, debug, initiate changes&lt;/strong&gt;. Combined with GA Copilot coding agents, your terminal can run “executable plans.”&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;4-mcp-extensible&quot;&gt;4) MCP Extensible&lt;/h3&gt;&lt;a href=&quot;#4-mcp-extensible&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4) MCP Extensible”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Built-in GitHub MCP server&lt;/strong&gt;, supports custom MCP integration for internal tools, knowledge bases, ticketing systems, etc.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;5-model-upgrade-benefits&quot;&gt;5) Model Upgrade Benefits&lt;/h3&gt;&lt;a href=&quot;#5-model-upgrade-benefits&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5) Model Upgrade Benefits”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;GitHub recently introduced &lt;strong&gt;GPT-5-Codex&lt;/strong&gt; public preview, focusing on enhanced code understanding and refactoring. CLI agents also benefit from these model improvements.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Key Point&lt;/strong&gt;: &lt;strong&gt;Every execution step shows preview first&lt;/strong&gt;. Nothing happens until you confirm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;2-three-steps-to-install-2-minutes-to-get-started-really-fast&quot;&gt;2. Three Steps to Install, 2 Minutes to Get Started (Really Fast)&lt;/h2&gt;&lt;a href=&quot;#2-three-steps-to-install-2-minutes-to-get-started-really-fast&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. Three Steps to Install, 2 Minutes to Get Started (Really Fast)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;install&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-g&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;@github/copilot&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;Login&lt;/strong&gt; (follow interactive GitHub authentication)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start Using&lt;/strong&gt; (requires any paid plan: Pro / Pro+ / Business / Enterprise)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;For detailed installation steps and considerations, see official documentation “Installing GitHub Copilot CLI.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;3-how-i-use-it-daily-6-high-frequency-scenarios&quot;&gt;3. How I Use It Daily: 6 High-Frequency Scenarios&lt;/h2&gt;&lt;a href=&quot;#3-how-i-use-it-daily-6-high-frequency-scenarios&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3. How I Use It Daily: 6 High-Frequency Scenarios”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Commands in scenarios are &lt;strong&gt;examples&lt;/strong&gt;; follow actual CLI prompts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;1-understanding-unfamiliar-repositories&quot;&gt;1) Understanding Unfamiliar Repositories&lt;/h3&gt;&lt;a href=&quot;#1-understanding-unfamiliar-repositories&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Understanding Unfamiliar Repositories”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Understand directory structure and key modules in 10 minutes.
&lt;strong&gt;Approach&lt;/strong&gt;: Let Copilot analyze the project, generate module diagrams, list “high-risk files.”
&lt;strong&gt;Benefit&lt;/strong&gt;: Faster onboarding for new team members, reduce trial and error.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Suggested Visual&lt;/strong&gt;: Terminal window + “project map” illustration (2:1).&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;2-developing-features-from-issues&quot;&gt;2) Developing Features from Issues&lt;/h3&gt;&lt;a href=&quot;#2-developing-features-from-issues&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) Developing Features from Issues”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Transform an issue into a PR.
&lt;strong&gt;Approach&lt;/strong&gt;: Feed issue text to Copilot, let it &lt;strong&gt;plan→modify code→run tests locally→create branch→submit PR draft&lt;/strong&gt;, confirming each step.
&lt;strong&gt;Benefit&lt;/strong&gt;: Reduce mechanical work, focus energy on review.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Suggested Visual&lt;/strong&gt;: Issue → Plan → Code → Test → PR arrow flow.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;3-local-debugging--error-explanation&quot;&gt;3) Local Debugging + Error Explanation&lt;/h3&gt;&lt;a href=&quot;#3-local-debugging--error-explanation&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3) Local Debugging + Error Explanation”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Quickly locate mysterious errors.
&lt;strong&gt;Approach&lt;/strong&gt;: Have it read logs, combine with source code to provide &lt;strong&gt;reproduction scenarios and fix suggestions&lt;/strong&gt;, generate minimal reproduction scripts.
&lt;strong&gt;Benefit&lt;/strong&gt;: Solve “understand the error but don’t know where to start” anxiety.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;4-auto-complete-missing-unit-tests&quot;&gt;4) Auto-Complete Missing Unit Tests&lt;/h3&gt;&lt;a href=&quot;#4-auto-complete-missing-unit-tests&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4) Auto-Complete Missing Unit Tests”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Fill gaps in critical path unit testing.
&lt;strong&gt;Approach&lt;/strong&gt;: Scan low-coverage areas, draft test cases, run local tests and &lt;strong&gt;auto-correct minor errors&lt;/strong&gt;.
&lt;strong&gt;Benefit&lt;/strong&gt;: More stable quality gates, no blame for regressions.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;5-major-refactoring-week-babysitting&quot;&gt;5) “Major Refactoring Week” Babysitting&lt;/h3&gt;&lt;a href=&quot;#5-major-refactoring-week-babysitting&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5) “Major Refactoring Week” Babysitting”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Cross-module refactoring, dependency upgrades, style unification.
&lt;strong&gt;Approach&lt;/strong&gt;: Leverage &lt;strong&gt;GPT-5-Codex&lt;/strong&gt; long-chain reasoning for refactoring plans, batch process by subtasks, &lt;strong&gt;every step reversible&lt;/strong&gt;.
&lt;strong&gt;Benefit&lt;/strong&gt;: Break high-risk changes into small, controllable progress.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;6-internal-tool-integration-mcp-extensions&quot;&gt;6) Internal Tool Integration (MCP Extensions)&lt;/h3&gt;&lt;a href=&quot;#6-internal-tool-integration-mcp-extensions&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6) Internal Tool Integration (MCP Extensions)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Make CLI work with your wiki/ticketing/build platforms.
&lt;strong&gt;Approach&lt;/strong&gt;: Integrate custom MCP Server, delegate “search wiki, create tickets, trigger pipelines” to it.
&lt;strong&gt;Benefit&lt;/strong&gt;: Private knowledge + private processes work together, completely reduce context switching.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;4-division-of-labor-with-cloud-agents&quot;&gt;4. Division of Labor with “Cloud Agents”&lt;/h2&gt;&lt;a href=&quot;#4-division-of-labor-with-cloud-agents&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4. Division of Labor with “Cloud Agents””&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Copilot Coding Agent (Cloud)&lt;/strong&gt;: Can open cloud environments, long-running tasks, cross-repo operations, now GA.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Copilot CLI (Local)&lt;/strong&gt;: Close to your terminal for “quick wins,” better for &lt;strong&gt;iterative development&lt;/strong&gt;.
&lt;strong&gt;Combination&lt;/strong&gt;: Cloud handles heavy lifting, local does iteration and confirmation, &lt;strong&gt;both efficient and controllable&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;5-four-team-implementation-suggestions&quot;&gt;5. Four Team Implementation Suggestions&lt;/h2&gt;&lt;a href=&quot;#5-four-team-implementation-suggestions&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5. Four Team Implementation Suggestions”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Start with Security &amp;#x26; Audit Processes&lt;/strong&gt;: Write “confirmation required for each step” into team guidelines.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Templatize Common Tasks&lt;/strong&gt;: Like “fix ESLint errors, add tests, generate changelogs.”&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use MCP for Internal Integration&lt;/strong&gt;: Start with read-only access, add write permissions after maturity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Strategy&lt;/strong&gt;: Enable &lt;strong&gt;GPT-5-Codex&lt;/strong&gt; when available, more obvious benefits for refactoring/migration.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;6-quick-start-checklist-paste-into-readme&quot;&gt;6. Quick Start Checklist (Paste into README)&lt;/h2&gt;&lt;a href=&quot;#6-quick-start-checklist-paste-into-readme&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6. Quick Start Checklist (Paste into README)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot;&gt; &lt;code dir=&quot;auto&quot;&gt;npm i -g @github/copilot&lt;/code&gt; install and login&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot;&gt; Confirm Copilot plan in personal/organization settings (Pro/Pro+/Business/Enterprise)&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot;&gt; Choose 1 pilot repository: limited permissions + enable “confirmation for each step”&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot;&gt; Run 3 tasks first: &lt;strong&gt;read repository, fix one issue, add 1 test suite&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot;&gt; Team retrospective: record time saved, failure cases, process improvements&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot;&gt; MCP integration with 1 internal system, read-only first then read-write&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CLI isn’t just another “fancy interface”&lt;/strong&gt;. It brings Agents to “where you work every day.”
When AI can &lt;strong&gt;understand context and execute step-by-step with your confirmation&lt;/strong&gt;, the development rhythm changes: you make decisions, it handles the heavy lifting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Will you be the first in your team to try it? Which scenario do you think is most valuable? See you in the comments.&lt;/strong&gt;&lt;/p&gt;&lt;!--
---

# Image Generation Suggestions (Illustration style, 2:1, ratio like 1600×800, no Chinese text in images temporarily)

**Cover Image Prompt**

&gt; Terminal with an AI co-pilot glowing inside the command line, repo structure and issue/PR icons floating around, subtle GitHub Octocat silhouette, clean flat illustration, wide 2:1 composition, techy but friendly tone, soft gradients, high contrast focus on the terminal.

**Key Section Image Prompts**

1. &quot;Understanding Unfamiliar Repositories&quot;

&gt; A developer facing a branching project map emerging from a terminal window, nodes labeled as modules, minimalist flat illustration, 2:1.

2. &quot;From Issue to PR&quot;

&gt; A conveyor belt from an issue card into code edits, tests, and a pull request badge, terminal at the center, 2:1.

3. &quot;Auto-Complete Unit Tests&quot;

&gt; Test tubes morphing into green check marks above a terminal, code lines in the background, 2:1.

4. &quot;MCP Extensions&quot;

&gt; Terminal connected via cables to internal tools (wiki, tickets, pipelines) represented as abstract icons, 2:1.

---

# Alternative Titles (Multilingual &amp; slug)

1. **Chinese**: 把 AI 搬进命令行：Copilot CLI 公测上手与 6 大高频场景
   **English**: Bring AI to the Terminal: Copilot CLI Public Preview &amp; 6 Everyday Workflows
   **Traditional Chinese**: 把 AI 搬進命令列：Copilot CLI 公測上手與 6 大高頻場景
   **Japanese**: AI をターミナルへ：Copilot CLI 公開プレビューと6つの日常ワークフロー
   **French**: L&apos;IA dans le terminal : Copilot CLI en aperçu public &amp; 6 cas quotidiens
   **Spanish**: IA en tu terminal: Copilot CLI en vista previa pública y 6 flujos diarios
   **Portuguese**: IA no terminal: Copilot CLI em prévia pública &amp; 6 fluxos do dia a dia
   **slug**: **copilot-cli-public-preview-terminal-workflows**

2. **Chinese**: 不光会写，还会干：Copilot CLI 的&quot;可执行计划&quot;有多香？
   **English**: Not Just Code—It Executes: How Good Is Copilot CLI&apos;s Action Plan?
   **Traditional Chinese**: 不只會寫，還會做：Copilot CLI 的「可執行計畫」有多香？
   **Japanese**: 書くだけじゃない、動く：Copilot CLI の実行計画はどこまで使える？
   **French**: Pas seulement du code : le plan d&apos;action exécutable de Copilot CLI
   **Spanish**: No solo escribe: el plan ejecutable de Copilot CLI
   **Portuguese**: Não só escreve: o plano executável do Copilot CLI
   **slug**: **copilot-cli-executable-plans**

3. **Chinese**: 本地效率爆表：用 Copilot CLI 打造&quot;确认即执行&quot;的开发流
   **English**: Local Speedrun: Build a &quot;Confirm-to-Run&quot; Dev Flow with Copilot CLI
   **Traditional Chinese**: 本地效率爆表：用 Copilot CLI 打造「確認即執行」開發流
   **Japanese**: ローカル最速：Copilot CLI で&quot;確認して実行&quot;の開発フロー
   **French**: Turbo local : un flux &quot;confirmer pour exécuter&quot; avec Copilot CLI
   **Spanish**: Turbo local: un flujo &quot;confirmar y ejecutar&quot; con Copilot CLI
   **Portuguese**: Turbo local: um fluxo &quot;confirmar e executar&quot; com Copilot CLI
   **slug**: **copilot-cli-confirm-to-run**

---

# Social Media Copy (3 versions)

1. **Just installed Copilot CLI, terminal now handles &quot;assign tasks + execute + create PR&quot; directly, with preview confirmation for each step - really reassuring. Would you trust it with your refactoring week?**
2. **Turns out I wasn&apos;t coding slowly, I was doing too much &quot;manual running around.&quot; With Copilot CLI in terminal, issue-to-PR becomes seamless. So much better.**
3. **With MCP connected, internal tools work too. CLI in one sentence: check docs→modify code→add tests→create PR. Feels like managing a super-experienced intern.**

---

**References &amp; Further Reading**

* Public preview announcement and installation essentials (npm commands, plan support, pre-execution preview)
* Official &quot;Installing Copilot CLI&quot; installation documentation and considerations
* &quot;About Copilot CLI / Using in command line&quot; concepts and capabilities
* Copilot Coding Agent **GA** announcement (relationship with CLI)
* **MCP Extensions** official guide (custom capability integration)
* **GPT-5-Codex** public preview on GitHub Copilot (more stable refactoring/long-chain tasks)

---

Should I create a reusable **CLI prompt template** for **&quot;project self-check + issue to PR + unit test completion&quot;**? Or generate the **illustrations** mentioned above directly? Just say the word and I&apos;ll get started~ Satisfied, or should I expand this into a **practical application** version?

[1]: https://github.blog/changelog/2025-09-25-github-copilot-cli-is-now-in-public-preview/?utm_source=chatgpt.com &quot;GitHub Copilot CLI is now in public preview&quot;
[2]: https://github.blog/changelog/2025-09-25-copilot-coding-agent-is-now-generally-available/?utm_source=chatgpt.com &quot;Copilot coding agent is now generally available&quot;
[3]: https://docs.github.com/copilot/how-tos/agents/copilot-coding-agent/extending-copilot-coding-agent-with-mcp?utm_source=chatgpt.com &quot;Extending GitHub Copilot coding agent with the Model ...&quot;
[4]: https://github.blog/changelog/2025-09-23-openai-gpt-5-codex-is-rolling-out-in-public-preview-for-github-copilot/?utm_source=chatgpt.com &quot;OpenAI GPT-5-Codex is rolling out in public preview for GitHub Copilot&quot;
[5]: https://docs.github.com/en/copilot/how-tos/set-up/install-copilot-cli?utm_source=chatgpt.com &quot;Installing GitHub Copilot CLI&quot;
[6]: https://docs.github.com/copilot/concepts/agents/about-copilot-cli?utm_source=chatgpt.com &quot;About GitHub Copilot CLI&quot;
[7]: https://docs.github.com/en/copilot/concepts/agents/coding-agent/about-coding-agent?utm_source=chatgpt.com &quot;About GitHub Copilot coding agent&quot;
[8]: https://devblogs.microsoft.com/dotnet/copilot-coding-agent-dotnet/?utm_source=chatgpt.com &quot;Let Copilot Coding Agent handle the busy work - .NET Blog&quot; --&gt;</content:encoded><category>AI</category><category>GitHub Copilot</category><category>VS Code</category><category>Code Review</category><category>Commit Message</category><category>Vibe Coding Practices</category></item><item><title>Triple Your HarmonyOS App Development Speed with Claude Code + Documentation-Driven Programming + BDD Business-Driven Testing</title><link>https://www.vibesparking.com/en/blog/ai/huawei/harmony-os/sop/2025-09-26-harmonyos-3x-claude-code-doc-bdd/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/huawei/harmony-os/sop/2025-09-26-harmonyos-3x-claude-code-doc-bdd/</guid><pubDate>Fri, 26 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Triple Your HarmonyOS App Development Speed with Claude Code + Documentation-Driven Programming + BDD Business-Driven Testing --&gt;
&lt;blockquote&gt;
&lt;p&gt;This methodology specifically addresses three major pain points: “AI can write code but doesn’t understand HarmonyOS,” “ArkTS keeps throwing errors,” and “regression testing can’t keep up.”
&lt;strong&gt;The core principle: Drive Claude Code with documentation, and secure quality through BDD automation.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction-dont-chat-randomly-with-ai--write-good-documentation-first&quot;&gt;Introduction: Don’t Chat Randomly with AI – Write Good Documentation First&lt;/h2&gt;&lt;a href=&quot;#introduction-dont-chat-randomly-with-ai--write-good-documentation-first&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction: Don’t Chat Randomly with AI – Write Good Documentation First”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Many developers immediately tell AI: “Help me build a HarmonyOS app for Bluetooth scanning, connecting, and time synchronization.”
The result? Claude Code produces seemingly sophisticated code that &lt;strong&gt;turns completely red upon compilation&lt;/strong&gt;. Are you familiar with ArkTS? Do you understand the ArkUI lifecycle? How do you handle regression testing? All uncertain.&lt;/p&gt;
&lt;p&gt;HarmonyOS officially provides &lt;strong&gt;ArkTS coding standards&lt;/strong&gt;, &lt;strong&gt;ArkUI declarative development paradigms&lt;/strong&gt;, and &lt;strong&gt;performance practices&lt;/strong&gt; – these are standard components that Claude Code “crashes repeatedly if not learned properly.”
ArkTS is HarmonyOS’s primary language, sharing roots with TypeScript but having its own semantics and ecosystem. &lt;strong&gt;Writing with old JavaScript habits makes it easy to fall into traps.&lt;/strong&gt;
The good news is: Claude Code already supports “reading repositories, editing files, writing and running tests, executing terminal commands.” As long as you provide the right context, it can consistently produce engineered results.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;i-documentation-driven-programming-make-claude-code-follow-your-lead&quot;&gt;I. Documentation-Driven Programming: Make Claude Code Follow Your Lead&lt;/h1&gt;&lt;a href=&quot;#i-documentation-driven-programming-make-claude-code-follow-your-lead&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “I. Documentation-Driven Programming: Make Claude Code Follow Your Lead”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Clearly explain requirements, value, implementation, and acceptance criteria on one page; let Claude Code “build according to specifications” within the HarmonyOS context.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;1-write-one-page-requirements-can-be-directly-placed-in-repository-docsfeature-xxxmd&quot;&gt;1) Write “One-Page” Requirements (can be directly placed in repository &lt;code dir=&quot;auto&quot;&gt;/docs/feature-xxx.md&lt;/code&gt;)&lt;/h3&gt;&lt;a href=&quot;#1-write-one-page-requirements-can-be-directly-placed-in-repository-docsfeature-xxxmd&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Write “One-Page” Requirements (can be directly placed in repository /docs/feature-xxx.md)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Functionality&lt;/strong&gt;: Bluetooth device scanning → list display → connection → time synchronization → status reading → command sending → disconnection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Business Value&lt;/strong&gt;: Store associates complete device initialization in 1 minute, reducing manual errors by 80%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Platform&lt;/strong&gt;: HarmonyOS NEXT, ArkTS + ArkUI; DevEco Studio build&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Interface/Model&lt;/strong&gt;: Device names start with &lt;code dir=&quot;auto&quot;&gt;XX&lt;/code&gt;; display battery level after connection; “injection” command returns success flag&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Acceptance Criteria (BDD format)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Given&lt;/strong&gt; Application is on the home page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When&lt;/strong&gt; Click “Start Scan”, see device starting with &lt;code dir=&quot;auto&quot;&gt;XX&lt;/code&gt; in list and click Connect&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Then&lt;/strong&gt; Enter connected page, see device name/battery level; clicking “Sync Time,” “Refresh Status,” “Send Injection Command” all return success&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember to include key ArkTS/ArkUI constraints and best practices in documentation: naming, state management, performance considerations, etc. (from official style guides and state management guidelines). &lt;strong&gt;Provide specifications directly to Claude Code&lt;/strong&gt; – it will follow these rules during generation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;2-initial-system-prompt-for-claude-code-place-in-claudeprimermd&quot;&gt;2) Initial System Prompt for Claude Code (place in &lt;code dir=&quot;auto&quot;&gt;.claude/primer.md&lt;/code&gt;)&lt;/h3&gt;&lt;a href=&quot;#2-initial-system-prompt-for-claude-code-place-in-claudeprimermd&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) Initial System Prompt for Claude Code (place in .claude/primer.md)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Project framework (ArkUI page structure, directory conventions)&lt;/li&gt;
&lt;li&gt;ArkTS code style requirements (variable/component naming, null checks, error handling)&lt;/li&gt;
&lt;li&gt;Component inventory &amp;#x26; event flow (Button → scanning → list → connection)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test-first approach&lt;/strong&gt;: Generate BDD scenarios and ArkTS test stubs first, then supplement business code&lt;/li&gt;
&lt;li&gt;Failure retry: compilation error → read error → modify minimal set only&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Officials and community both emphasize &lt;strong&gt;standards-driven coding&lt;/strong&gt;, which significantly reduces rework and performance issues.
Claude Code itself also recommends &lt;strong&gt;customizing context and environment&lt;/strong&gt; (e.g., ignoring irrelevant files, providing dedicated README/CONTRIBUTING), which can significantly improve hit rates.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;3-place-process-description--acceptance-steps-in-readme&quot;&gt;3) Place “Process Description + Acceptance Steps” in README&lt;/h3&gt;&lt;a href=&quot;#3-place-process-description--acceptance-steps-in-readme&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3) Place “Process Description + Acceptance Steps” in README”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The image below shows &lt;strong&gt;our manual acceptance steps for this feature&lt;/strong&gt;, used for manual verification and providing context for Claude Code:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This text will be absorbed by Claude Code as “&lt;strong&gt;executable documentation&lt;/strong&gt;”: it can write UI flows first, then supplement logic and tests (Claude officially claims to “write and run tests, edit files, commit code”).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;ii-bdd-business-driven-testing-transform-documentation-into-executable-specifications&quot;&gt;II. BDD Business-Driven Testing: Transform “Documentation” into “Executable Specifications”&lt;/h1&gt;&lt;a href=&quot;#ii-bdd-business-driven-testing-transform-documentation-into-executable-specifications&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “II. BDD Business-Driven Testing: Transform “Documentation” into “Executable Specifications””&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;In one sentence&lt;/strong&gt;: Write requirements as Gherkin scenarios, run tests on DevEco/arkXtest framework, &lt;strong&gt;test red → AI fix → test green again&lt;/strong&gt;.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;1-describe-business-with-gherkin&quot;&gt;1) Describe Business with Gherkin&lt;/h3&gt;&lt;a href=&quot;#1-describe-business-with-gherkin&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Describe Business with Gherkin”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;gherkin&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;Feature&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt; Scan and connect device&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;Scenario&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt; Find and connect device with prefix XX&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;Given &lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;App on Index Page&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;When &lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;I tap &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;&quot;Start Scan&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;Then &lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;I should see a device starting with &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;&quot;XX&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; in the list&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;When &lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;I tap &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;&quot;Connect&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; on that device&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#C792EA;--1:#8844AE&quot;&gt;Then &lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;I should be on Connected Page with name and battery shown&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The advantage of Gherkin/BDD is transforming “business language” directly into &lt;strong&gt;executable specifications&lt;/strong&gt;, continuously validating whether system behavior matches documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;2-arkts-testing-implementation-selection&quot;&gt;2) ArkTS Testing Implementation Selection&lt;/h3&gt;&lt;a href=&quot;#2-arkts-testing-implementation-selection&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) ArkTS Testing Implementation Selection”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DevEco/arkXtest System&lt;/strong&gt;: Provides unified framework for &lt;strong&gt;unit testing + UI testing + performance testing&lt;/strong&gt;; UI test scripts execute on top of unit tests, meeting end-to-end validation needs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDE Support&lt;/strong&gt;: DevEco Studio integrates testing framework and code test entry points, facilitating execution on real devices/simulators.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Some documentation also mentions HarmonyOS/ArkTS testing capability upgrades in the NEXT version, supporting more modern syntax and parameterization techniques, which can be adopted in your engineering templates as needed (based on official and authoritative sources).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;3-example-ui-scenario-test-framework-extracted-from-actual-project-structure&quot;&gt;3) Example: UI Scenario Test Framework (extracted from actual project structure)&lt;/h3&gt;&lt;a href=&quot;#3-example-ui-scenario-test-framework-extracted-from-actual-project-structure&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3) Example: UI Scenario Test Framework (extracted from actual project structure)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;This test does three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If not scanned, try clicking “Start Scan,” otherwise log and skip&lt;/li&gt;
&lt;li&gt;Wait for device discovery&lt;/li&gt;
&lt;li&gt;Locate device with specified prefix and click connect, &lt;strong&gt;assert entry to connected page&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;This type of UI test case structure aligns with arkXtest’s design philosophy: &lt;strong&gt;drive UI operations with APIs, consolidate results uniformly in the testing framework&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;4-make-test-red--ai-fix--test-green-again-a-pipeline&quot;&gt;4) Make “Test Red → AI Fix → Test Green Again” a Pipeline&lt;/h3&gt;&lt;a href=&quot;#4-make-test-red--ai-fix--test-green-again-a-pipeline&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4) Make “Test Red → AI Fix → Test Green Again” a Pipeline”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Claude Code Loop&lt;/strong&gt;: When failures occur, paste &lt;strong&gt;compilation/runtime logs&lt;/strong&gt; back into conversation for minimal modification fixes (Claude’s official “environment tuning + context minimization” recommendations are crucial here).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IDE/CI Integration&lt;/strong&gt;: One-click execution in DevEco Studio locally; CI integration with real devices/simulators for regression (refer to DevEco test entry points and official testing documentation).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visual Acceptance&lt;/strong&gt;: Place the &lt;strong&gt;manual acceptance step diagrams&lt;/strong&gt; above in wiki, run Gherkin + UI tests for each version, ensuring “documentation is truth.”&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;iii-implementation-manual-7-step-checklist-from-0-to-1&quot;&gt;III. Implementation Manual: 7-Step Checklist from 0 to 1&lt;/h1&gt;&lt;a href=&quot;#iii-implementation-manual-7-step-checklist-from-0-to-1&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “III. Implementation Manual: 7-Step Checklist from 0 to 1”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 1 | Project Initialization&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create ArkTS project in DevEco Studio; select ArkUI declarative paradigm; confirm target API/device.&lt;/li&gt;
&lt;li&gt;Recommend pulling &lt;strong&gt;ArkTS style guide&lt;/strong&gt; and &lt;strong&gt;performance practices&lt;/strong&gt; into repository &lt;code dir=&quot;auto&quot;&gt;/guides&lt;/code&gt; for both human and AI reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 2 | One-Page Requirements&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clearly write functionality, value, interfaces, states, exceptions, &lt;strong&gt;acceptance scenarios (Given/When/Then)&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Place screenshot-style manual acceptance steps in README (the diagram section above).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 3 | Claude Code Startup&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code dir=&quot;auto&quot;&gt;.claude/primer.md&lt;/code&gt; and &lt;code dir=&quot;auto&quot;&gt;/docs&lt;/code&gt; as &lt;strong&gt;primary context&lt;/strong&gt;; limit it from reading irrelevant large files.&lt;/li&gt;
&lt;li&gt;Have it &lt;strong&gt;generate test stubs &amp;#x26; Gherkin first&lt;/strong&gt;, then supplement business code and ArkUI pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 4 | ArkTS/ArkUI Coding&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Follow naming, componentization, state management constraints; pay attention to performance practices and null/exception handling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 5 | Test Implementation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;arkXtest / DevEco testing&lt;/strong&gt; for unit tests + UI tests; use Gherkin as top-level use case description (can call UI test APIs in step definitions).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 6 | Iterative Fixes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Feed failure logs to Claude Code for &lt;strong&gt;minimal fixes&lt;/strong&gt;; loop locally/CI until all green.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Step 7 | Knowledge Base Accumulation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Record pitfalls &amp;#x26; FAQ in &lt;code dir=&quot;auto&quot;&gt;/kb&lt;/code&gt;: such as BLE permissions, lifecycle, list performance.&lt;/li&gt;
&lt;li&gt;Next time, only need to modify “one-page” requirements and a few step descriptions, Claude Code can &lt;strong&gt;reuse context to continue generation&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;iv-results-quality-speed-and-understanding--triple-success&quot;&gt;IV. Results: Quality, Speed, and Understanding – Triple Success&lt;/h1&gt;&lt;a href=&quot;#iv-results-quality-speed-and-understanding--triple-success&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “IV. Results: Quality, Speed, and Understanding – Triple Success”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt;: With the “documentation as code” approach, Claude Code is more stable on HarmonyOS projects, &lt;strong&gt;reducing back-and-forth guessing&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quality&lt;/strong&gt;: arkXtest + DevEco testing aligns &lt;strong&gt;unit tests/UI/performance&lt;/strong&gt;, automates regression, leaving manual work for exploratory validation only.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Understanding&lt;/strong&gt;: Standards and performance practices written in documentation, &lt;strong&gt;humans and AI follow the same rules&lt;/strong&gt;, new team members can master ArkTS/ArkUI basics in 1 day.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;v-replicable-template-you-can-copy-directly&quot;&gt;V. Replicable Template (You Can Copy Directly)&lt;/h1&gt;&lt;a href=&quot;#v-replicable-template-you-can-copy-directly&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “V. Replicable Template (You Can Copy Directly)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;recommended-documentation-directory&quot;&gt;Recommended Documentation Directory&lt;/h3&gt;&lt;a href=&quot;#recommended-documentation-directory&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Recommended Documentation Directory”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;/docs&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;feature-ble-connect.md      # One-page requirements + acceptance&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;ui-flow.md                  # Interface flow and states&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;/guides&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;arkts-style-guide.md        # Extracted + linked official standards&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;performance-notes.md        # ArkTS performance practices&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;/tests&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;features/ble_connect.feature  # Gherkin&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;ui/ble_connect.test.ets       # UI scenario tests&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;.kb&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;ble-permissions.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;.claude/primer.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;feature-ble-connectmd-fragment&quot;&gt;&lt;code dir=&quot;auto&quot;&gt;feature-ble-connect.md&lt;/code&gt; Fragment&lt;/h3&gt;&lt;a href=&quot;#feature-ble-connectmd-fragment&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “feature-ble-connect.md Fragment”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Background/Value&lt;/li&gt;
&lt;li&gt;Constraints (API/permissions/device prefix)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Acceptance Scenarios&lt;/strong&gt; (5-7 Given/When/Then items)&lt;/li&gt;
&lt;li&gt;Rollout/rollback strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion-close-the-loop-between-documentationtestingcode&quot;&gt;Conclusion: Close the Loop Between “Documentation—Testing—Code”&lt;/h2&gt;&lt;a href=&quot;#conclusion-close-the-loop-between-documentationtestingcode&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion: Close the Loop Between “Documentation—Testing—Code””&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;When you &lt;strong&gt;write documentation that can directly accept&lt;/strong&gt;, Claude Code has the possibility to write correct ArkTS on the first try;
When you &lt;strong&gt;get BDD scenarios running&lt;/strong&gt;, each version can have one-click regression.
This is how we consistently achieve “&lt;strong&gt;faster speed + more stable quality&lt;/strong&gt;” in HarmonyOS projects.&lt;/p&gt;
&lt;p&gt;What do you think this approach is still missing? &lt;strong&gt;Share your scenarios in the comments&lt;/strong&gt;.&lt;/p&gt;&lt;!--
---

## Recommended Titles (Multilingual &amp; slug)

1. **Triple Your HarmonyOS App Development Speed: Claude Code × Documentation-Driven × BDD Regression Loop**

   * EN: Triple Your HarmonyOS Dev Speed: Claude Code × Doc-Driven × BDD
   * 繁體: 把鴻蒙 App 研發提速 3 倍：Claude Code × 文件驅動 × BDD
   * 日本語: HarmonyOS開発を3倍速に：Claude Code × ドキュメント駆動 × BDD
   * FR: Développez 3× plus vite sur HarmonyOS : Claude Code × Docs × BDD
   * ES: Triplica tu desarrollo HarmonyOS: Claude Code × Docs × BDD
   * PT: Triplique seu dev no HarmonyOS: Claude Code × Docs × BDD
   * slug: `harmonyos-3x-claude-code-doc-bdd`

2. **AI Writes, But Don&apos;t Let It Write Randomly: One-Pager + BDD to Keep ArkTS Green**

   * EN: AI Writes, You Control: One-Pager + BDD to Keep ArkTS Green
   * 繁體: AI 會寫但別亂寫：一頁紙 + BDD，ArkTS 不再紅
   * 日本語: AIに任せすぎない：One-Pager＋BDDでArkTSを常時グリーン
   * FR: L&apos;IA code, vous cadrez : One-Pager + BDD pour un ArkTS au vert
   * ES: La IA codifica, tú mandas: One-Pager + BDD para ArkTS en verde
   * PT: IA codifica, você comanda: One-Pager + BDD para ArkTS verde
   * slug: `arkts-one-pager-bdd-green`

3. **From Documentation to Executable: Claude Code Turns Requirements Directly into Tests and Code**

   * EN: From Docs to Executable: Claude Code Turns Specs into Tests &amp; Code
   * 繁體: 從文件到可執行：Claude Code 把需求變成測試與程式
   * 日本語: 仕様が走る：Claude Codeがテストとコードに直変換
   * FR: Des specs au code exécutable : Claude Code en action
   * ES: De la especificación al código ejecutable con Claude Code
   * PT: Da especificação ao código executável com Claude Code
   * slug: `docs-to-executable-claude-code`

---

## Cover and Diagrams (Illustration Style 2:1, English Text)

&gt; You can give the following prompts to image generation tools (don&apos;t display Chinese in images).

**Cover Image Prompt**
&quot;Clean illustration, wide 2:1 canvas. A developer bridges three pillars labeled &apos;Claude Code&apos;, &apos;Doc-Driven&apos;, and &apos;BDD&apos;. Minimal HarmonyOS-style UI elements, terminal window, and test green checkmarks. Soft gradients, modern tech vibe.&quot;

**Section Diagram 1 | Documentation-Driven Programming**
&quot;2:1 illustration. A single &apos;One-Pager Spec&apos; sheet feeding into a code editor with ArkTS/ArkUI components. Arrows from spec to code, checklist icons.&quot;

**Section Diagram 2 | BDD Automated Regression**
&quot;2:1 illustration. Gherkin feature blocks flowing into a test runner dashboard. Red-to-green progress bar, device emulator, and CI badge.&quot;

&gt; Real project screenshots have been inserted in corresponding sections (test code and manual acceptance steps).

---

## Social Media/Comment Section Viral Copy (Choose 1 of 3)

1. &quot;AI can write code, but don&apos;t let it write randomly. Tried this trick: one-pager + BDD, Claude Code passes compilation on first try in HarmonyOS projects, regression testing all green with one click, so sweet~&quot;
2. &quot;Used to write HarmonyOS, compiler scolded me daily. Now write documentation before code, Claude Code behaves like an intern, ArkTS no longer red.&quot;
3. &quot;Turn requirements into Gherkin, let documentation run itself. HarmonyOS app development speed tripled, weekends free for fitness now.&quot;

---

Need me to package **one-pager template, Gherkin examples, arkXtest framework scaffolding** into a repository structure for you? Or for your current feature requirements, **directly output a runnable test and page framework** works too. Tell me your requirements, I&apos;ll start working immediately. --&gt;</content:encoded><category>Claude Code</category><category>Documentation-Driven Development</category><category>BDD</category><category>Behavior-Driven Development</category><category>ArkTS</category><category>HarmonyOS</category><category>BLE</category><category>Bluetooth Low Energy</category></item><item><title>Outperforming the Market for Everyday Investors: The 5:2:1 Allocation Strategy with S&amp;P 500, Nasdaq 100, and VGT</title><link>https://www.vibesparking.com/en/blog/finance/us-market/2025-09-25-us-index-funds-longterm-sp500-nasdaq100-vgt/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/finance/us-market/2025-09-25-us-index-funds-longterm-sp500-nasdaq100-vgt/</guid><pubDate>Thu, 25 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Outperforming the Market for Everyday Investors: The 5:2:1 Allocation Strategy with S&amp;P 500, Nasdaq 100, and VGT --&gt;
&lt;div&gt;&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;&lt;a href=&quot;#tldr&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “TL;DR”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Allocate your portfolio across three U.S. stock index funds using a 5:2:1 ratio (S&amp;#x26;P 500 : Nasdaq 100 : Information Technology Sector).&lt;/li&gt;
&lt;li&gt;Adhere to a long-term holding strategy with periodic rebalancing, dynamically fine-tuning based on capital size, return objectives, and risk tolerance.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A successful investor owes 85% to correct asset allocation, 10% to the skill of selecting investment targets, and 5% to the grace of God.
— William F. Sharpe&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Long-term investing follows the principle of “simplicity is the ultimate sophistication”: ordinary investors can achieve substantial asset growth simply by holding one or two U.S. stock index funds over the long run. As a composite index of the 500 largest companies by market capitalization in the U.S. stock market, the S&amp;#x26;P 500 covers major industries such as information technology, consumer discretionary, financials, and healthcare, and is widely regarded as a barometer of the overall performance of the U.S. stock market. For instance, the legendary investor Warren Buffett has repeatedly recommended S&amp;#x26;P 500 index funds and stipulated in his will that 90% of his personal assets be invested in them, demonstrating his confidence in the index’s long-term, stable returns.&lt;/p&gt;
&lt;p&gt;However, an S&amp;#x26;P 500 index fund is not the only option. Depending on their risk appetite, investors can also add a Nasdaq 100 index fund and an information technology sector fund (VGT) to construct a “tripod” portfolio of U.S. stock index funds. Below, we introduce these three types of index funds worthy of long-term holding and explain how to allocate them according to a 5:2:1 ratio.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;sp-500-index-fund-the-cornerstone-of-the-us-stock-market&quot;&gt;S&amp;#x26;P 500 Index Fund: The Cornerstone of the U.S. Stock Market&lt;/h2&gt;&lt;a href=&quot;#sp-500-index-fund-the-cornerstone-of-the-us-stock-market&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “S&amp;#x26;P 500 Index Fund: The Cornerstone of the U.S. Stock Market”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The S&amp;#x26;P 500 Index is composed of the 500 largest U.S. public companies by market capitalization, spanning a wide range of sectors from technology and consumer goods to energy and utilities. Due to its diversified components and dispersed weights, the S&amp;#x26;P 500 index fund is often considered the primary core asset for investing in the U.S. stock market. Historical data shows that the S&amp;#x26;P 500 has a long-term annualized return of around 10%, with relatively moderate volatility, making it suitable for most investors seeking stable growth.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;advantages&quot;&gt;Advantages&lt;/h3&gt;&lt;a href=&quot;#advantages&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Advantages”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diversification:&lt;/strong&gt; Covering 500 companies, it does not rely on individual stocks, thus fully diversifying unsystematic risk. The index components account for the vast majority of the U.S. stock market’s capitalization, effectively allowing one to “buy the U.S. economy in one click.”&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Long-term Stable Growth:&lt;/strong&gt; It has consistently reached new highs through multiple bull and bear cycles, with a high probability of achieving positive returns over long rolling periods.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Endorsement by Investment Masters:&lt;/strong&gt; Many investment gurus advocate for regular investment in S&amp;#x26;P 500 index funds; Buffett has long recommended a “buy and hold” strategy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is important to note that S&amp;#x26;P 500 index funds are still subject to periodic drawdowns due to economic cycles, but their volatility risk is lower compared to narrower-based indices. For investors with average risk tolerance, an S&amp;#x26;P 500 index fund can serve as a single, lifelong holding.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;nasdaq-100-index-fund-high-growth-opportunities-in-tech-leaders&quot;&gt;Nasdaq 100 Index Fund: High-Growth Opportunities in Tech Leaders&lt;/h2&gt;&lt;a href=&quot;#nasdaq-100-index-fund-high-growth-opportunities-in-tech-leaders&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Nasdaq 100 Index Fund: High-Growth Opportunities in Tech Leaders”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The Nasdaq-100 Index consists of the 100 largest non-financial companies listed on the Nasdaq Stock Market and is renowned for its high weighting in technology stocks. The index includes tech giants such as Apple, Microsoft, Alphabet (Google’s parent company), Amazon, and Nvidia. By providing concentrated exposure to high-growth sectors, the Nasdaq-100 has delivered a significantly higher annualized total return than the S&amp;#x26;P 500 over the past few decades.&lt;/p&gt;
&lt;p&gt;The characteristics of a Nasdaq 100 index fund can be summarized as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Heavy Allocation to Tech Growth:&lt;/strong&gt; A high proportion of high-growth sectors like information technology results in long-term returns that often outperform the broader market.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Higher Volatility:&lt;/strong&gt; High returns are accompanied by high volatility, with more severe drawdowns during market downturns (e.g., the periods of 2000–2002 and 2022).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bias Towards Emerging Industries:&lt;/strong&gt; Components are predominantly from fields like technology, communication services, and consumer discretionary, aligning with future trends but exhibiting weaker defensive capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In summary, the Nasdaq 100 index fund offers an opportunity to share in the growth of America’s leading technology companies. Its excellent long-term returns come with greater short-term volatility, making it suitable for investors with a certain level of risk tolerance who can withstand significant fluctuations in net asset value.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;information-technology-sector-fund-vgt-capturing-the-overall-dividends-of-the-tech-industry&quot;&gt;Information Technology Sector Fund (VGT): Capturing the Overall Dividends of the Tech Industry&lt;/h2&gt;&lt;a href=&quot;#information-technology-sector-fund-vgt-capturing-the-overall-dividends-of-the-tech-industry&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Information Technology Sector Fund (VGT): Capturing the Overall Dividends of the Tech Industry”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Information technology sector funds focus on investing in the IT industry. Take Vanguard’s Information Technology ETF (ticker: VGT) as an example: VGT tracks the MSCI US IMI Information Technology 25/50 Index, holding over 300 IT company stocks, including large-cap tech firms like Nvidia, Apple, Microsoft, and Broadcom, as well as numerous small and mid-cap tech companies. Similar to the Nasdaq 100, VGT is highly concentrated in the technology sector but offers broader coverage (not limited to Nasdaq-listed companies).&lt;/p&gt;
&lt;p&gt;The purpose of including an IT sector fund in a portfolio is to capture the excess returns of the technology industry. Over the past decade, VGT has at times outperformed the Nasdaq 100, as small and mid-cap tech stocks contributed additional gains during tech booms. However, higher returns come with higher risks. The tech sector is often the first to be hit during interest rate hikes or market panics, and pure-tech ETFs experience larger drawdowns in volatile markets. During the 2022 tech bear market, VGT’s maximum drawdown was nearly -35%, slightly higher than the Nasdaq 100’s maximum drawdown during the same period.&lt;/p&gt;
&lt;p&gt;This type of fund is more suitable for investors who are highly optimistic about the future of technology and have a strong personal risk tolerance. For those who have already achieved financial freedom or are experienced investors, a moderate allocation to pursue higher returns is feasible. However, ordinary investors with lower risk appetites can choose not to allocate to it or to reduce their allocation.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;the-521-allocation-strategy-and-periodic-rebalancing&quot;&gt;The 5:2:1 Allocation Strategy and Periodic Rebalancing&lt;/h2&gt;&lt;a href=&quot;#the-521-allocation-strategy-and-periodic-rebalancing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “The 5:2:1 Allocation Strategy and Periodic Rebalancing”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;For the three types of index funds discussed above, a straightforward portfolio strategy is to allocate them in a 5:2:1 ratio: approximately 62.5% to the S&amp;#x26;P 500, 25% to the Nasdaq 100, and 12.5% to an information technology sector fund. The philosophy is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Core Holding (approx. 50%):&lt;/strong&gt; The S&amp;#x26;P 500 provides a stable foundation and broad diversification, capturing the average growth of the U.S. economy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Satellite Holding (approx. 20%):&lt;/strong&gt; The Nasdaq 100 enhances the portfolio’s long-term returns, sharing in the growth of large-cap tech.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aggressive Holding (approx. 10%):&lt;/strong&gt; The IT sector fund increases aggressiveness, providing greater elasticity during favorable economic cycles.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This portfolio balances stability and aggressiveness and can be fine-tuned according to individual circumstances. For example, conservative investors can reduce the weighting of the Nasdaq and tech funds (e.g., to 7:2:1 or 8:1:1), while aggressive investors can moderately increase the aggressive portion. The portfolio should be periodically rebalanced based on market changes and financial goals to restore the asset weights to their preset levels, thereby maintaining the desired risk-return profile.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The S&amp;#x26;P 500, Nasdaq 100, and information technology sector funds can form a three-pronged portfolio for long-term holding, combining a comprehensive and stable core with a high-growth engine that capitalizes on the technology wave. By adopting an appropriate allocation ratio based on their risk tolerance, and by adhering to a long-term investment strategy with periodic rebalancing, most investors can expect to achieve favorable risk-adjusted returns, fostering long-term wealth appreciation. Instead of frequent market timing and stock picking, it is more effective to build a simple and efficient index fund portfolio and hold it for the long term, navigating through bull and bear markets.&lt;/p&gt;</content:encoded><category>Finance</category><category>US Market</category><category>Investment</category><category>Index Funds</category><category>S&amp;P 500</category><category>Nasdaq 100</category><category>VGT</category></item><item><title>Moving Codex Common Options to Configuration File</title><link>https://www.vibesparking.com/en/blog/ai/openai/codex/2025-09-25-config-toml-no-more-long-commands/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/openai/codex/2025-09-25-config-toml-no-more-long-commands/</guid><pubDate>Thu, 25 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Let’s consolidate those lengthy CLI options into a &lt;code dir=&quot;auto&quot;&gt;config.toml&lt;/code&gt; file for direct use going forward.&lt;/p&gt;
&lt;p&gt;Below is a &lt;strong&gt;ready-to-paste&lt;/strong&gt; version with your options properly formatted and commented (TOML uses &lt;code dir=&quot;auto&quot;&gt;#&lt;/code&gt; for line comments):&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;~/.codex/config.toml&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;toml&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# All keys are top-level unless placed in [table] sections&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Note: TOML uses # for comments, no block comment syntax available&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Inference-related settings&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;model&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;gpt-5-codex&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;model_reasoning_effort&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;high&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;model_reasoning_summary&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;detailed&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Approval and execution strategy&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;approval_policy&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;never&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;              &lt;/span&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Skip step-by-step confirmation, auto-execute&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Sandbox and network settings&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;sandbox_mode&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;danger-full-access&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# High risk: minimal isolation, use with caution&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;network_access&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#FF6A83;--1:#A24848&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;                  &lt;/span&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Allow network access&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Shell environment policy&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;[shell_environment_policy]&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;inherit&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;all&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;                        &lt;/span&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Inherit all environment variables&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;ignore_default_excludes&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;--0:#FF6A83;--1:#A24848&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Don&apos;t ignore default exclusion list&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;where-to-place-it&quot;&gt;Where to Place It?&lt;/h3&gt;&lt;a href=&quot;#where-to-place-it&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Where to Place It?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The file path is &lt;code dir=&quot;auto&quot;&gt;~/.codex/config.toml&lt;/code&gt;&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;one-step-setup-commands&quot;&gt;One-Step Setup Commands&lt;/h3&gt;&lt;a href=&quot;#one-step-setup-commands&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “One-Step Setup Commands”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;If you prefer not to create it manually, use these two lines to create the file and open it (replace &lt;code dir=&quot;auto&quot;&gt;vim&lt;/code&gt; with your preferred editor):&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;mkdir&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-p&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;~/.codex&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &amp;#x26;&amp;#x26; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;vim&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;~/.codex/config.toml&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;For XDG specification compliant location:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;mkdir&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-p&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;~/.config/codex&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &amp;#x26;&amp;#x26; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;vim&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;~/.config/codex/config.toml&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;optional-quick-syntax-validation&quot;&gt;Optional: Quick Syntax Validation&lt;/h3&gt;&lt;a href=&quot;#optional-quick-syntax-validation&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Optional: Quick Syntax Validation”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;TOML format errors will prevent tools from reading the configuration. You can use Python 3.11+‘s built-in &lt;code dir=&quot;auto&quot;&gt;tomllib&lt;/code&gt; for syntax validation:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;python&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&amp;#x3C;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&apos;PY&apos;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;import tomllib, pathlib&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;p = pathlib.Path.home()/&apos;.codex&apos;/&apos;config.toml&apos;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;with p.open(&apos;rb&apos;) as f:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;tomllib.load(f)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;print(&apos;TOML OK at&apos;, p)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;PY&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: TOML comments must use &lt;code dir=&quot;auto&quot;&gt;#&lt;/code&gt; on each line; there’s no &lt;code dir=&quot;auto&quot;&gt;/* ... */&lt;/code&gt; block comment syntax. Key-value pairs use &lt;code dir=&quot;auto&quot;&gt;key = value&lt;/code&gt; format, and tables use &lt;code dir=&quot;auto&quot;&gt;[table]&lt;/code&gt; sections.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h3 id=&quot;security-considerations-important&quot;&gt;Security Considerations (Important)&lt;/h3&gt;&lt;a href=&quot;#security-considerations-important&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Security Considerations (Important)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;danger-full-access&lt;/code&gt; = execution environment with &lt;strong&gt;minimal isolation&lt;/strong&gt;. Only enable this when you’re completely certain of the command source and trust the code repository. For daily use, consider switching back to safer sandbox modes (if supported).&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;approval_policy = &quot;never&quot;&lt;/code&gt; will &lt;strong&gt;auto-execute&lt;/strong&gt; commands, which is convenient but riskier. Before destructive operations (repository deletion, bulk renaming, &lt;code dir=&quot;auto&quot;&gt;rm -rf&lt;/code&gt;), temporarily switch to a confirmation-required policy for safety.&lt;/li&gt;
&lt;/ul&gt;&lt;!--
If you&apos;d like, share a typical `codex` command you use, and I can consolidate **all common switches** into this configuration (such as default working directory, log level, cache directory, proxy settings, etc.) to achieve a &quot;zero-parameter startup&quot; experience.

Would you like me to create a **more secure default configuration** based on your usage patterns?

[1]: https://toml.io/en/?utm_source=chatgpt.com &quot;TOML: Tom&apos;s Obvious Minimal Language&quot;
[2]: https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html?utm_source=chatgpt.com &quot;XDG Base Directory Specification&quot; --&gt;</content:encoded><category>Codex</category><category>OpenAI</category></item><item><title>Use BMAD in Codex like Claude Code: Put a multi‑role AI squad in your repo</title><link>https://www.vibesparking.com/en/blog/ai/openai/codex/bmad/2025-09-25-bmad-with-codex-ai-squad/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/openai/codex/bmad/2025-09-25-bmad-with-codex-ai-squad/</guid><pubDate>Thu, 25 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Use BMAD in Codex like Claude Code: Put a multi‑role AI squad in your repo --&gt;
&lt;blockquote&gt;
&lt;p&gt;Install Codex and BMAD, map BMAD’s “multi‑role experts” into &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt;, then in the terminal say “*agent analyst”. Codex will run a BMAD‑style agile loop from requirements to delivery.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;&lt;a href=&quot;#introduction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Two pain points in projects: no one writes clear requirements, and even when they do, no one lands them properly.&lt;/p&gt;
&lt;p&gt;BMAD turns roles like Business Analysis, Architecture, Product, Development, QA, and Scrum into version‑controlled Markdown agents. Combined with Codex’s &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt;, you work as if an AI squad is embedded in your repo.&lt;/p&gt;
&lt;p&gt;This is a practical, copy‑ready path:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install BMAD&lt;/li&gt;
&lt;li&gt;Update &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt; to register BMAD roles&lt;/li&gt;
&lt;li&gt;One prompt to bring in the Analyst and start&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;why-codex--bmad&quot;&gt;Why Codex + BMAD?&lt;/h2&gt;&lt;a href=&quot;#why-codex--bmad&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Why Codex + BMAD?”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Codex understands &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt;: it follows your project rules to build, check, and propose changes, in both CLI and IDE.&lt;/li&gt;
&lt;li&gt;BMAD provides reusable “Agent as Code”: each role is a &lt;code dir=&quot;auto&quot;&gt;.md&lt;/code&gt; with tasks, checklists, templates, and workflows.&lt;/li&gt;
&lt;li&gt;Together: “project rules + multi‑role collaboration + executable checks.” It feels like a real team that never forgets the process.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;step-1-install-bmad-3minute-quick-path&quot;&gt;Step 1: Install BMAD (3‑minute quick path)&lt;/h2&gt;&lt;a href=&quot;#step-1-install-bmad-3minute-quick-path&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Step 1: Install BMAD (3‑minute quick path)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Ensure Node.js v20+ first.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Run in your project root:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Recommended one‑command install/upgrade&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;npx&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;bmad-method&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;install&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Or, if you’ve cloned before&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;clone&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;https://github.com/bmad-code-org/BMAD-METHOD&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BMAD-METHOD&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;pull&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;run&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;install:bmad&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;This installs BMAD’s core structure and scripts into your project (including &lt;code dir=&quot;auto&quot;&gt;.bmad-core&lt;/code&gt;, templates, and helpers), preparing the agents for use.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: If you see path errors, make sure directories include the leading dot (use &lt;code dir=&quot;auto&quot;&gt;.bmad-core&lt;/code&gt;, not &lt;code dir=&quot;auto&quot;&gt;bmad-core&lt;/code&gt;). This is a common gotcha.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;step-2-register-bmad-roles-in-agentsmd&quot;&gt;Step 2: Register BMAD roles in &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt;&lt;/h2&gt;&lt;a href=&quot;#step-2-register-bmad-roles-in-agentsmd&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Step 2: Register BMAD roles in AGENTS.md”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt; is a “README for agents.” It lives at the repo root, as standard Markdown. Use it to document your build/test/style/PR process and any local conventions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Codex, Cursor, Gemini, and other agents read it; agents will follow rules you define here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To help Codex quickly locate BMAD roles, add a small “BMAD Agents” section to &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt; and list a clean mapping. Many teams prefer a YAML snippet for clarity and tooling, for example:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;yaml&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# BMAD Agents&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;agents&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;analyst&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/analyst.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;architect&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/architect.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;bmad-master&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/bmad-master.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;bmad-orchestrator&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/bmad-orchestrator.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;dev&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/dev.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;pm&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/pm.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;po&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/po.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;qa&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/qa.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;sm&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/sm.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;ux-expert&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#111111&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;.bmad-core/agents/ux-expert.md&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Note: &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt; is Markdown and doesn’t require YAML—tables or lists are fine. The key is to let agents reliably locate those role &lt;code dir=&quot;auto&quot;&gt;.md&lt;/code&gt; files.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;step-3-start-the-bmad-analyst-inside-codex&quot;&gt;Step 3: Start the BMAD Analyst inside Codex&lt;/h2&gt;&lt;a href=&quot;#step-3-start-the-bmad-analyst-inside-codex&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Step 3: Start the BMAD Analyst inside Codex”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;31-launch-codex&quot;&gt;3.1 Launch Codex&lt;/h3&gt;&lt;a href=&quot;#31-launch-codex&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3.1 Launch Codex”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Install the CLI (choose one):&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-g&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;@openai/codex&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# or&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;brew&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;install&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;codex&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code dir=&quot;auto&quot;&gt;codex&lt;/code&gt; in your project root and sign in with your ChatGPT account when prompted.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;32-oneliner-to-bring-the-analyst-online&quot;&gt;3.2 “One‑liner” to bring the Analyst online&lt;/h3&gt;&lt;a href=&quot;#32-oneliner-to-bring-the-analyst-online&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3.2 “One‑liner” to bring the Analyst online”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Once in Codex, say:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;*agent analyst&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Hi, I’m Mary — Business Analyst.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;All commands must start with *.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;1. *help — Show available commands&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;2. *brainstorm {topic} — Facilitate structured brainstorming&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;3. *create-competitor-analysis — Create competitor analysis doc&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;4. *create-project-brief — Create project brief&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;5. *doc-out — Output current document&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;6. *elicit — Run advanced elicitation&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;7. *perform-market-research — Create market research doc&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;8. *research-prompt {topic} — Generate deep research prompt&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;      &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;9. *yolo — Toggle skip confirmations&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;     &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;10. *exit — Exit Business Analyst persona&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;BMAD’s Web/IDE flows surface &lt;code dir=&quot;auto&quot;&gt;*help&lt;/code&gt; and &lt;code dir=&quot;auto&quot;&gt;*analyst&lt;/code&gt; as common entry points. Bringing the same “numbered options + task‑driven” style into Codex gives you a similar experience.&lt;/p&gt;
&lt;p&gt;Reminder: BMAD’s Analyst/Architect/PM/Dev roles each define commands/checklists in &lt;code dir=&quot;auto&quot;&gt;agents/*.md&lt;/code&gt;. Some tasks (e.g., brainstorming) reference files in &lt;code dir=&quot;auto&quot;&gt;.bmad-core/tasks/*&lt;/code&gt;. If paths are correct, the agent can load them.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;a-zerotoone-cheat-sheet-use-asis&quot;&gt;A “zero‑to‑one” cheat sheet (use as‑is)&lt;/h2&gt;&lt;a href=&quot;#a-zerotoone-cheat-sheet-use-asis&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “A “zero‑to‑one” cheat sheet (use as‑is)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Setup&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;npx bmad-method install&lt;/code&gt; (or &lt;code dir=&quot;auto&quot;&gt;npm run install:bmad&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Verify &lt;code dir=&quot;auto&quot;&gt;.bmad-core&lt;/code&gt; exists and Node v20+ is installed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Configure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Document “how to build/test/code style/PR rules” in &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the “BMAD Agents” mapping so role files resolve correctly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Execute&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open &lt;code dir=&quot;auto&quot;&gt;codex&lt;/code&gt; and send the &lt;code dir=&quot;auto&quot;&gt;*agent analyst&lt;/code&gt; startup command&lt;/li&gt;
&lt;li&gt;Produce &lt;code dir=&quot;auto&quot;&gt;docs/brief.md&lt;/code&gt; → Architect drafts architecture → Scrum Master shards into stories → Dev implements → QA validates&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;make-it-faster-let-codex-handle-checks-and-prs&quot;&gt;Make it faster: let Codex handle checks and PRs&lt;/h2&gt;&lt;a href=&quot;#make-it-faster-let-codex-handle-checks-and-prs&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Make it faster: let Codex handle checks and PRs”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Codex naturally runs commands and reviews code in your repo (and can be @‑mentioned in PRs). When paired with &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt; rules for tests/style/build, you get a tight loop of local validation and automated review.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;common-pitfalls-and-fixes&quot;&gt;Common pitfalls and fixes&lt;/h2&gt;&lt;a href=&quot;#common-pitfalls-and-fixes&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Common pitfalls and fixes”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Wrong path: missing the leading dot in &lt;code dir=&quot;auto&quot;&gt;.bmad-core&lt;/code&gt; causes load failures → standardize on dotted paths.&lt;/li&gt;
&lt;li&gt;Scattered rules: put build/test/style/submit conventions in &lt;code dir=&quot;auto&quot;&gt;AGENTS.md&lt;/code&gt; so agents execute consistently.&lt;/li&gt;
&lt;li&gt;Too many roles to remember: use &lt;code dir=&quot;auto&quot;&gt;*help&lt;/code&gt; in session or have the agent present numbered next steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;closing&quot;&gt;Closing&lt;/h2&gt;&lt;a href=&quot;#closing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Closing”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;BMAD turns human roles into versioned code. Codex turns execution into automatable actions. Wire them together and you get an AI team that doesn’t tire, reproduces well, and never forgets the rules.&lt;/p&gt;
&lt;p&gt;Which project will you hand to this squad first? Share in the comments.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;quick-interaction-prompt&quot;&gt;Quick interaction prompt&lt;/h2&gt;&lt;a href=&quot;#quick-interaction-prompt&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Quick interaction prompt”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Which BMAD role would you customize deeply — Analyst, Architect, or QA?&lt;br&gt;
Share your reason and one team rule that must always be enforced.&lt;/p&gt;
&lt;/blockquote&gt;&lt;!--
Suggested titles (multi‑language + slug)

1) Put BMAD into Codex: An AI Squad from Brief to Delivery  
slug: bmad-with-codex-ai-squad

2) AGENTS.md + BMAD: Teach Codex to Code Your Way  
slug: agents-md-bmad-teach-codex

3) Three Steps: Install BMAD → Edit AGENTS.md → Summon Analyst  
slug: 3-steps-bmad-codex-analyst

Artwork prompts (2:1, illustration, no text)
* Cover: “An AI squad in a terminal‑driven workshop: analyst, architect, developer as stylized avatars around a floating Markdown file labeled AGENTS.md; terminal windows glowing; blueprint lines connecting nodes; clean neon palette.”
* Install: “Terminal running `npx bmad-method install`, progress bars, Node v20 badge, minimal cyber aesthetic.”
* Mount roles: “Repo layout, AGENTS.md in focus with YAML mapping to `.bmad-core/agents/*.md`, cables to role icons.”
* Summon Analyst: “Chat bubble ‘Start Analyst’; character with notepad spawning a project brief; numbered choices UI hints.”

Short social copy (3 lines)
1) Plugged BMAD into Codex today. Analyst ran the requirements session end‑to‑end and drafted a PRD. A bit addictive 😄
2) Turns out `AGENTS.md` is great — once you document the playbook, Codex behaves: build, test, PR, all on rails.
3) A multi‑role AI team actually ships: Analyst leads discovery, Architect proposes, Dev codes. Feels like evenings back again…
--&gt;</content:encoded><category>BMAD</category><category>Claude Code</category><category>codex</category><category>Codex CLI</category><category>OpenAI</category><category>GPT-5</category></item><item><title>Rapidly Develop a HarmonyOS 6 Bluetooth Device Management App with Claude Code: Bluetooth Interaction, ArkTS Compilation Fixes, and TDD/BDD Practices</title><link>https://www.vibesparking.com/en/blog/ai/huawei/harmony-os/ble/2025-09-22-claude-code-harmonyos-ble/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/huawei/harmony-os/ble/2025-09-22-claude-code-harmonyos-ble/</guid><pubDate>Mon, 22 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;div&gt;&lt;h1 id=&quot;rapidly-develop-a-harmonyos-6-bluetooth-device-management-app-with-claude-code-bluetooth-interaction-arkts-compilation-fixes-and-tddbdd-practices&quot;&gt;Rapidly Develop a HarmonyOS 6 Bluetooth Device Management App with Claude Code: Bluetooth Interaction, ArkTS Compilation Fixes, and TDD/BDD Practices&lt;/h1&gt;&lt;a href=&quot;#rapidly-develop-a-harmonyos-6-bluetooth-device-management-app-with-claude-code-bluetooth-interaction-arkts-compilation-fixes-and-tddbdd-practices&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Rapidly Develop a HarmonyOS 6 Bluetooth Device Management App with Claude Code: Bluetooth Interaction, ArkTS Compilation Fixes, and TDD/BDD Practices”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;This article demonstrates how to quickly develop a Bluetooth device management app for Huawei’s HarmonyOS 6 using Claude Code. It covers typical features such as receiving Bluetooth advertisements, connecting to devices, setting the time, synchronizing status, performing infusions, and retrieving logs. The article also focuses on strategies for fixing ArkTS compilation errors and implementing TDD/BDD-oriented testing.&lt;/p&gt;
&lt;p&gt;— Suitable for teams aiming to build BLE device applications through a “write, test, iterate quickly” approach.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;1-development-goals-and-device-protocol-overview&quot;&gt;1. Development Goals and Device Protocol Overview&lt;/h2&gt;&lt;a href=&quot;#1-development-goals-and-device-protocol-overview&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. Development Goals and Device Protocol Overview”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Target Device&lt;/strong&gt;: A Bluetooth device.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typical Commands&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Read status, synchronize time, perform infusion, read records.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implementation Files and Data Models&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt;: An all-in-one wrapper for scanning and discovery, connection, notifications, and command sending.&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleCommand.ets&lt;/code&gt;: Command construction (including CRC, length, and time/dose encoding).&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleResponseParser.ets&lt;/code&gt;: Response parsing.&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleAdvertisingParser.ets&lt;/code&gt;: Advertising data parsing (local name, UUID, manufacturer data, etc.).&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;2-how-claude-code-accelerates-native-arkts-development&quot;&gt;2. How Claude Code Accelerates Native ArkTS Development&lt;/h2&gt;&lt;a href=&quot;#2-how-claude-code-accelerates-native-arkts-development&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. How Claude Code Accelerates Native ArkTS Development”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Code Navigation and Refactoring&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Quickly locate BLE-related entry points, cross-references, and dependencies using commands; maintain consistency with batch renaming and interface extraction.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Assisted Fixing of ArkTS Compilation Warnings/Errors&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Automatically points out rule violations like &lt;code dir=&quot;auto&quot;&gt;arkts-no-spread&lt;/code&gt; and &lt;code dir=&quot;auto&quot;&gt;unknown/any&lt;/code&gt;, suggesting replacement code and type completion.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Generating Test Skeletons and Adding Assertions&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Quickly create and extend unit tests and UI integration tests based on Hypium.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By combining these capabilities, a high-frequency feedback loop of “modify → run tests → analyze logs → fix/refactor” can be established, significantly shortening the cycle from protocol design to an end-to-end working application.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;3-detailed-breakdown-of-the-bluetooth-interaction-flow&quot;&gt;3. Detailed Breakdown of the Bluetooth Interaction Flow&lt;/h2&gt;&lt;a href=&quot;#3-detailed-breakdown-of-the-bluetooth-interaction-flow&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3. Detailed Breakdown of the Bluetooth Interaction Flow”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;1-receiving-bluetooth-advertisements-scanning-and-parsing&quot;&gt;1. Receiving Bluetooth Advertisements (Scanning and Parsing)&lt;/h3&gt;&lt;a href=&quot;#1-receiving-bluetooth-advertisements-scanning-and-parsing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. Receiving Bluetooth Advertisements (Scanning and Parsing)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multi-path Scanning (HarmonyOS API v15+)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Entry Point&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt; &lt;code dir=&quot;auto&quot;&gt;startScan(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;BLEDeviceFind&lt;/code&gt; is continuously reported, internally using &lt;code dir=&quot;auto&quot;&gt;BleAdvertisingParser&lt;/code&gt; to parse the local name, service UUID, manufacturer data, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advertising Parsing&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleAdvertisingParser.ets&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Covers major AD types like Flags, Complete/Incomplete UUIDs, and Manufacturer Specific Data, making it easy to quickly identify the target device.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Associated Discovery Service&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleDiscoveryService.ets&lt;/code&gt; encapsulates the discovery list, sorting by RSSI, automatic stopping on timeout, and a “trusted device” caching strategy. The UI side can directly subscribe to status/result callbacks.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;2-connecting-to-a-device-and-enabling-notifications&quot;&gt;2. Connecting to a Device and Enabling Notifications&lt;/h3&gt;&lt;a href=&quot;#2-connecting-to-a-device-and-enabling-notifications&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. Connecting to a Device and Enabling Notifications”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;After connecting and discovering services, you must “subscribe, then enable notifications, then read once more” before writing:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enable Notifications&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;First, subscribe to the callback: &lt;code dir=&quot;auto&quot;&gt;gattClient.on(&apos;BLECharacteristicChange&apos;, ...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then, enable it: &lt;code dir=&quot;auto&quot;&gt;setCharacteristicChangeNotification(..., true)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optionally, perform a &lt;code dir=&quot;auto&quot;&gt;readCharacteristicValue&lt;/code&gt; once to “warm up” the notification channel (required by some devices).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notification Callback&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt; &lt;code dir=&quot;auto&quot;&gt;onCharacteristicChanged(...)&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Use lowercase UUID comparison to avoid misses due to case differences.&lt;/li&gt;
&lt;li&gt;Convert &lt;code dir=&quot;auto&quot;&gt;characteristic.characteristicValue&lt;/code&gt; to an &lt;code dir=&quot;auto&quot;&gt;ArrayBuffer&lt;/code&gt; before dispatching to a pending callback or a unified protocol parser.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;3-sending-and-debugging-commands&quot;&gt;3. Sending and Debugging Commands&lt;/h3&gt;&lt;a href=&quot;#3-sending-and-debugging-commands&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3. Sending and Debugging Commands”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sending a Write&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt; &lt;code dir=&quot;auto&quot;&gt;sendCommand(...)&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;ArkTS disables object spreading (&lt;code dir=&quot;auto&quot;&gt;no-spread&lt;/code&gt;), so &lt;code dir=&quot;auto&quot;&gt;characteristicValue&lt;/code&gt; must be modified directly before writing.&lt;/li&gt;
&lt;li&gt;Uniformly output hexadecimal strings for easier troubleshooting: &lt;code dir=&quot;auto&quot;&gt;BleCommand.toHexString(...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command Construction&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Read Status: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleCommand.ets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Synchronize Time: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleCommand.ets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Infusion Command: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleCommand.ets&lt;/code&gt; (dose × 1000 converted to an integer, written in little-endian).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;4-synchronizing-time-and-reading-status&quot;&gt;4. Synchronizing Time and Reading Status&lt;/h3&gt;&lt;a href=&quot;#4-synchronizing-time-and-reading-status&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4. Synchronizing Time and Reading Status”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Synchronize Time&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt;, writes &lt;code dir=&quot;auto&quot;&gt;0xA7&lt;/code&gt; containing year, month, day, week, hour, minute, and second, then verifies through the notification channel upon completion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read Status&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt; → Wait for notification → Parse: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleResponseParser.ets&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Parses battery status, voltage/charge, remaining dose, single/daily limits, alarm bits, today’s usage, maximum log entries, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;5-infusion&quot;&gt;5. Infusion&lt;/h3&gt;&lt;a href=&quot;#5-infusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5. Infusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt; calls &lt;code dir=&quot;auto&quot;&gt;buildInjectionCommand(dose)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleCommand.ets&lt;/code&gt;: The dose is encoded as a 4-byte little-endian integer with a precision of 1/1000, accommodating “large/high-precision dose” scenarios.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Recommendations&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Perform pre-validation against the single/daily limits from the status, and split into packets or send in multiple parts if necessary.&lt;/li&gt;
&lt;li&gt;Pay attention to MTU (typically 20 bytes) limitations and command length design.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;6-retrieving-logs-record-parsing&quot;&gt;6. Retrieving Logs (Record Parsing)&lt;/h3&gt;&lt;a href=&quot;#6-retrieving-logs-record-parsing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6. Retrieving Logs (Record Parsing)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Notification Handling Dispatch&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleService.ets&lt;/code&gt; &lt;code dir=&quot;auto&quot;&gt;processReceivedData(...)&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;The “ path calls record parsing: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BleResponseParser.ets&lt;/code&gt; &lt;code dir=&quot;auto&quot;&gt;parseRecord(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Supports two types of structured data: injection records and operation records.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you need to “fetch historical records by index/type,” you can add a &lt;code dir=&quot;auto&quot;&gt;READ_RECORD_WITH_TYPE&lt;/code&gt; constructor in &lt;code dir=&quot;auto&quot;&gt;BleCommand&lt;/code&gt; (a template is commented out in the project), which seamlessly integrates with the parsing logic above.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;4-arkts-compilation-errors-and-key-fixes&quot;&gt;4. ArkTS Compilation Errors and Key Fixes&lt;/h2&gt;&lt;a href=&quot;#4-arkts-compilation-errors-and-key-fixes&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4. ArkTS Compilation Errors and Key Fixes”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Summary Document&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;docs/ble-arkts-fix-summary.md&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Missing Class Properties&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;For example, if &lt;code dir=&quot;auto&quot;&gt;connectionPromiseResolvers&lt;/code&gt; is not declared, it needs to be added as &lt;code dir=&quot;auto&quot;&gt;Map&amp;#x3C;string, () =&gt; void&gt;&lt;/code&gt; for external resolution of connection Promises.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code dir=&quot;auto&quot;&gt;arkts-no-spread&lt;/code&gt;&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Object spreading is forbidden when writing characteristic values. Directly modify &lt;code dir=&quot;auto&quot;&gt;existing.characteristicValue = ...&lt;/code&gt; (see the &lt;code dir=&quot;auto&quot;&gt;BleService.ets&lt;/code&gt; section).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code dir=&quot;auto&quot;&gt;unknown/any&lt;/code&gt; and Loose Literals&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;In notification callbacks, remove temporary &lt;code dir=&quot;auto&quot;&gt;Record&amp;#x3C;string, string&gt;&lt;/code&gt;/&lt;code dir=&quot;auto&quot;&gt;unknown&lt;/code&gt; assertions and use strong typing instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notification Matching and Logging&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Use lowercase UUID comparison and detailed logging of &lt;code dir=&quot;auto&quot;&gt;service/char UUID&lt;/code&gt; and hexadecimal payloads for easier on-site debugging.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These fixes, without changing business semantics, make the code satisfy both ArkTS semantics and Lint rules, resulting in a stable and maintainable build.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;5-tdd-and-bdd-testing-practices&quot;&gt;5. TDD and BDD Testing Practices&lt;/h2&gt;&lt;a href=&quot;#5-tdd-and-bdd-testing-practices&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5. TDD and BDD Testing Practices”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;1-unit-testing-tdd&quot;&gt;1. Unit Testing (TDD)&lt;/h3&gt;&lt;a href=&quot;#1-unit-testing-tdd&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. Unit Testing (TDD)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device Discovery and Caching&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/ohosTest/ets/test/BleDiscoveryService.test.ets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;entry/src/ohosTest/ets/test/DeviceCache.test.ets&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Coverage Points&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Scan status flow, filtering by name, RSSI sorting, automatic stopping.&lt;/li&gt;
&lt;li&gt;Trusted device marking, cache clearing, capacity limits, expiration statistics, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running Tests&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code dir=&quot;auto&quot;&gt;hvigor test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Filter by file: &lt;code dir=&quot;auto&quot;&gt;hvigor test --filter BleDiscoveryService&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;2-behavior-driven-development-bdd-and-ui-integration&quot;&gt;2. Behavior-Driven Development (BDD) and UI Integration&lt;/h3&gt;&lt;a href=&quot;#2-behavior-driven-development-bdd-and-ui-integration&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. Behavior-Driven Development (BDD) and UI Integration”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario Use Case&lt;/strong&gt;: &lt;code dir=&quot;auto&quot;&gt;entry/src/ohosTest/ets/test/BleUIIntegration.test.ets&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Start → Begin Scan → Discover Device → Connect → Sync Time/Refresh Status/Send Infusion → Disconnect.&lt;/li&gt;
&lt;li&gt;Utilizes &lt;code dir=&quot;auto&quot;&gt;@kit.TestKit&lt;/code&gt;’s &lt;code dir=&quot;auto&quot;&gt;Driver&lt;/code&gt; to find buttons, click, and assert, ensuring an end-to-end path “from UI to protocol.”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running Tests&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Full integration test: &lt;code dir=&quot;auto&quot;&gt;hvigor test --integration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h3 id=&quot;3-assertions-and-timeout-strategies&quot;&gt;3. Assertions and Timeout Strategies&lt;/h3&gt;&lt;a href=&quot;#3-assertions-and-timeout-strategies&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3. Assertions and Timeout Strategies”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Most BLE steps are asynchronous callbacks: set reasonable timeouts for scanning/connecting/writing/notifications (e.g., 5–15s) to avoid false positives.&lt;/li&gt;
&lt;li&gt;For critical UI text and buttons, try finding them multiple times to improve stability.&lt;/li&gt;
&lt;li&gt;Use hexadecimal logs as an assertion aid (see &lt;code dir=&quot;auto&quot;&gt;BleService.ets&lt;/code&gt;/&lt;code dir=&quot;auto&quot;&gt;BleService.ets&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;6-practical-advice-and-common-pitfalls&quot;&gt;6. Practical Advice and Common Pitfalls&lt;/h2&gt;&lt;a href=&quot;#6-practical-advice-and-common-pitfalls&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6. Practical Advice and Common Pitfalls”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Notification Order and “Warm-up”&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;The sequence “subscribe → enable notifications → read once” can significantly improve the success rate of the first downstream response for some devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MTU and Command Length&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;A typical BLE 4.2 MTU is only 20 bytes. Complex commands need to be split or the negotiation strategy on the device/firmware side needs to be upgraded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Little-Endian Encoding and CRC&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;The total command length, field encoding, and CRC16 (CCITT/False) calculation must be strictly aligned with the firmware.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use HiLog Instead of console&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Use a unified domain/tag and &lt;code dir=&quot;auto&quot;&gt;%{public}&lt;/code&gt; output (see &lt;code dir=&quot;auto&quot;&gt;docs/hilog-migration-summary.md&lt;/code&gt;) for easier offline and on-site troubleshooting.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permissions and Bluetooth Status&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Unified entry point: &lt;code dir=&quot;auto&quot;&gt;entry/src/main/ets/utils/BlePermissionManager.ets&lt;/code&gt; &lt;code dir=&quot;auto&quot;&gt;ensureBleReady(...)&lt;/code&gt;. Handle permissions and adapter status all at once before starting a scan.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;h2 id=&quot;7-conclusion-and-next-steps&quot;&gt;7. Conclusion and Next Steps&lt;/h2&gt;&lt;a href=&quot;#7-conclusion-and-next-steps&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “7. Conclusion and Next Steps”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Thanks to Claude Code’s “code navigation + compilation repair + test generation” features, we completed the entire cycle from protocol design to an end-to-end working solution with minimal back-and-forth:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bluetooth Interaction&lt;/strong&gt;: The full chain of scanning, connecting, notifications, commands, and record parsing is connected.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ArkTS Fixes&lt;/strong&gt;: Strictly follows semantics and Lint rules for a stable build.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TDD/BDD&lt;/strong&gt;: Unit and UI integration tests cover major scenarios, facilitating continuous regression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Recommended Next Steps&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add the &lt;code dir=&quot;auto&quot;&gt;READ_RECORD_WITH_TYPE&lt;/code&gt; command constructor in &lt;code dir=&quot;auto&quot;&gt;BleCommand&lt;/code&gt; to integrate with the existing parser and complete the “fetch logs by index” feature.&lt;/li&gt;
&lt;li&gt;Introduce more granular ViewModel layer state management and data persistence to create a complete “cloud-device-edge” loop with record synchronization.&lt;/li&gt;
&lt;li&gt;Refine exception codes and retry strategies to enhance robustness during network disconnection/reconnection.&lt;/li&gt;
&lt;/ul&gt;</content:encoded><category>Claude Code</category><category>ArkTS</category><category>HarmonyOS</category><category>BLE</category><category>Bluetooth Low Energy</category></item><item><title>Claude Code Automates Migration to HarmonyOS BLE v15+ for Multi-Scan and Connection Management</title><link>https://www.vibesparking.com/en/blog/ai/huawei/harmony-os/ble/2025-09-20-claude-code-auto-migrate-harmonyos-ble-v15-multi-scan-connection/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/huawei/harmony-os/ble/2025-09-20-claude-code-auto-migrate-harmonyos-ble-v15-multi-scan-connection/</guid><pubDate>Sat, 20 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;div&gt;&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;&lt;a href=&quot;#tldr&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “TL;DR”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The HarmonyOS BLE API version used in my previous project (v14 and earlier) had limitations such as single-scan restrictions and incomplete resource management.&lt;/p&gt;
&lt;p&gt;Now, using Claude Code to generate and modify code, I was able to understand and automatically migrate to the latest HarmonyOS BLE API v15+, enabling multi-scan and more robust connection management.&lt;/p&gt;
&lt;p&gt;Finally, I documented the complete migration process from v14 to v15+, focusing on multi-scan support, advertising data parsing, and connection management optimization.&lt;/p&gt;
&lt;div&gt;&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;&lt;a href=&quot;#background&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Background”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;In the HarmonyOS ecosystem, BLE (Bluetooth Low Energy) is a crucial technology for interconnecting smart devices. As application demands have grown, the limitation of single-scan has become increasingly apparent, especially in scenarios requiring simultaneous scanning for multiple devices or services.&lt;/p&gt;
&lt;p&gt;HarmonyOS introduced multi-scan support in API version 15, allowing applications to create multiple independent scanning instances, thereby improving resource management and scanning flexibility.&lt;/p&gt;
&lt;p&gt;However, the existing project code was still based on the old API, leading to the following issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Single-Scan Limitation&lt;/strong&gt;: Only one scanning task could be performed at a time, failing to meet the demand for multi-device scanning.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Incomplete Resource Management&lt;/strong&gt;: Scanner instances were not managed independently, causing state confusion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lack of Advertising Data Parsing&lt;/strong&gt;: Scan results did not parse advertising data, affecting device information retrieval.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simple Connection Management&lt;/strong&gt;: The absence of retry and automatic reconnection mechanisms compromised connection stability.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;h2 id=&quot;objective&quot;&gt;Objective&lt;/h2&gt;&lt;a href=&quot;#objective&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Objective”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Based on the latest HarmonyOS BLE API v15+, refactor the existing BLE service code to achieve the following goals:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Multi-Scan Support&lt;/strong&gt;: Allow multiple scanning tasks to run simultaneously, with each task managed independently.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Independent Resource Management&lt;/strong&gt;: Each scanner instance is controlled independently to avoid conflicts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complete Advertising Data Parsing&lt;/strong&gt;: Implement parsing of BLE advertising data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enhanced Connection Management&lt;/strong&gt;: Implement connection retry and automatic reconnection mechanisms to improve connection stability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modern Asynchronous Handling&lt;/strong&gt;: Use Promise/async-await to handle asynchronous BLE operations.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;h2 id=&quot;migration-process&quot;&gt;Migration Process&lt;/h2&gt;&lt;a href=&quot;#migration-process&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Migration Process”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;1-read-official-documentation&quot;&gt;1. Read Official Documentation&lt;/h3&gt;&lt;a href=&quot;#1-read-official-documentation&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. Read Official Documentation”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Before starting the migration, the first step was to download the official documentation to let Claude Code understand the new features and changes in HarmonyOS BLE API v15+.&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;2-use-claude-code-to-generate-migration-suggestions&quot;&gt;2. Use Claude Code to Generate Migration Suggestions&lt;/h3&gt;&lt;a href=&quot;#2-use-claude-code-to-generate-migration-suggestions&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. Use Claude Code to Generate Migration Suggestions”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;I provided the official documentation content to Claude Code and asked it to analyze the problems in the existing code and execute the steps to migrate to the latest API.&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;shell&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; @harmony-os-docs/cn/doc/harmonyos-guides/ble-development-guide.md Recommend using the scanning method supported from API version&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;15,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;which&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;allows&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;applications&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;initiate&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;manage&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multiple&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scans.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Do&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;not&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;use&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;method&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;supported&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;version&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;14&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;earlier,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;which&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;only&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;supports&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;single-path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;⎿&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Read&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;harmony-os-docs/cn/doc/harmonyos-guides/ble-development-guide.md&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; (806 &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;lines&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;⏺&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;I&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;understand.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;This&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;document&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;highlights&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;important&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;updates&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;HarmonyOS&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BLE&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;development:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Key&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Points&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Version&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Upgrade&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Recommendation:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Recommended:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Use&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multi-scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;method&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;15+&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Avoid:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;The&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;single-scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;method&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;14&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;earlier&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Main&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Differences&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;v15+&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; (Recommended)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Create&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;an&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;independent&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;instance,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;supporting&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multi-scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;management&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;bleScanner:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;ble.BleScanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;ble.createBleScanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Subscribe&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;results&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;bleScanner.on(&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;&apos;BLEDeviceFind&apos;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;onReceiveEvent&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Start&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;bleScanner.startScan([scanFilter],&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanOptions&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Stop&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;bleScanner.stopScan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Advantages:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;✅&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Supports&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;concurrent&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multi-scanning&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;✅&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Each&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;instance&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;managed&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;independently&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;✅&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;More&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;flexible&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;resource&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;control&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;✅&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Better&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;isolation&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;v14&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;earlier&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; (Not &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Recommended&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Global&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;singleton&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scan,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;only&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;supports&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;single-path&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;ble.on(&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;&apos;BLEDeviceFind&apos;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;onReceiveEvent&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;ble.startBLEScan([scanFilter],&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanOptions&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;ble.stopBLEScan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Limitations:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;❌&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Only&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;supports&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;single-path&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;❌&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Complex&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;global&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;management&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;❌&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Cannot&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;manage&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multiple&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;tasks&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;simultaneously&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Implementation&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Suggestions&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Based&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;on&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;example&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;code&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;documentation&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; (BleScanManager &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;it&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;recommended&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;that&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;project&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;adopt&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;following&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;architecture:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Use&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BleScanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;instance&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;management:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Create&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;an&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;independent&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BleScanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;instance&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;each&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;task&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Encapsulate&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;manager:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Like&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BleScanManager&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;documentation,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;uniformly&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;manage&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;lifecycle&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Complete&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;advertising&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;parsing:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Implement&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;full&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;parsing&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BLE&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;advertising&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;data&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Asynchronous&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;operation&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;handling:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Use&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Promise/async-await&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;handle&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;asynchronous&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BLE&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;operations&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;This&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;upgrade&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;particularly&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;important&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;HarmonyOS&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;projects,&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;as&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;applications&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;may&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;need&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multiple&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;devices&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;or&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;perform&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;different&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;types&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scanning&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;tasks&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;simultaneously.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;I&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;will&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;refactor&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BleService.ets&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;based&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;on&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;latest&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;specifications&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;HarmonyOS&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;v15+&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;to&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;implement&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;multi-scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;management&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;more&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;modern&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BLE&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;operation&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;architecture.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;⏺&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Code&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Analysis&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;The&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;existing&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BleService.ets&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;has&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;the&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;following&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;key&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;issues:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Use&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;deprecated&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;v14&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;single-scan:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Uses&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;ble.startBLEScan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;() &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;ble.on&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;&apos;BLEDeviceFind&apos;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Lack&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;BLE&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;advertising&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;parsing:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Does&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;not&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;parse&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;advertising&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;scan&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;results&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Incomplete&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;resource&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;management:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Scanner&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;instances&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;are&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;not&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;managed&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;independently&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Simple&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;handling:&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;Lacks&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;fine-grained&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;recovery&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;mechanisms&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#C5E478;--1:#3B61B0&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;&apos;&apos;&apos;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;### 3. Generate Migration Code&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;Based on the analysis, Claude Code generated new `BleService.ets` code, including support for multi-scanning, advertising data parsing, and enhanced connection management.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;```typescript&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;481&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;482      // Pending response callbacks&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;483      private pendingCallbacks: Map&amp;#x3C;string, (data: ArrayBuffer) =&gt; void&gt; = new Map();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;484 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;485 +    /**&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;486 +     * Clean up scanner resources&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;487 +     */&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;488 +    private cleanupScanner(scanId: string): void {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;489 +      // Clear timer&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;490 +      const timer = this.scanTimers.get(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;491 +      if (timer) {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;492 +        clearTimeout(timer);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;493 +        this.scanTimers.delete(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;494 +      }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;495 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;496 +      // Remove from active set&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;497 +      this.activeScanners.delete(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;498 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;499 +      // Clean up scanner instance&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;500 +      this.bleScanners.delete(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;501 +      this.scanCallbacks.delete(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;502 +    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;503 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;504 +    /**&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;505 +     * Set up periodic cleanup of stale discovered devices&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;506 +     */&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;507 +    private setupDeviceCleanupTimer(): void {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;508 +      setInterval(() =&gt; {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;509 +        const now = Date.now();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;510 +        const staleThreshold = 60000; // 60 seconds&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;511 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;512 +        for (const [deviceId, lastSeen] of this.deviceLastSeenTime.entries()) {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;513 +          if (now - lastSeen &gt; staleThreshold) {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;514 +            // Remove stale devices not connected&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;515 +            if (!this.connectedDevices.has(deviceId)) {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;516 +              this.discoveredDevices.delete(deviceId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;517 +              this.deviceLastSeenTime.delete(deviceId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;518 +              hilog.info(DOMAIN, TAG, `Removed stale device: ${deviceId}`);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;519 +            }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;520 +          }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;521 +        }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;522 +      }, 30000); // Run every 30 seconds&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;523 +    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;524 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;525 +    /**&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;526 +     * Get all discovered devices (including non-connected)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;527 +     */&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;528 +    public getDiscoveredDevices(): BleDevice[] {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;529 +      return Array.from(this.discoveredDevices.values());&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;530 +    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;531 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;532 +    /**&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;533 +     * Get active scanner IDs&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;534 +     */&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;535 +    public getActiveScanners(): string[] {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;536 +      return Array.from(this.activeScanners);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;537 +    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;538 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;539 +    /**&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;540 +     * Create targeted scan for specific device&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;541 +     */&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;542 +    public async scanForDevice(&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;543 +      deviceId: string,&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;544 +      timeout: number = 10000&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;545 +    ): Promise&amp;#x3C;BleDevice | null&gt; {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;546 +      return new Promise((resolve, reject) =&gt; {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;547 +        const scanId = `targeted-${deviceId}-${Date.now()}`;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;548 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;549 +        this.startScan(&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;550 +          scanId,&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;551 +          (device) =&gt; {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;552 +            if (device.id === deviceId) {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;553 +              this.stopScan(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;554 +              resolve(device);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;555 +            }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;556 +          },&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;557 +          { timeout }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;558 +        );&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;559 +&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;560 +        // Set timeout for not finding device&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;561 +        setTimeout(() =&gt; {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;562 +          if (this.activeScanners.has(scanId)) {&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;563 +            this.stopScan(scanId);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;564 +            resolve(null);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;565 +          }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;566 +        }, timeout);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;567 +      });&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;568 +    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;       &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;569    }&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;button title=&quot;Copy to clipboard&quot; data-copied=&quot;Copied!&quot; data-code=&quot;&quot;&gt; @harmony-os-docs/cn/doc/harmonyos-guides/ble-development-guide.md Recommend using the scanning method supported from API version  15, which allows applications to initiate and manage multiple scans. Do not use the scanning method supported in API version  14 and earlier, which only supports single-path scanning.  ⎿  Read harmony-os-docs/cn/doc/harmonyos-guides/ble-development-guide.md (806 lines)⏺ I understand. This document highlights important updates for HarmonyOS BLE development:  Key Points  API Version Upgrade Recommendation:  - Recommended: Use the multi-scan method from API version 15+  - Avoid: The single-scan method from API version 14 and earlier  Main Differences  API v15+ (Recommended)  // Create an independent scanner instance, supporting multi-scan management  let bleScanner: ble.BleScanner = ble.createBleScanner();  // Subscribe to scan results  bleScanner.on(&amp;#x27;BLEDeviceFind&amp;#x27;, onReceiveEvent);  // Start scanning  bleScanner.startScan([scanFilter], scanOptions);  // Stop scanning  bleScanner.stopScan();  Advantages:  - ✅ Supports concurrent multi-scanning  - ✅ Each scanner instance is managed independently  - ✅ More flexible resource control  - ✅ Better scan isolation  API v14 and earlier (Not Recommended)  // Global singleton scan, only supports single-path  ble.on(&amp;#x27;BLEDeviceFind&amp;#x27;, onReceiveEvent);  ble.startBLEScan([scanFilter], scanOptions);  ble.stopBLEScan();  Limitations:  - ❌ Only supports single-path scanning  - ❌ Complex global state management  - ❌ Cannot manage multiple scanning tasks simultaneously  Implementation Suggestions  Based on the example code in the documentation (BleScanManager class), it is recommended that the project adopt the following architecture:  1. Use BleScanner instance management: Create an independent BleScanner instance for each scanning task  2. Encapsulate a scan manager: Like the BleScanManager class in the documentation, to uniformly manage the scanning lifecycle  3. Complete advertising data parsing: Implement full parsing of BLE advertising data  4. Asynchronous operation handling: Use Promise/async-await to handle asynchronous BLE operations  This upgrade is particularly important for HarmonyOS projects, as applications may need to scan multiple devices or perform different types of scanning tasks simultaneously.I will refactor BleService.ets based on the latest specifications of HarmonyOS API v15+ to implement multi-scan management and a more modern BLE operation architecture.⏺ Code Analysis  The existing BleService.ets has the following key issues:  1. Use of deprecated API v14 single-scan: Uses ble.startBLEScan() and ble.on(&amp;#x27;BLEDeviceFind&amp;#x27;)  2. Lack of BLE advertising data parsing: Does not parse advertising data from scan results  3. Incomplete resource management: Scanner instances are not managed independently  4. Simple error handling: Lacks fine-grained error recovery mechanisms...&amp;#x27;&amp;#x27;&amp;#x27;Based on the analysis, Claude Code generated new &amp;#x60;BleService.ets&amp;#x60; code, including support for multi-scanning, advertising data parsing, and enhanced connection management.&amp;#x60;&amp;#x60;&amp;#x60;typescript       481       482      // Pending response callbacks       483      private pendingCallbacks: Map&lt;string, (data: ArrayBuffer) =&gt; void&gt; = new Map();       484 +       485 +    /**       486 +     * Clean up scanner resources       487 +     */       488 +    private cleanupScanner(scanId: string): void {       489 +      // Clear timer       490 +      const timer = this.scanTimers.get(scanId);       491 +      if (timer) {       492 +        clearTimeout(timer);       493 +        this.scanTimers.delete(scanId);       494 +      }       495 +       496 +      // Remove from active set       497 +      this.activeScanners.delete(scanId);       498 +       499 +      // Clean up scanner instance       500 +      this.bleScanners.delete(scanId);       501 +      this.scanCallbacks.delete(scanId);       502 +    }       503 +       504 +    /**       505 +     * Set up periodic cleanup of stale discovered devices       506 +     */       507 +    private setupDeviceCleanupTimer(): void {       508 +      setInterval(() =&gt; {       509 +        const now = Date.now();       510 +        const staleThreshold = 60000; // 60 seconds       511 +       512 +        for (const [deviceId, lastSeen] of this.deviceLastSeenTime.entries()) {       513 +          if (now - lastSeen &gt; staleThreshold) {       514 +            // Remove stale devices not connected       515 +            if (!this.connectedDevices.has(deviceId)) {       516 +              this.discoveredDevices.delete(deviceId);       517 +              this.deviceLastSeenTime.delete(deviceId);       518 +              hilog.info(DOMAIN, TAG, &amp;#x60;Removed stale device: ${deviceId}&amp;#x60;);       519 +            }       520 +          }       521 +        }       522 +      }, 30000); // Run every 30 seconds       523 +    }       524 +       525 +    /**       526 +     * Get all discovered devices (including non-connected)       527 +     */       528 +    public getDiscoveredDevices(): BleDevice[] {       529 +      return Array.from(this.discoveredDevices.values());       530 +    }       531 +       532 +    /**       533 +     * Get active scanner IDs       534 +     */       535 +    public getActiveScanners(): string[] {       536 +      return Array.from(this.activeScanners);       537 +    }       538 +       539 +    /**       540 +     * Create targeted scan for specific device       541 +     */       542 +    public async scanForDevice(       543 +      deviceId: string,       544 +      timeout: number = 10000       545 +    ): Promise&lt;/button&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;</content:encoded><category>Claude Code</category><category>ArkTS</category><category>HarmonyOS</category><category>BLE</category><category>Bluetooth Low Energy</category></item><item><title>Hands-on with Closed-Loop AI Development: Building a ToDo App with Codex, Claude Code, and Gemini CLI</title><link>https://www.vibesparking.com/en/blog/ai/management/2025-09-18-ai-trio-workflow-codex-claude-gemini-todo/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/management/2025-09-18-ai-trio-workflow-codex-claude-gemini-todo/</guid><pubDate>Thu, 18 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Hands-on with Closed-Loop AI Development: Building a ToDo App with Codex, Claude Code, and Gemini CLI --&gt;
&lt;p&gt;Can AI truly develop a website independently now? This article shares a real experiment where three AI tools, each with a specific role, collaborated to complete the end-to-end development of a ToDo list application. We assigned them the following roles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Codex: Project Manager (for requirements and acceptance criteria)&lt;/li&gt;
&lt;li&gt;Claude Code: Development and Test Engineer&lt;/li&gt;
&lt;li&gt;Gemini CLI: Code Review and Documentation Engineer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This process formed a closed-loop AI collaboration, from “Requirements Analysis -&gt; Feature Implementation -&gt; Automated Testing -&gt; Review and Improvement -&gt; Documentation.”&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;1-codex-the-ai-project-manager-defines-the-requirements&quot;&gt;1. Codex: The AI Project Manager Defines the Requirements&lt;/h2&gt;&lt;a href=&quot;#1-codex-the-ai-project-manager-defines-the-requirements&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. Codex: The AI Project Manager Defines the Requirements”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Codex excels at transforming vague ideas into structured requirements. We gave it the concept of a “to-do list website” and asked it to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output a functional requirements document&lt;/li&gt;
&lt;li&gt;List quantitative acceptance criteria for each feature&lt;/li&gt;
&lt;li&gt;Add exception and boundary scenarios&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example Prompt:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Act as a project manager. Based on the &quot;to-do list website&quot; concept, generate a detailed functional requirements document and define quantifiable acceptance criteria for each feature.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Codex produced content covering:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic functions: Add task / Mark as complete / Delete task&lt;/li&gt;
&lt;li&gt;Task status display and update logic&lt;/li&gt;
&lt;li&gt;Acceptance criteria examples:
&lt;ul&gt;
&lt;li&gt;The task should appear in the list immediately after being added.&lt;/li&gt;
&lt;li&gt;Completed tasks should be styled differently from uncompleted ones.&lt;/li&gt;
&lt;li&gt;The list should refresh instantly after deletion with no residual data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exception handling: Empty input, duplicate tasks, invalid characters, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Key takeaways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The more specific the prompt, the more complete the generated requirements.&lt;/li&gt;
&lt;li&gt;Clearly defining “behavior + criteria” can be directly converted into test cases.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;2-claude-code-the-ai-development-engineer-generates-and-executes-code&quot;&gt;2. Claude Code: The AI Development Engineer Generates and Executes Code&lt;/h2&gt;&lt;a href=&quot;#2-claude-code-the-ai-development-engineer-generates-and-executes-code&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. Claude Code: The AI Development Engineer Generates and Executes Code”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Claude Code received the requirements document and started implementing the frontend, backend, and basic tests using React + Node/Express:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Frontend: Task input, display, status switching, and deletion interactions&lt;/li&gt;
&lt;li&gt;Backend: Simple in-memory data storage + REST API (Create/Read/Update/Delete)&lt;/li&gt;
&lt;li&gt;Supporting documents: README (running steps, dependency instructions)&lt;/li&gt;
&lt;li&gt;Automated tests: Simulate adding/marking/deleting and assert status and list length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example Prompt:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Based on this requirements document, implement the frontend and backend code for a ToDo list website. Use React and Node.js. Include: adding tasks, marking as complete, deleting tasks, and write automated tests to verify each function.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Claude’s execution characteristics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generated files by module (components, services, tests)&lt;/li&gt;
&lt;li&gt;Ran tests while writing code, adjusting if they failed&lt;/li&gt;
&lt;li&gt;Found and fixed minor issues, such as the list not refreshing immediately after deletion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shortcomings (to be improved):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The initial UI was quite plain.&lt;/li&gt;
&lt;li&gt;Task filtering/searching was not yet implemented.&lt;/li&gt;
&lt;li&gt;Lacked persistence (in-memory only).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;3-gemini-cli-the-ai-code-reviewer-inspects-and-improves&quot;&gt;3. Gemini CLI: The AI Code Reviewer Inspects and Improves&lt;/h2&gt;&lt;a href=&quot;#3-gemini-cli-the-ai-code-reviewer-inspects-and-improves&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3. Gemini CLI: The AI Code Reviewer Inspects and Improves”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Gemini CLI, as the review and summarization role, focused on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verifying if the functionality met the requirements and acceptance criteria&lt;/li&gt;
&lt;li&gt;Pointing out gaps and areas for improvement&lt;/li&gt;
&lt;li&gt;Generating a project summary and technical documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example Prompt:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;As a code reviewer, check if this ToDo application meets the acceptance criteria from the requirements document. If there are shortcomings, provide suggestions for improvement. Also, generate a technical specification document (including a functional overview, running steps, implementation highlights, and future optimization suggestions).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Example improvement suggestions from Gemini:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add task filtering: All / Incomplete / Completed&lt;/li&gt;
&lt;li&gt;Add search or pagination to handle a large number of tasks&lt;/li&gt;
&lt;li&gt;UI enhancements: Status colors, placeholder text for empty lists, button accessibility&lt;/li&gt;
&lt;li&gt;Introduce data persistence (file / SQLite / IndexedDB / LocalStorage)&lt;/li&gt;
&lt;li&gt;Add error messages and input validation feedback&lt;/li&gt;
&lt;li&gt;Add E2E tests (e.g., using Playwright)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Generated technical documentation structure (summary):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project Introduction&lt;/li&gt;
&lt;li&gt;Feature List and Corresponding Implementation&lt;/li&gt;
&lt;li&gt;Tech Stack: React (Frontend SPA) + Axios (API calls) + Express (REST service)&lt;/li&gt;
&lt;li&gt;Running Steps: Install dependencies -&gt; Start backend -&gt; Start frontend -&gt; Access local port&lt;/li&gt;
&lt;li&gt;Testing Instructions: Functional tests + extensible integration tests&lt;/li&gt;
&lt;li&gt;Future Plans: Status filtering, persistence, permissions, multi-user support, multi-device adaptation&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;4-summary-of-the-collaborative-loops-value&quot;&gt;4. Summary of the Collaborative Loop’s Value&lt;/h2&gt;&lt;a href=&quot;#4-summary-of-the-collaborative-loops-value&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4. Summary of the Collaborative Loop’s Value”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clear roles: A smooth flow from requirements → implementation → review → documentation&lt;/li&gt;
&lt;li&gt;Traceability: Acceptance criteria directly map to tests&lt;/li&gt;
&lt;li&gt;Efficiency: Humans primarily focus on “supervision + direction” rather than tedious, repetitive work&lt;/li&gt;
&lt;li&gt;Quality: Multiple AI model perspectives reduce oversights&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Current limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complex business modeling still requires human abstraction.&lt;/li&gt;
&lt;li&gt;Deeper performance, security, and concurrency issues still need professional evaluation.&lt;/li&gt;
&lt;li&gt;Limited UI/UX innovation (biased towards functional correctness).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;5-directions-for-further-iteration&quot;&gt;5. Directions for Further Iteration&lt;/h2&gt;&lt;a href=&quot;#5-directions-for-further-iteration&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5. Directions for Further Iteration”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Suggested priorities for expansion:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Feature Layer:&lt;/strong&gt; Status filtering / search / bulk operations / due dates / priorities&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Layer:&lt;/strong&gt; Persistence (SQLite/Prisma) + simple identity system&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing Layer:&lt;/strong&gt; E2E tests + performance metrics (first contentful paint, interaction latency)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Architecture Layer:&lt;/strong&gt; Service splitting / dependency injection / logging and error tracking&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Experience Layer:&lt;/strong&gt; Accessibility (ARIA tags), responsive layout, light/dark mode&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operations Layer:&lt;/strong&gt; Containerized deployment + CI (build / test / lint / preview environment)&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;6-quick-reusable-prompt-templates-for-small-projects&quot;&gt;6. Quick Reusable Prompt Templates for Small Projects&lt;/h2&gt;&lt;a href=&quot;#6-quick-reusable-prompt-templates-for-small-projects&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6. Quick Reusable Prompt Templates for Small Projects”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Requirements Generation:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;You are a project manager. Please output: a functional overview, a feature list, acceptance criteria for each feature, exception scenarios, and non-functional requirements (performance/security/maintainability).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Code Implementation:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Based on the following requirements (paste here), complete the implementation using React + Node/Express. Please output by module: directory structure, core code, test code, and running instructions.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Code Review and Documentation:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Please review the following code for compliance with the requirements. Output: passed items, shortcomings, prioritized improvement suggestions, and generate technical documentation (including running, testing, and extension instructions).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;This experiment demonstrates a compact, efficient, and replicable AI collaborative development loop:
Codex clarifies the goal; Claude Code quickly produces and self-tests; Gemini CLI reviews, improves, and completes the documentation.
AI can already significantly reduce boilerplate and repetitive work, allowing humans to focus on higher-level product and architectural thinking.
Would you also like to try making AI your virtual “small team”? Starting with a minimum viable product (MVP) is the best first step.&lt;/p&gt;
&lt;p&gt;A thought to ponder: Will AI be able to independently complete more complex, multi-layered systems in the future? What are your views?
Get hands-on, and perhaps the next accelerated workflow will be born in your side terminal.&lt;/p&gt;</content:encoded><category>OpenAI</category><category>ChatGPT</category></item><item><title>A Real-World Guide to Using Large AI Models: From Horoscope Matching to Stock Trading and Healthcare</title><link>https://www.vibesparking.com/en/blog/ai/trends/2025-09-18-ai-real-life-uses-fortune-stocks-health-homework/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/trends/2025-09-18-ai-real-life-uses-fortune-stocks-health-homework/</guid><pubDate>Thu, 18 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # A Real-World Guide to Using Large AI Models: From Horoscope Matching to Stock Trading and Healthcare --&gt;
&lt;blockquote&gt;
&lt;p&gt;Large AI models have already permeated our daily lives.
This article guides you through their uses by demographic and scenario: emotional entertainment, investment and finance, health consultation, learning assistance, creative play, and advanced self-study.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;&lt;a href=&quot;#introduction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Introduction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;“How can ordinary people use large AI models?”
Different people have different needs: some are fascinated by horoscopes and relationships, some care about stocks, some ask about wellness, students want help with homework, and others just want to be creative. AI is like a life hack—used well, it can save time, effort, and increase efficiency, but it’s not an all-knowing oracle. Here’s a breakdown by scenario.&lt;/p&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;for-female-users-horoscope-matching-and-emotional-companionship&quot;&gt;For Female Users: Horoscope Matching and Emotional Companionship&lt;/h2&gt;&lt;a href=&quot;#for-female-users-horoscope-matching-and-emotional-companionship&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “For Female Users: Horoscope Matching and Emotional Companionship”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Many people enjoy horoscopes, divination, and emotional comfort. AI can simulate a “horoscope master” or “emotional advisor,” providing companionship and basic advice. It’s not psychic, but it excels at generating friendly, empathetic responses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Tools:&lt;/strong&gt; ChatGPT, Bing Chat.
&lt;strong&gt;Suitable Uses:&lt;/strong&gt; Horoscope matching, tarot card games, emotional support and comfort, writing heartfelt messages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Prompts:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;My boyfriend is a Scorpio and I&apos;m a Pisces. Help me analyze our zodiac compatibility, potential conflicts, and give communication advice.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Using the tone of a tarot reading, simulate a card draw and describe my love life for the next two months (for entertainment).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;My best friend is heartbroken after a breakup. Please comfort her in a gentle and sincere tone, with more empathy and less cliché advice.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be specific in follow-up questions: e.g., “Be more specific, when might he appear? List 3 scenarios.”&lt;/li&gt;
&lt;li&gt;You can request a structure: e.g., “Output in three sections: ‘Personality Complements,’ ‘Potential Disagreements,’ and ‘Communication Advice.’”&lt;/li&gt;
&lt;li&gt;Remember: It’s just for fun, don’t take it seriously.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Reminder: AI cannot predict the real future.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;for-male-users-assistance-with-financialinvestment-analysis&quot;&gt;For Male Users: Assistance with Financial/Investment Analysis&lt;/h2&gt;&lt;a href=&quot;#for-male-users-assistance-with-financialinvestment-analysis&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “For Male Users: Assistance with Financial/Investment Analysis”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;AI can help organize company information, explain macroeconomic concepts, and draft analysis frameworks. It’s not a stock market guru—more like a “logical but needs supervision intern.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Tools:&lt;/strong&gt; ChatGPT (for logical analysis), Bing/Bard (for the latest news), professional industry terminals (like Bloomberg, which ordinary users rarely access).
&lt;strong&gt;Suitable Uses:&lt;/strong&gt; Industry overview, financial structure comparison, risk enumeration, research report drafting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Prompts:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Assume you are a senior investment advisor. Analyze Apple&apos;s (AAPL) growth drivers and major risks for the next 12 months, and provide neutral, optimistic, and conservative scenarios.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Compare the profit structure and asset quality of ICBC and China Merchants Bank over the last three years (please note any assumptions if data is missing).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Under the Fed&apos;s interest rate hike cycle, what are the typical risks for AI-related tech stocks? Please list them in plain language.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use Case:&lt;/strong&gt;
Someone uses AI to get a structured analysis → then verifies the data themselves → avoiding emotional “all-in” decisions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pitfalls to Avoid:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ask it to list “data sources” and “points needing double-checking.”&lt;/li&gt;
&lt;li&gt;Don’t ask “what stock is guaranteed to rise.”&lt;/li&gt;
&lt;li&gt;Avoid relying on a single conclusion: demand the “logical chain.”&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Disclaimer: The above content does not constitute investment advice; please make independent judgments based on real-time data and professional channels.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;for-elderly-users-health-consultation-and-popular-science&quot;&gt;For Elderly Users: Health Consultation and Popular Science&lt;/h2&gt;&lt;a href=&quot;#for-elderly-users-health-consultation-and-popular-science&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “For Elderly Users: Health Consultation and Popular Science”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;AI can quickly provide information on diet, exercise, and common diseases. It’s suitable as a “health encyclopedia + Q&amp;#x26;A interface.” It does not replace a doctor’s diagnosis.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Tools:&lt;/strong&gt; Bing Chat, ChatGPT, intelligent Q&amp;#x26;A from health apps like Dingxiang Yisheng.
&lt;strong&gt;Suitable Uses:&lt;/strong&gt; Popular science on common symptoms, lifestyle reminders, basic explanation of health metrics.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Prompts:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;My blood pressure is slightly high in the fall. What are some diet and lifestyle recommendations? Please list them concisely.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;I often have acid reflux at night. List 5 lifestyle adjustment suggestions and explain the principles behind them.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Please format the following health check-up results (paste data) as: Abnormal Item -&gt; Possible Meaning -&gt; Suggestion.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;button title=&quot;Copy to clipboard&quot; data-copied=&quot;Copied!&quot; data-code=&quot;&quot;&gt; Possible Meaning -&gt; Suggestion.&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/button&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Suggestions for Children Assisting Parents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Help elders add a “for informational purposes only, confirm with a doctor” reminder.&lt;/li&gt;
&lt;li&gt;Require the AI to flag “uncertain/needs medical attention” situations.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Disclaimer: AI output does not replace professional medical diagnosis and prescription; for emergencies or medication, be sure to consult a doctor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;for-students-homework-help-and-writing-assistance&quot;&gt;For Students: Homework Help and Writing Assistance&lt;/h2&gt;&lt;a href=&quot;#for-students-homework-help-and-writing-assistance&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “For Students: Homework Help and Writing Assistance”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;AI can solve problems, create outlines, explain concepts, and grade essays. But don’t just copy—teachers can easily recognize the writing style.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Tools:&lt;/strong&gt; Bing (for photo-based problem solving/web search), ChatGPT (for step-by-step writing guidance), Photomath/Zuoyebang (for targeted problem solving).
&lt;strong&gt;Suitable Uses:&lt;/strong&gt; Step-by-step derivations, restating knowledge points, essay structure, oral/translation practice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Prompts:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Please solve the equation 2x^2 - 4x + 1 = 0 step-by-step, showing the formula derivation and discriminant method.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Translate this Chinese passage into natural English (intermediate difficulty, pay attention to tense and cohesion): ...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;For the high school essay topic &quot;The Troubles of Growing Up,&quot; please provide 5 novel angles and brief supporting arguments for each.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The Right Way to Use It:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ask it to “give hints first, not the final answer directly.”&lt;/li&gt;
&lt;li&gt;Have the AI grade your draft instead of writing the whole thing for you.&lt;/li&gt;
&lt;li&gt;Ask it to point out “grammatical errors + reasons for improvement.”&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Recommendation: Use it to learn “how to solve problems,” not to “learn for you.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;for-general-entertainment-users-imagevideoaudio-creativity&quot;&gt;For General Entertainment Users: Image/Video/Audio Creativity&lt;/h2&gt;&lt;a href=&quot;#for-general-entertainment-users-imagevideoaudio-creativity&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “For General Entertainment Users: Image/Video/Audio Creativity”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;AI is a “low-barrier creation accelerator.” With precise prompt iteration, you can get results close to what you want.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Tools:&lt;/strong&gt;
Image: Midjourney / Stable Diffusion / DALL·E 3
Video: Runway / Gen-2
Audio: ElevenLabs / Azure TTS
(Script ideas and combinations: ChatGPT)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Prompts:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Image: Cyberpunk style, a Shiba Inu wearing sunglasses, neon city background, purple and blue contrast lighting, cinematic quality.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Video: Generate a 10-second animation: a book closes and then opens, with text particles flying out to form the words &quot;Knowledge is Power.&quot;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Audio: Read in a broadcaster&apos;s style: Welcome to this episode of the tech podcast...&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Structured prompts: Subject / Style / Lighting / Composition / Details / Quality.&lt;/li&gt;
&lt;li&gt;Iterate repeatedly: Tell the model “the background in version 3 is too cluttered, please simplify it.”&lt;/li&gt;
&lt;li&gt;Pay attention to copyright and portrait rights compliance.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Reminder: Before using AI-generated content for commercial purposes, verify copyright and licensing risks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;for-advanced-education-structured-review--self-testing--self-study-partner&quot;&gt;For Advanced Education: Structured Review / Self-Testing / Self-Study Partner&lt;/h2&gt;&lt;a href=&quot;#for-advanced-education-structured-review--self-testing--self-study-partner&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “For Advanced Education: Structured Review / Self-Testing / Self-Study Partner”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Use AI as an “active learning driver”: have it summarize, extract key points, create questions, grade, and role-play as a tutor.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended Tools:&lt;/strong&gt; ChatGPT (general + plugins), Bing (for real-time information), WolframAlpha (for mathematical rigor), GitHub Copilot (for programming), language apps (DuoLingo AI mode).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Prompts:&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Please explain the superposition state in quantum mechanics using an analogy. Requirements: 1 real-life analogy + 1 formal description.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;From the following notes (paste), please extract: core concepts / key conclusions / easily confused points (in a table or list).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;You are a history teacher. Create 10 multiple-choice questions on modern history; provide the answers and explanations at the end, and label the key knowledge points.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Please act as an English writing coach: here is a paragraph I wrote (paste). First, point out the problems, then give suggestions for improvement and a revised version.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Effective Strategies:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Limit the output structure (e.g., “only give three levels of points, each no more than 12 words”).&lt;/li&gt;
&lt;li&gt;Ask it to “list points you are unsure about or that might be incorrect.”&lt;/li&gt;
&lt;li&gt;Use a “if I answer incorrectly, keep asking until I understand” loop for learning.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pitfalls to Avoid:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When it conflicts with textbooks: ask for its source/possible reasons for conflict.&lt;/li&gt;
&lt;li&gt;For formulas/data: demand “step-by-step derivation” to prevent hallucinations.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;AI is a “multi-scenario general enhancement tool”: it can empower conversation, analysis, popular science, creation, and learning.
Core Principles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clearly define roles and tasks&lt;/li&gt;
&lt;li&gt;Use structured prompts&lt;/li&gt;
&lt;li&gt;Follow up and verify&lt;/li&gt;
&lt;li&gt;It’s a tool, not an authority&lt;/li&gt;
&lt;li&gt;Responsibility and decision-making are still yours&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;In what scenarios have you used AI? Feel free to share your interesting experiences. If you found this helpful, share it to help more people avoid pitfalls and be more efficient.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;universal-prompt-template-reference-reusable&quot;&gt;Universal Prompt Template Reference (Reusable)&lt;/h2&gt;&lt;a href=&quot;#universal-prompt-template-reference-reusable&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Universal Prompt Template Reference (Reusable)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Your current role: {Role}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Goal: {Problem to solve / Output format}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Background material: {Paste or leave blank}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Output structure: {List / Table / Step-by-step}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Constraints: {Word count / Tone / Language}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Please provide an outline first, and wait for me to type &quot;continue&quot; before expanding.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Disclaimer: The content in this article regarding investment and health is for informational purposes only and does not constitute investment, medical, legal, or professional advice; please consult authoritative channels and professionals.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded><category>AI</category></item><item><title>Build a WeChat Chat Daily Report with Claude Code: chatlog + MCP in 3 Steps</title><link>https://www.vibesparking.com/en/blog/ai/claude-code/chatlog/2025-09-18-claude-code-chatlog-wechat-daily-report/</link><guid isPermaLink="true">https://www.vibesparking.com/en/blog/ai/claude-code/chatlog/2025-09-18-claude-code-chatlog-wechat-daily-report/</guid><pubDate>Thu, 18 Sep 2025 00:00:00 GMT</pubDate><content:encoded>&lt;!-- # Build a WeChat Chat Daily Report with Claude Code: chatlog + MCP in 3 Steps --&gt;
&lt;blockquote&gt;
&lt;p&gt;Turn yesterday’s group and private chats into a one‑click daily report: top keywords, key people, to‑dos, and risk alerts — fully automated.&lt;br&gt;
This guide walks you through using Claude Code + chatlog to squeeze insights from chat data, with copy‑paste‑ready prompts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h2 id=&quot;what-youll-get&quot;&gt;What You’ll Get&lt;/h2&gt;&lt;a href=&quot;#what-youll-get&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “What You’ll Get”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;End‑to‑end flow: export/decrypt → start HTTP → connect to Claude Code (MCP) → one‑click daily report&lt;/li&gt;
&lt;li&gt;Prompt templates: ready to copy for data fetch, analysis/aggregation, and report generation (Markdown/HTML/images)&lt;/li&gt;
&lt;li&gt;Best practices: keyword radar, sensitive‑term alerts, to‑do extraction, sentiment curve&lt;/li&gt;
&lt;li&gt;Pitfall checklist: keys, SIP, remote/local connectors, CSV/audio&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;chatlog is an open‑source tool that supports local WeChat database access, automatic decryption, HTTP API, Webhook, and MCP Streamable HTTP, so Claude Code can use it directly as a “data tool”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;1-setup-10-minutes&quot;&gt;1. Setup (10 minutes)&lt;/h1&gt;&lt;a href=&quot;#1-setup-10-minutes&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1. Setup (10 minutes)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;1-install-and-start-chatlog-local&quot;&gt;1) Install and start chatlog (local)&lt;/h3&gt;&lt;a href=&quot;#1-install-and-start-chatlog-local&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “1) Install and start chatlog (local)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Install (choose one)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;go&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;install&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;github.com/sjzar/chatlog@latest&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Or download a prebuilt binary from Releases&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;In the TUI, select Decrypt Data → Start HTTP Service (default &lt;code dir=&quot;auto&quot;&gt;http://127.0.0.1:5030&lt;/code&gt;).&lt;br&gt;
API examples:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;GET /api/v1/chatlog?time=2025-09-17&amp;#x26;talker=wxid_xxx&amp;#x26;format=json&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;GET /api/v1/contact&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;GET /api/v1/session&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Supports &lt;code dir=&quot;auto&quot;&gt;YYYY-MM-DD&lt;/code&gt; or &lt;code dir=&quot;auto&quot;&gt;YYYY-MM-DD~YYYY-MM-DD&lt;/code&gt; windows; &lt;code dir=&quot;auto&quot;&gt;format&lt;/code&gt; supports &lt;code dir=&quot;auto&quot;&gt;json/csv/text&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: First obtain the data key/image key. On macOS, you may need to temporarily disable SIP to extract keys (re‑enable afterwards).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;2-expose-chatlog-to-claude-code-as-an-mcp-server&quot;&gt;2) Expose chatlog to Claude Code as an MCP server&lt;/h3&gt;&lt;a href=&quot;#2-expose-chatlog-to-claude-code-as-an-mcp-server&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2) Expose chatlog to Claude Code as an MCP server”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;chatlog natively supports MCP Streamable HTTP. Once HTTP is running, the endpoint is:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;GET http://127.0.0.1:5030/mcp&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Add a remote MCP in Claude Code:&lt;/p&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Syntax from the official example: claude mcp add --transport http &amp;#x3C;name&gt; &amp;#x3C;url&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;claude&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;mcp&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;add&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--transport&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;http&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;chatlog&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;http://127.0.0.1:5030/mcp&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Then in Claude Code, use &lt;code dir=&quot;auto&quot;&gt;/mcp&lt;/code&gt; to manage and use tools.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MCP is an open standard by Anthropic with Streamable HTTP transport and OAuth/Token auth, making it easy to plug external data into AI assistants.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Remote MCP support is being rolled out. You can also use local STDIO. Capabilities depend on your account and version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;2-a-lowfriction-daily-report-structure-claude-can-generate-it-directly&quot;&gt;2. A low‑friction daily report structure (Claude can generate it directly)&lt;/h1&gt;&lt;a href=&quot;#2-a-lowfriction-daily-report-structure-claude-can-generate-it-directly&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “2. A low‑friction daily report structure (Claude can generate it directly)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Today’s overview: total messages, active sessions, top groups/DMs, peak hours&lt;/li&gt;
&lt;li&gt;Keyword radar: TF‑IDF/key phrases/topic clustering (merge synonyms)&lt;/li&gt;
&lt;li&gt;Task extraction: a to‑do list triggered by phrases like “tomorrow/tonight/please/help me/to‑do/schedule”&lt;/li&gt;
&lt;li&gt;Risk alerts: custom sensitive/compliance term hits with counts and context&lt;/li&gt;
&lt;li&gt;Sentiment curve: hourly distribution (positive/neutral/negative) with anomalous peaks highlighted&lt;/li&gt;
&lt;li&gt;High‑value snippets: top 5 highest information‑density excerpts (with session name/timestamp/message ID)&lt;/li&gt;
&lt;li&gt;Appendix: raw data links (APIs can deep‑link to decrypted images/files/audio streams)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;3-claude-code-prompts-copypaste-ready&quot;&gt;3. Claude Code prompts (copy‑paste ready)&lt;/h1&gt;&lt;a href=&quot;#3-claude-code-prompts-copypaste-ready&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “3. Claude Code prompts (copy‑paste ready)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Usage: replace variables in &lt;code dir=&quot;auto&quot;&gt;{}&lt;/code&gt;; paste directly into Claude Code.&lt;br&gt;
Below includes the recommended MCP approach and an HTTP‑only fallback (curl/script).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;h3 id=&quot;a-connection-check--list-tools&quot;&gt;A. Connection check &amp;#x26; list tools&lt;/h3&gt;&lt;a href=&quot;#a-connection-check--list-tools&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “A. Connection check &amp;#x26; list tools”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;You are now connected to an MCP server: name=chatlog, endpoint=http://127.0.0.1:5030/mcp.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;1) List all tools/resources provided by chatlog and briefly describe their purpose.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;2) Check whether it can query chat logs, contacts, session lists, and media access.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;3) If there are pagination/limit parameters, tell me the defaults and maximums.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;b-fetch-all-messages-from-yesterday-grouped-by-session&quot;&gt;B. Fetch all messages from yesterday (grouped by session)&lt;/h3&gt;&lt;a href=&quot;#b-fetch-all-messages-from-yesterday-grouped-by-session&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “B. Fetch all messages from yesterday (grouped by session)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Goal: Generate the “WeChat Chat Daily Report ({date})”.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Data fetch requirements:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Date range: {date} 00:00:00 ~ {date} 23:59:59 (local timezone)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Fetch up to {per_chat_limit} per session, up to {global_limit} overall&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Fields: time, talker, isChatRoom, sender, content, type, subType&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- If a message has media (image/file/audio), record an accessible URL&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Actions:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Call chatlog’s tool/HTTP API: /api/v1/chatlog?time={date}~{date}&amp;#x26;format=json&amp;#x26;limit={global_limit}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- On failure, retry 2 times and record failed sessions&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Aggregate results by session ID; summarize per‑session message counts and an activity histogram&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Output: generate data.json (containing raw and aggregated data)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;(API shape per README; chatlog dynamically decrypts/serves media as accessible paths.)&lt;/p&gt;
&lt;div&gt;&lt;h3 id=&quot;c-keyword-radar--todo-extraction&quot;&gt;C. Keyword radar &amp;#x26; to‑do extraction&lt;/h3&gt;&lt;a href=&quot;#c-keyword-radar--todo-extraction&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “C. Keyword radar &amp;#x26; to‑do extraction”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;For data.json:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;1) Perform Chinese tokenization + stopword removal + synonym merging (e.g., “OK/好的/行/可以” consolidated).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;2) Output the top 20 keywords (weights, example sentences, and the sessions where they frequently appear).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;3) Using rules + LLM, extract to‑dos (owner, action verb, due time, context link).&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;4) Maintain a sensitive term list (I’ll supply) and produce hit counts with a ±3‑sentence context window.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Outputs: keywords.json, todos.json, alerts.json&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;d-sentiment-and-peak-hours&quot;&gt;D. Sentiment and peak hours&lt;/h3&gt;&lt;a href=&quot;#d-sentiment-and-peak-hours&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “D. Sentiment and peak hours”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Assign a coarse sentiment label (positive/neutral/negative) to each message and aggregate by hour into a curve.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Detect anomalous peaks (e.g., &gt;3σ) and list the sessions and key snippets responsible.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Outputs: sentiment_by_hour.csv, peaks.md (with explanations)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;button title=&quot;Copy to clipboard&quot; data-copied=&quot;Copied!&quot; data-code=&quot;&quot;&gt;3σ) and list the sessions and key snippets responsible.Outputs: sentiment_by_hour.csv, peaks.md (with explanations)&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/button&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;e-generate-the-report-markdown--html--images&quot;&gt;E. Generate the report (Markdown + HTML + images)&lt;/h3&gt;&lt;a href=&quot;#e-generate-the-report-markdown--html--images&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “E. Generate the report (Markdown + HTML + images)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;plaintext&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Assemble {keywords.json, todos.json, alerts.json, sentiment_by_hour.csv} into the “Chat Daily Report ({date})”.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Layout:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Today’s overview (include a data table)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Keyword radar (word cloud + one‑line summary per term)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- To‑do list (owner/due/link)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Risk alerts (term/count/context jump)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Sentiment curve (line chart)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Top 5 high‑value snippets (with session name/timestamp)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;Requirements:&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- First output Markdown (report.md), then render a minimalist HTML (report.html with inline styles)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Images: generate two figures (word cloud, sentiment curve) in ./assets and reference in HTML&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#d6deeb;--1:#403f53&quot;&gt;- Provide a final “one‑click copy” Markdown block&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div&gt;&lt;h3 id=&quot;f-quick-httponly-fallback-no-mcp-required&quot;&gt;F. Quick HTTP‑only fallback (no MCP required)&lt;/h3&gt;&lt;a href=&quot;#f-quick-httponly-fallback-no-mcp-required&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “F. Quick HTTP‑only fallback (no MCP required)”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Terminal window&lt;/span&gt;&lt;/figcaption&gt;&lt;pre data-language=&quot;bash&quot;&gt;&lt;code&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#919F9F;--1:#5F636F&quot;&gt;# Fetch yesterday’s data (JSON)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;curl&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;-G&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;http://127.0.0.1:5030/api/v1/chatlog&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;\&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--data-urlencode&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;time=2025-09-17~2025-09-17&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;\&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--data-urlencode&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;limit=5000&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#F78C6C;--1:#AA0982&quot;&gt;\&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;--0:#82AAFF;--1:#3B61B0&quot;&gt;--data-urlencode&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#984E4D&quot;&gt;format=json&lt;/span&gt;&lt;span style=&quot;--0:#D9F5DD;--1:#111111&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#7FDBCA;--1:#096E72&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;--0:#D6DEEB;--1:#403F53&quot;&gt; &lt;/span&gt;&lt;span style=&quot;--0:#ECC48D;--1:#3B61B0&quot;&gt;data.json&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div&gt;&lt;button title=&quot;Copy to clipboard&quot; data-copied=&quot;Copied!&quot; data-code=&quot;&quot;&gt; data.json&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/button&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;API params and media decryption/serving are provided by chatlog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;4-best-practices-make-the-report-smarter&quot;&gt;4. Best practices: make the report smarter&lt;/h1&gt;&lt;a href=&quot;#4-best-practices-make-the-report-smarter&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “4. Best practices: make the report smarter”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Synonym map: normalize common colloquialisms to reduce word‑cloud noise.&lt;/li&gt;
&lt;li&gt;To‑do extraction rules: regex + few‑shot tuned to phrases like “help me”, “remember to”, “by tonight”.&lt;/li&gt;
&lt;li&gt;Role profiling: score members by talk density/influence to spot “information sources”.&lt;/li&gt;
&lt;li&gt;Webhook increments: pair chatlog’s Webhook with your middleware to push deltas as new messages arrive.&lt;/li&gt;
&lt;li&gt;CSV/audio: recent versions improved CSV and audio pipelines — check the Releases Changelog.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;5-pitfall-checklist&quot;&gt;5. Pitfall checklist&lt;/h1&gt;&lt;a href=&quot;#5-pitfall-checklist&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “5. Pitfall checklist”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Only process data you legally own. Respect privacy and platform terms; the project emphasizes this as well.&lt;/li&gt;
&lt;li&gt;On macOS, obtaining keys may require temporarily disabling SIP; re‑enable afterwards.&lt;/li&gt;
&lt;li&gt;Remote MCP support is rolling out; local STDIO is more stable. Check your account/version.&lt;/li&gt;
&lt;li&gt;MCP connection syntax follows the official docs: &lt;code dir=&quot;auto&quot;&gt;claude mcp add --transport http &amp;#x3C;name&gt; &amp;#x3C;url&gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;MCP concepts/auth: use Streamable HTTP with standard auth for safer team deployments.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;6-advanced-portable-sources--team-sharing&quot;&gt;6. Advanced: portable sources &amp;#x26; team sharing&lt;/h1&gt;&lt;a href=&quot;#6-advanced-portable-sources--team-sharing&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “6. Advanced: portable sources &amp;#x26; team sharing”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Deploy chatlog with Docker on a NAS and pre‑set &lt;code dir=&quot;auto&quot;&gt;CHATLOG_WEBHOOK_*&lt;/code&gt; env vars to integrate your toolchain.&lt;/li&gt;
&lt;li&gt;Use Claude Connectors/MCP catalogs to manage multiple sources so non‑technical teammates can connect with a click.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div&gt;&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;&lt;a href=&quot;#conclusion&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path fill=&quot;currentcolor&quot; d=&quot;m12.11 15.39-3.88 3.88a2.52 2.52 0 0 1-3.5 0 2.47 2.47 0 0 1 0-3.5l3.88-3.88a1 1 0 0 0-1.42-1.42l-3.88 3.89a4.48 4.48 0 0 0 6.33 6.33l3.89-3.88a1 1 0 1 0-1.42-1.42Zm8.58-12.08a4.49 4.49 0 0 0-6.33 0l-3.89 3.88a1 1 0 0 0 1.42 1.42l3.88-3.88a2.52 2.52 0 0 1 3.5 0 2.47 2.47 0 0 1 0 3.5l-3.88 3.88a1 1 0 1 0 1.42 1.42l3.88-3.89a4.49 4.49 0 0 0 0-6.33ZM8.83 15.17a1 1 0 0 0 1.1.22 1 1 0 0 0 .32-.22l4.92-4.92a1 1 0 0 0-1.42-1.42l-4.92 4.92a1 1 0 0 0 0 1.42Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span&gt;Section titled “Conclusion”&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Treat chats as data and use Claude Code to refine them into an actionable team daily.&lt;br&gt;
Spend 3 minutes skimming each day and get time back for what actually matters.&lt;/p&gt;&lt;!-- 
---

# Appendix: Images &amp; visualization (prompt suggestions)

&gt; Text in images: English only; style: illustration; aspect: 2:1

Cover image prompt
“Daily chat intelligence report, dashboard vibe, minimalist, clean UI elements, abstract bubbles and message icons, subtle graphs and word cloud hints, high contrast lighting, vector illustration, 2:1”

Section image prompt (Keyword radar)
“Keyword radar for chat analysis, radial diagram with tags and weights, crisp lines, soft gradients, vector illustration, 2:1”

Section image prompt (Sentiment curve)
“Emotion trend over 24 hours, smooth line chart with peaks and annotations, minimal grid, vector illustration, 2:1”

Section image prompt (To‑do list)
“Action items checklist derived from chats, sticky notes and checkmarks, productivity theme, vector illustration, 2:1”

--&gt;</content:encoded><category>Claude Code</category><category>chatlog</category><category>MCP</category><category>WeChat</category></item></channel></rss>